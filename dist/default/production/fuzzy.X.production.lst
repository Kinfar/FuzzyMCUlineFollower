

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Oct 25 18:41:24 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1
    11                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    12                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataBANK0
    54  0065DE                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _countup
    58  0065DE  0001               	dw	1
    59  0000                     _CCP1CON	set	4029
    60  0000                     _CCP2CON	set	4026
    61  0000                     _CCPR1L	set	4030
    62  0000                     _CCPR2L	set	4027
    63  0000                     _OSCCONbits	set	4051
    64  0000                     _PIE1bits	set	3997
    65  0000                     _PIR1bits	set	3998
    66  0000                     _PORTA	set	3968
    67  0000                     _PORTAbits	set	3968
    68  0000                     _PORTB	set	3969
    69  0000                     _PORTBbits	set	3969
    70  0000                     _PORTC	set	3970
    71  0000                     _PORTD	set	3971
    72  0000                     _PORTDbits	set	3971
    73  0000                     _PORTE	set	3972
    74  0000                     _PR2	set	4043
    75  0000                     _T2CON	set	4042
    76  0000                     _T2CONbits	set	4042
    77  0000                     _TMR2	set	4044
    78  0000                     _TRISA	set	3986
    79  0000                     _TRISB	set	3987
    80  0000                     _TRISBbits	set	3987
    81  0000                     _TRISC	set	3988
    82  0000                     _TRISCbits	set	3988
    83  0000                     _TRISD	set	3989
    84  0000                     _TRISE	set	3990
    85                           
    86                           ; #config settings
    87  0000                     
    88                           	psect	cinit
    89  0066C6                     __pcinit:
    90                           	opt stack 0
    91  0066C6                     start_initialization:
    92                           	opt stack 0
    93  0066C6                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Clear objects allocated to BANK0 (4 bytes)
    97  0066C6  0100               	movlb	0
    98  0066C8  6BED               	clrf	(__pbssBANK0+3)& (0+255),b
    99  0066CA  6BEC               	clrf	(__pbssBANK0+2)& (0+255),b
   100  0066CC  6BEB               	clrf	(__pbssBANK0+1)& (0+255),b
   101  0066CE  6BEA               	clrf	__pbssBANK0& (0+255),b
   102                           
   103                           ; Clear objects allocated to COMRAM (1 bytes)
   104  0066D0  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   105                           
   106                           ; Initialize objects allocated to BANK0 (2 bytes)
   107                           ; load TBLPTR registers with __pidataBANK0
   108  0066D2  0EDE               	movlw	low __pidataBANK0
   109  0066D4  6EF6               	movwf	tblptrl,c
   110  0066D6  0E65               	movlw	high __pidataBANK0
   111  0066D8  6EF7               	movwf	tblptrh,c
   112  0066DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   113  0066DC  6EF8               	movwf	tblptru,c
   114  0066DE  0009               	tblrd		*+	;fetch initializer
   115  0066E0  CFF5 F0EE          	movff	tablat,__pdataBANK0
   116  0066E4  0009               	tblrd		*+	;fetch initializer
   117  0066E6  CFF5 F0EF          	movff	tablat,__pdataBANK0+1
   118  0066EA                     end_of_initialization:
   119                           	opt stack 0
   120  0066EA                     __end_of__initialization:
   121                           	opt stack 0
   122  0066EA  0100               	movlb	0
   123  0066EC  EFA4  F035         	goto	_main	;jump to C main() function
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           tblptrl	equ	0xFF6
   127                           tablat	equ	0xFF5
   128                           
   129                           	psect	bssCOMRAM
   130  00005F                     __pbssCOMRAM:
   131                           	opt stack 0
   132  00005F                     _Timer2Config:
   133                           	opt stack 0
   134  00005F                     	ds	1
   135                           tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           tblptrl	equ	0xFF6
   138                           tablat	equ	0xFF5
   139                           
   140                           	psect	bssBANK0
   141  0000EA                     __pbssBANK0:
   142                           	opt stack 0
   143  0000EA                     _DutyCycle:
   144                           	opt stack 0
   145  0000EA                     	ds	2
   146  0000EC                     _i:
   147                           	opt stack 0
   148  0000EC                     	ds	2
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           
   154                           	psect	dataBANK0
   155  0000EE                     __pdataBANK0:
   156                           	opt stack 0
   157  0000EE                     _countup:
   158                           	opt stack 0
   159  0000EE                     	ds	2
   160                           tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           tblptrl	equ	0xFF6
   163                           tablat	equ	0xFF5
   164                           
   165                           	psect	cstackBANK6
   166  000600                     __pcstackBANK6:
   167                           	opt stack 0
   168  000600                     fuzzy_system_single2@x:
   169                           	opt stack 0
   170  000600                     fuzzy_system_single1@x:
   171                           	opt stack 0
   172                           
   173                           ; 120 bytes @ 0x0
   174  000600                     	ds	120
   175  000678                     fuzzy_system_single2@y:
   176                           	opt stack 0
   177  000678                     fuzzy_system_single1@y:
   178                           	opt stack 0
   179                           
   180                           ; 120 bytes @ 0x78
   181  000678                     	ds	120
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           tblptrl	equ	0xFF6
   185                           tablat	equ	0xFF5
   186                           
   187                           	psect	cstackBANK5
   188  000500                     __pcstackBANK5:
   189                           	opt stack 0
   190  000500                     fuzzy_system_single2@cons_mf3:
   191                           	opt stack 0
   192  000500                     fuzzy_system_single1@cons_mf3:
   193                           	opt stack 0
   194                           
   195                           ; 120 bytes @ 0x0
   196  000500                     	ds	120
   197  000578                     fuzzy_system_single2@overall_out_mf:
   198                           	opt stack 0
   199  000578                     fuzzy_system_single1@overall_out_mf:
   200                           	opt stack 0
   201                           
   202                           ; 120 bytes @ 0x78
   203  000578                     	ds	120
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           
   209                           	psect	cstackBANK4
   210  000400                     __pcstackBANK4:
   211                           	opt stack 0
   212  000400                     fuzzy_system_single2@qualified_cons_mf3:
   213                           	opt stack 0
   214  000400                     fuzzy_system_single1@qualified_cons_mf3:
   215                           	opt stack 0
   216                           
   217                           ; 120 bytes @ 0x0
   218  000400                     	ds	120
   219  000478                     fuzzy_system_single2@qualified_cons_mf2:
   220                           	opt stack 0
   221  000478                     fuzzy_system_single1@qualified_cons_mf2:
   222                           	opt stack 0
   223                           
   224                           ; 120 bytes @ 0x78
   225  000478                     	ds	120
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           
   231                           	psect	cstackBANK3
   232  000300                     __pcstackBANK3:
   233                           	opt stack 0
   234  000300                     fuzzy_system_single2@cons_mf1:
   235                           	opt stack 0
   236  000300                     fuzzy_system_single1@cons_mf1:
   237                           	opt stack 0
   238                           
   239                           ; 120 bytes @ 0x0
   240  000300                     	ds	120
   241  000378                     fuzzy_system_single2@qualified_cons_mf1:
   242                           	opt stack 0
   243  000378                     fuzzy_system_single1@qualified_cons_mf1:
   244                           	opt stack 0
   245                           
   246                           ; 120 bytes @ 0x78
   247  000378                     	ds	120
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           
   253                           	psect	cstackBANK2
   254  000200                     __pcstackBANK2:
   255                           	opt stack 0
   256  000200                     fuzzy_system_single2@cons_mf2:
   257                           	opt stack 0
   258  000200                     fuzzy_system_single1@cons_mf2:
   259                           	opt stack 0
   260                           
   261                           ; 120 bytes @ 0x0
   262  000200                     	ds	120
   263  000278                     fuzzy_system_single2@ante_mf3:
   264                           	opt stack 0
   265  000278                     fuzzy_system_single1@ante_mf3:
   266                           	opt stack 0
   267                           
   268                           ; 120 bytes @ 0x78
   269  000278                     	ds	120
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           
   275                           	psect	cstackBANK1
   276  000100                     __pcstackBANK1:
   277                           	opt stack 0
   278  000100                     fuzzy_system_single2@ante_mf1:
   279                           	opt stack 0
   280  000100                     fuzzy_system_single1@ante_mf1:
   281                           	opt stack 0
   282                           
   283                           ; 120 bytes @ 0x0
   284  000100                     	ds	120
   285  000178                     fuzzy_system_single2@ante_mf2:
   286                           	opt stack 0
   287  000178                     fuzzy_system_single1@ante_mf2:
   288                           	opt stack 0
   289                           
   290                           ; 120 bytes @ 0x78
   291  000178                     	ds	120
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           
   297                           	psect	cstackBANK0
   298  000060                     __pcstackBANK0:
   299                           	opt stack 0
   300  000060                     tri_mf@temp:
   301                           	opt stack 0
   302                           
   303                           ; 120 bytes @ 0x0
   304  000060                     	ds	120
   305  0000D8                     tri_mf@i:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x78
   309  0000D8                     	ds	2
   310  0000DA                     fuzzy_system_single2@output:
   311                           	opt stack 0
   312  0000DA                     fuzzy_system_single1@output:
   313                           	opt stack 0
   314                           
   315                           ; 3 bytes @ 0x7A
   316  0000DA                     	ds	3
   317  0000DD                     ??_main:
   318                           
   319                           ; 0 bytes @ 0x7D
   320  0000DD                     	ds	4
   321  0000E1                     main@b:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0x81
   325  0000E1                     	ds	3
   326  0000E4                     _main$1474:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0x84
   330  0000E4                     	ds	3
   331  0000E7                     main@a:
   332                           	opt stack 0
   333                           
   334                           ; 3 bytes @ 0x87
   335  0000E7                     	ds	3
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           
   341                           	psect	cstackCOMRAM
   342  000001                     __pcstackCOMRAM:
   343                           	opt stack 0
   344  000001                     ??_OpenPWM2:
   345  000001                     ?_getCNY70Value:
   346                           	opt stack 0
   347  000001                     ?___wmul:
   348                           	opt stack 0
   349  000001                     ?___ftpack:
   350                           	opt stack 0
   351  000001                     ?___ftneg:
   352                           	opt stack 0
   353  000001                     OpenPWM1@period:
   354                           	opt stack 0
   355  000001                     SetDCPWM1@dutycycle:
   356                           	opt stack 0
   357  000001                     SetDCPWM2@dutycycle:
   358                           	opt stack 0
   359  000001                     ___wmul@multiplier:
   360                           	opt stack 0
   361  000001                     ___ftpack@arg:
   362                           	opt stack 0
   363  000001                     ___ftneg@f1:
   364                           	opt stack 0
   365                           
   366                           ; 3 bytes @ 0x0
   367  000001                     	ds	1
   368  000002                     PWM_init1@period:
   369                           	opt stack 0
   370  000002                     OpenPWM2@period:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x1
   374  000002                     	ds	1
   375  000003                     ??_SetDCPWM1:
   376  000003                     ??_SetDCPWM2:
   377  000003                     OpenPWM2@ccp2mx:
   378                           	opt stack 0
   379  000003                     ___wmul@multiplicand:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x2
   383  000003                     	ds	1
   384  000004                     PWM_init2@period:
   385                           	opt stack 0
   386  000004                     ___ftpack@exp:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x3
   390  000004                     	ds	1
   391  000005                     ___ftpack@sign:
   392                           	opt stack 0
   393  000005                     SetDCPWM1@DCycle:
   394                           	opt stack 0
   395  000005                     SetDCPWM2@DCycle:
   396                           	opt stack 0
   397  000005                     ___wmul@product:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x4
   401  000005                     	ds	1
   402  000006                     ??___ftpack:
   403                           
   404                           ; 0 bytes @ 0x5
   405  000006                     	ds	1
   406  000007                     ___ftge@ff1:
   407                           	opt stack 0
   408                           
   409                           ; 3 bytes @ 0x6
   410  000007                     	ds	2
   411  000009                     ?___awtoft:
   412                           	opt stack 0
   413  000009                     ?___lbtoft:
   414                           	opt stack 0
   415  000009                     ___awtoft@c:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x8
   419  000009                     	ds	1
   420  00000A                     ___ftge@ff2:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0x9
   424  00000A                     	ds	2
   425  00000C                     ___awtoft@sign:
   426                           	opt stack 0
   427  00000C                     ___lbtoft@c:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0xB
   431  00000C                     	ds	1
   432  00000D                     ??___ftge:
   433  00000D                     ?___ftmul:
   434                           	opt stack 0
   435  00000D                     ___ftmul@f1:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0xC
   439  00000D                     	ds	3
   440  000010                     qualified@y:
   441                           	opt stack 0
   442  000010                     out_mf@result:
   443                           	opt stack 0
   444  000010                     ___ftmul@f2:
   445                           	opt stack 0
   446                           
   447                           ; 3 bytes @ 0xF
   448  000010                     	ds	2
   449  000012                     qualified@x:
   450                           	opt stack 0
   451  000012                     out_mf@x:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x11
   455  000012                     	ds	1
   456  000013                     ??___ftmul:
   457                           
   458                           ; 0 bytes @ 0x12
   459  000013                     	ds	1
   460  000014                     out_mf@y:
   461                           	opt stack 0
   462  000014                     qualified@w:
   463                           	opt stack 0
   464                           
   465                           ; 3 bytes @ 0x13
   466  000014                     	ds	2
   467  000016                     ___ftmul@exp:
   468                           	opt stack 0
   469  000016                     out_mf@z:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x15
   473  000016                     	ds	1
   474  000017                     qualified@min:
   475                           	opt stack 0
   476  000017                     ___ftmul@f3_as_product:
   477                           	opt stack 0
   478                           
   479                           ; 3 bytes @ 0x16
   480  000017                     	ds	1
   481  000018                     out_mf@i:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x17
   485  000018                     	ds	2
   486  00001A                     ___ftmul@cntr:
   487                           	opt stack 0
   488  00001A                     qualified@i:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x19
   492  00001A                     	ds	1
   493  00001B                     ___ftmul@sign:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x1A
   497  00001B                     	ds	1
   498  00001C                     ?___ftadd:
   499                           	opt stack 0
   500  00001C                     ?___fttol:
   501                           	opt stack 0
   502  00001C                     ___ftadd@f1:
   503                           	opt stack 0
   504  00001C                     ___fttol@f1:
   505                           	opt stack 0
   506                           
   507                           ; 3 bytes @ 0x1B
   508  00001C                     	ds	3
   509  00001F                     ___ftadd@f2:
   510                           	opt stack 0
   511                           
   512                           ; 3 bytes @ 0x1E
   513  00001F                     	ds	1
   514  000020                     ??___fttol:
   515                           
   516                           ; 0 bytes @ 0x1F
   517  000020                     	ds	2
   518  000022                     ??___ftadd:
   519                           
   520                           ; 0 bytes @ 0x21
   521  000022                     	ds	3
   522  000025                     ___ftadd@sign:
   523                           	opt stack 0
   524  000025                     ___fttol@sign1:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x24
   528  000025                     	ds	1
   529  000026                     ___ftadd@exp2:
   530                           	opt stack 0
   531  000026                     ___fttol@lval:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0x25
   535  000026                     	ds	1
   536  000027                     ___ftadd@exp1:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x26
   540  000027                     	ds	1
   541  000028                     ?___ftdiv:
   542                           	opt stack 0
   543  000028                     ___ftdiv@f1:
   544                           	opt stack 0
   545                           
   546                           ; 3 bytes @ 0x27
   547  000028                     	ds	2
   548  00002A                     ___fttol@exp1:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x29
   552  00002A                     	ds	1
   553  00002B                     ??_PWM_DutyCycle1:
   554  00002B                     ??_PWM_DutyCycle2:
   555  00002B                     ___ftdiv@f2:
   556                           	opt stack 0
   557                           
   558                           ; 3 bytes @ 0x2A
   559  00002B                     	ds	3
   560  00002E                     ??___ftdiv:
   561                           
   562                           ; 0 bytes @ 0x2D
   563  00002E                     	ds	1
   564  00002F                     PWM_DutyCycle1@DutyCycle:
   565                           	opt stack 0
   566  00002F                     PWM_DutyCycle2@DutyCycle:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x2E
   570  00002F                     	ds	2
   571  000031                     PWM_DutyCycle1@percentageDuty:
   572                           	opt stack 0
   573  000031                     PWM_DutyCycle2@percentageDuty:
   574                           	opt stack 0
   575  000031                     ___ftdiv@cntr:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x30
   579  000031                     	ds	1
   580  000032                     PWM_DutyCycle1@DC:
   581                           	opt stack 0
   582  000032                     PWM_DutyCycle2@DC:
   583                           	opt stack 0
   584  000032                     ___ftdiv@f3:
   585                           	opt stack 0
   586                           
   587                           ; 3 bytes @ 0x31
   588  000032                     	ds	2
   589  000034                     ??_mcu_init:
   590  000034                     go_back@m_left:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x33
   594  000034                     	ds	1
   595  000035                     go_back@m_right:
   596                           	opt stack 0
   597  000035                     ___ftdiv@exp:
   598                           	opt stack 0
   599  000035                     mcu_init@i:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x34
   603  000035                     	ds	1
   604  000036                     ___ftdiv@sign:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x35
   608  000036                     	ds	1
   609  000037                     ?_triangular:
   610                           	opt stack 0
   611  000037                     ?_defuzzy:
   612                           	opt stack 0
   613  000037                     linspace@x:
   614                           	opt stack 0
   615  000037                     defuzzy@x:
   616                           	opt stack 0
   617  000037                     triangular@a:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x36
   621  000037                     	ds	2
   622  000039                     defuzzy@mf:
   623                           	opt stack 0
   624  000039                     linspace@start:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0x38
   628  000039                     	ds	1
   629  00003A                     triangular@b:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0x39
   633  00003A                     	ds	1
   634  00003B                     defuzzy@out:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x3A
   638  00003B                     	ds	1
   639  00003C                     linspace@end:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x3B
   643  00003C                     	ds	1
   644  00003D                     triangular@c:
   645                           	opt stack 0
   646                           
   647                           ; 3 bytes @ 0x3C
   648  00003D                     	ds	1
   649  00003E                     defuzzy@sum1:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x3D
   653  00003E                     	ds	1
   654  00003F                     linspace@size:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x3E
   658  00003F                     	ds	1
   659  000040                     triangular@x:
   660                           	opt stack 0
   661                           
   662                           ; 3 bytes @ 0x3F
   663  000040                     	ds	1
   664  000041                     ??_linspace:
   665  000041                     defuzzy@sum2:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0x40
   669  000041                     	ds	2
   670  000043                     linspace@i:
   671                           	opt stack 0
   672  000043                     triangular@ux:
   673                           	opt stack 0
   674                           
   675                           ; 3 bytes @ 0x42
   676  000043                     	ds	1
   677  000044                     defuzzy@i:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x43
   681  000044                     	ds	2
   682  000046                     tri_mf@t_value:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x45
   686  000046                     	ds	2
   687  000048                     tri_mf@x:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x47
   691  000048                     	ds	2
   692  00004A                     tri_mf@a:
   693                           	opt stack 0
   694                           
   695                           ; 3 bytes @ 0x49
   696  00004A                     	ds	3
   697  00004D                     tri_mf@b:
   698                           	opt stack 0
   699                           
   700                           ; 3 bytes @ 0x4C
   701  00004D                     	ds	3
   702  000050                     tri_mf@c:
   703                           	opt stack 0
   704                           
   705                           ; 3 bytes @ 0x4F
   706  000050                     	ds	3
   707  000053                     ?_fuzzy_system_single1:
   708                           	opt stack 0
   709  000053                     ?_fuzzy_system_single2:
   710                           	opt stack 0
   711  000053                     fuzzy_system_single2@input:
   712                           	opt stack 0
   713  000053                     fuzzy_system_single1@input:
   714                           	opt stack 0
   715                           
   716                           ; 3 bytes @ 0x52
   717  000053                     	ds	3
   718  000056                     fuzzy_system_single2@w1:
   719                           	opt stack 0
   720  000056                     fuzzy_system_single1@w1:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x55
   724  000056                     	ds	3
   725  000059                     fuzzy_system_single2@w2:
   726                           	opt stack 0
   727  000059                     fuzzy_system_single1@w2:
   728                           	opt stack 0
   729                           
   730                           ; 3 bytes @ 0x58
   731  000059                     	ds	3
   732  00005C                     fuzzy_system_single2@w3:
   733                           	opt stack 0
   734  00005C                     fuzzy_system_single1@w3:
   735                           	opt stack 0
   736                           
   737                           ; 3 bytes @ 0x5B
   738  00005C                     	ds	3
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 25 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  a               3  135[BANK0 ] PTR 
   754 ;;  b               3  129[BANK0 ] PTR 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  2   20[COMRAM] int 
   757 ;; Registers used:
   758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   764 ;;      Params:         0       0       0       0       0       0       0       0       0
   765 ;;      Locals:         0       9       0       0       0       0       0       0       0
   766 ;;      Temps:          0       4       0       0       0       0       0       0       0
   767 ;;      Totals:         0      13       0       0       0       0       0       0       0
   768 ;;Total ram usage:       13 bytes
   769 ;; Hardware stack levels required when called:    5
   770 ;; This function calls:
   771 ;;		_PWM_DutyCycle1
   772 ;;		___awtoft
   773 ;;		___fttol
   774 ;;		_fuzzy_system_single1
   775 ;;		_fuzzy_system_single2
   776 ;;		_getCNY70Value
   777 ;;		_go_back
   778 ;;		_mcu_init
   779 ;;		_motor_forward
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text0
   786  006B48                     __ptext0:
   787                           	opt stack 0
   788  006B48                     _main:
   789                           	opt stack 26
   790                           
   791                           ;main.c: 28: mcu_init();
   792                           
   793                           ;incstack = 0
   794  006B48  ECA5  F034         	call	_mcu_init	;wreg free
   795                           
   796                           ;main.c: 29: PORTAbits.RA0 = 1;
   797  006B4C  8080               	bsf	3968,0,c	;volatile
   798  006B4E                     l2649:
   799                           
   800                           ;main.c: 33: double a, b;
   801                           ;main.c: 42: a = fuzzy_system_single1(getCNY70Value());
   802  006B4E  EC48  F035         	call	_getCNY70Value	;wreg free
   803  006B52  C001  F009         	movff	?_getCNY70Value,___awtoft@c
   804  006B56  C002  F00A         	movff	?_getCNY70Value+1,___awtoft@c+1
   805  006B5A  ECCF  F033         	call	___awtoft	;wreg free
   806  006B5E  C009  F0E4         	movff	?___awtoft,_main$1474
   807  006B62  C00A  F0E5         	movff	?___awtoft+1,_main$1474+1
   808  006B66  C00B  F0E6         	movff	?___awtoft+2,_main$1474+2
   809                           
   810                           ;main.c: 33: double a, b;
   811                           ;main.c: 42: a = fuzzy_system_single1(getCNY70Value());
   812  006B6A  C0E4  F053         	movff	_main$1474,fuzzy_system_single1@input
   813  006B6E  C0E5  F054         	movff	_main$1474+1,fuzzy_system_single1@input+1
   814  006B72  C0E6  F055         	movff	_main$1474+2,fuzzy_system_single1@input+2
   815  006B76  EC7E  F03C         	call	_fuzzy_system_single1	;wreg free
   816  006B7A  C053  F0E7         	movff	?_fuzzy_system_single1,main@a
   817  006B7E  C054  F0E8         	movff	?_fuzzy_system_single1+1,main@a+1
   818  006B82  C055  F0E9         	movff	?_fuzzy_system_single1+2,main@a+2
   819                           
   820                           ;main.c: 43: b = fuzzy_system_single2(a);
   821  006B86  C0E7  F053         	movff	main@a,fuzzy_system_single2@input
   822  006B8A  C0E8  F054         	movff	main@a+1,fuzzy_system_single2@input+1
   823  006B8E  C0E9  F055         	movff	main@a+2,fuzzy_system_single2@input+2
   824  006B92  EC3F  F03E         	call	_fuzzy_system_single2	;wreg free
   825  006B96  C053  F0E1         	movff	?_fuzzy_system_single2,main@b
   826  006B9A  C054  F0E2         	movff	?_fuzzy_system_single2+1,main@b+1
   827  006B9E  C055  F0E3         	movff	?_fuzzy_system_single2+2,main@b+2
   828                           
   829                           ;main.c: 45: if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && PORTBb
      +                          its.RB4 == 1 && PORTBbits.RB1 == 1){
   830  006BA2  B481               	btfsc	3969,2,c	;volatile
   831  006BA4  A681               	btfss	3969,3,c	;volatile
   832  006BA6  D00B               	goto	l2667
   833  006BA8  B081               	btfsc	3969,0,c	;volatile
   834  006BAA  A881               	btfss	3969,4,c	;volatile
   835  006BAC  D008               	goto	l2667
   836  006BAE  A281               	btfss	3969,1,c	;volatile
   837  006BB0  D006               	goto	l2667
   838                           
   839                           ;main.c: 46: go_back(100,100);
   840  006BB2  0E64               	movlw	100
   841  006BB4  6E34               	movwf	go_back@m_left,c
   842  006BB6  0E64               	movlw	100
   843  006BB8  EC03  F033         	call	_go_back
   844                           
   845                           ;main.c: 47: }
   846  006BBC  D7C8               	goto	l2649
   847  006BBE                     l2667:
   848                           
   849                           ;main.c: 48: else{
   850                           ;main.c: 49: motor_forward();
   851  006BBE  ECF5  F032         	call	_motor_forward	;wreg free
   852                           
   853                           ;main.c: 50: PWM_DutyCycle1(a);
   854  006BC2  C0E7  F01C         	movff	main@a,___fttol@f1
   855  006BC6  C0E8  F01D         	movff	main@a+1,___fttol@f1+1
   856  006BCA  C0E9  F01E         	movff	main@a+2,___fttol@f1+2
   857  006BCE  EC0A  F036         	call	___fttol	;wreg free
   858  006BD2  C01C  F0DD         	movff	?___fttol,??_main
   859  006BD6  C01D  F0DE         	movff	?___fttol+1,??_main+1
   860  006BDA  C01E  F0DF         	movff	?___fttol+2,??_main+2
   861  006BDE  C01F  F0E0         	movff	?___fttol+3,??_main+3
   862  006BE2  0100               	movlb	0	; () banked
   863  006BE4  51DD               	movf	??_main& (0+255),w,b
   864  006BE6  ECF3  F033         	call	_PWM_DutyCycle1
   865                           
   866                           ;main.c: 51: PWM_DutyCycle1(b);
   867  006BEA  C0E1  F01C         	movff	main@b,___fttol@f1
   868  006BEE  C0E2  F01D         	movff	main@b+1,___fttol@f1+1
   869  006BF2  C0E3  F01E         	movff	main@b+2,___fttol@f1+2
   870  006BF6  EC0A  F036         	call	___fttol	;wreg free
   871  006BFA  C01C  F0DD         	movff	?___fttol,??_main
   872  006BFE  C01D  F0DE         	movff	?___fttol+1,??_main+1
   873  006C02  C01E  F0DF         	movff	?___fttol+2,??_main+2
   874  006C06  C01F  F0E0         	movff	?___fttol+3,??_main+3
   875  006C0A  0100               	movlb	0	; () banked
   876  006C0C  51DD               	movf	??_main& (0+255),w,b
   877  006C0E  ECF3  F033         	call	_PWM_DutyCycle1
   878  006C12  D79D               	goto	l2649
   879  006C14                     __end_of_main:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           
   886 ;; *************** function _motor_forward *****************
   887 ;; Defined at:
   888 ;;		line 47 in file "motor.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;		None               void
   895 ;; Registers used:
   896 ;;		None
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   902 ;;      Params:         0       0       0       0       0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_main
   912 ;;		_go_straight
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text1
   917  0065EA                     __ptext1:
   918                           	opt stack 0
   919  0065EA                     _motor_forward:
   920                           	opt stack 30
   921                           
   922                           ;motor.c: 49: PORTDbits.RD7 = 1;
   923                           
   924                           ;incstack = 0
   925  0065EA  8E83               	bsf	3971,7,c	;volatile
   926                           
   927                           ;motor.c: 50: PORTDbits.RD4 = 0;
   928  0065EC  9883               	bcf	3971,4,c	;volatile
   929                           
   930                           ;motor.c: 51: PORTDbits.RD2 = 1;
   931  0065EE  8483               	bsf	3971,2,c	;volatile
   932                           
   933                           ;motor.c: 52: PORTDbits.RD3 = 0;
   934  0065F0  9683               	bcf	3971,3,c	;volatile
   935                           
   936                           ;motor.c: 54: return;
   937  0065F2  0012               	return	
   938  0065F4                     __end_of_motor_forward:
   939                           	opt stack 0
   940                           tblptru	equ	0xFF8
   941                           tblptrh	equ	0xFF7
   942                           tblptrl	equ	0xFF6
   943                           tablat	equ	0xFF5
   944                           
   945 ;; *************** function _mcu_init *****************
   946 ;; Defined at:
   947 ;;		line 14 in file "funciones.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  i               2   52[COMRAM] int 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  2    2[COMRAM] int 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   961 ;;      Params:         0       0       0       0       0       0       0       0       0
   962 ;;      Locals:         2       0       0       0       0       0       0       0       0
   963 ;;      Temps:          1       0       0       0       0       0       0       0       0
   964 ;;      Totals:         3       0       0       0       0       0       0       0       0
   965 ;;Total ram usage:        3 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    3
   968 ;; This function calls:
   969 ;;		_PWM_DutyCycle1
   970 ;;		_PWM_DutyCycle2
   971 ;;		_PWM_init1
   972 ;;		_PWM_init2
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text2
   979  00694A                     __ptext2:
   980                           	opt stack 0
   981  00694A                     _mcu_init:
   982                           	opt stack 27
   983                           
   984                           ;funciones.c: 16: TRISA=TRISB=TRISC=TRISD=TRISE=0;
   985                           
   986                           ;incstack = 0
   987  00694A  0E00               	movlw	0
   988  00694C  6E96               	movwf	3990,c	;volatile
   989  00694E  CF96 FF95          	movff	3990,3989	;volatile
   990  006952  CF95 FF94          	movff	3989,3988	;volatile
   991  006956  CF94 FF93          	movff	3988,3987	;volatile
   992  00695A  CF93 FF92          	movff	3987,3986	;volatile
   993                           
   994                           ;funciones.c: 17: PORTA=PORTB=PORTC=PORTD=PORTE=0;
   995  00695E  0E00               	movlw	0
   996  006960  6E84               	movwf	3972,c	;volatile
   997  006962  CF84 FF83          	movff	3972,3971	;volatile
   998  006966  CF83 FF82          	movff	3971,3970	;volatile
   999  00696A  CF82 FF81          	movff	3970,3969	;volatile
  1000  00696E  CF81 FF80          	movff	3969,3968	;volatile
  1001                           
  1002                           ;funciones.c: 21: int i = 0;
  1003  006972  0E00               	movlw	0
  1004  006974  6E36               	movwf	mcu_init@i+1,c
  1005  006976  0E00               	movlw	0
  1006  006978  6E35               	movwf	mcu_init@i,c
  1007                           
  1008                           ;funciones.c: 22: _delay((unsigned long)((40)*(8000000/4000.0)));
  1009  00697A  0E68               	movlw	104
  1010  00697C  6E34               	movwf	??_mcu_init& (0+255),c
  1011  00697E  0EE4               	movlw	228
  1012  006980                     u3017:
  1013  006980  2EE8               	decfsz	wreg,f,c
  1014  006982  D7FE               	goto	u3017
  1015  006984  2E34               	decfsz	??_mcu_init& (0+255),f,c
  1016  006986  D7FC               	goto	u3017
  1017  006988  D000               	nop2	
  1018                           
  1019                           ;funciones.c: 23: OSCCONbits.IRCF = 0b111;
  1020  00698A  88D3               	bsf	4051,4,c	;volatile
  1021  00698C  8AD3               	bsf	4051,5,c	;volatile
  1022  00698E  8CD3               	bsf	4051,6,c	;volatile
  1023                           
  1024                           ;funciones.c: 28: TRISA = TRISB = TRISC = TRISD = TRISE = 0;
  1025  006990  0E00               	movlw	0
  1026  006992  6E96               	movwf	3990,c	;volatile
  1027  006994  CF96 FF95          	movff	3990,3989	;volatile
  1028  006998  CF95 FF94          	movff	3989,3988	;volatile
  1029  00699C  CF94 FF93          	movff	3988,3987	;volatile
  1030  0069A0  CF93 FF92          	movff	3987,3986	;volatile
  1031                           
  1032                           ;funciones.c: 29: PORTA = PORTB = PORTC = PORTD = PORTE = 0;
  1033  0069A4  0E00               	movlw	0
  1034  0069A6  6E84               	movwf	3972,c	;volatile
  1035  0069A8  CF84 FF83          	movff	3972,3971	;volatile
  1036  0069AC  CF83 FF82          	movff	3971,3970	;volatile
  1037  0069B0  CF82 FF81          	movff	3970,3969	;volatile
  1038  0069B4  CF81 FF80          	movff	3969,3968	;volatile
  1039                           
  1040                           ;funciones.c: 30: TRISCbits.TRISC7 = 1;
  1041  0069B8  8E94               	bsf	3988,7,c	;volatile
  1042                           
  1043                           ;funciones.c: 31: TRISCbits.TRISC6 = 0;
  1044  0069BA  9C94               	bcf	3988,6,c	;volatile
  1045                           
  1046                           ;funciones.c: 34: PORTE = 0;
  1047  0069BC  0E00               	movlw	0
  1048  0069BE  6E84               	movwf	3972,c	;volatile
  1049                           
  1050                           ;funciones.c: 35: PORTB = 0;
  1051  0069C0  0E00               	movlw	0
  1052  0069C2  6E81               	movwf	3969,c	;volatile
  1053                           
  1054                           ;funciones.c: 36: TRISBbits.TRISB0 = 1;
  1055  0069C4  8093               	bsf	3987,0,c	;volatile
  1056                           
  1057                           ;funciones.c: 37: TRISBbits.TRISB1 = 1;
  1058  0069C6  8293               	bsf	3987,1,c	;volatile
  1059                           
  1060                           ;funciones.c: 38: TRISBbits.TRISB2 = 1;
  1061  0069C8  8493               	bsf	3987,2,c	;volatile
  1062                           
  1063                           ;funciones.c: 39: TRISBbits.TRISB3 = 1;
  1064  0069CA  8693               	bsf	3987,3,c	;volatile
  1065                           
  1066                           ;funciones.c: 40: TRISBbits.TRISB4 = 1;
  1067  0069CC  8893               	bsf	3987,4,c	;volatile
  1068                           
  1069                           ;funciones.c: 46: PWM_init1(0xff);
  1070  0069CE  0EFF               	movlw	255
  1071  0069D0  EC0D  F033         	call	_PWM_init1
  1072                           
  1073                           ;funciones.c: 47: PWM_init2(0xff);
  1074  0069D4  0EFF               	movlw	255
  1075  0069D6  EC1C  F033         	call	_PWM_init2
  1076                           
  1077                           ;funciones.c: 48: PWM_DutyCycle1(0);
  1078  0069DA  0E00               	movlw	0
  1079  0069DC  ECF3  F033         	call	_PWM_DutyCycle1
  1080                           
  1081                           ;funciones.c: 49: PWM_DutyCycle2(0);
  1082  0069E0  0E00               	movlw	0
  1083  0069E2  EC28  F034         	call	_PWM_DutyCycle2
  1084                           
  1085                           ;funciones.c: 52: return;
  1086  0069E6  0012               	return	
  1087  0069E8                     __end_of_mcu_init:
  1088                           	opt stack 0
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           wreg	equ	0xFE8
  1094                           
  1095 ;; *************** function _PWM_init2 *****************
  1096 ;; Defined at:
  1097 ;;		line 42 in file "pwm.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  period          1    wreg     unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  period          1    3[COMRAM] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1111 ;;      Params:         0       0       0       0       0       0       0       0       0
  1112 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1114 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1115 ;;Total ram usage:        1 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    1
  1118 ;; This function calls:
  1119 ;;		_OpenPWM2
  1120 ;; This function is called by:
  1121 ;;		_mcu_init
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text3
  1126  006638                     __ptext3:
  1127                           	opt stack 0
  1128  006638                     _PWM_init2:
  1129                           	opt stack 28
  1130                           
  1131                           ;incstack = 0
  1132                           ;PWM_init2@period stored from wreg
  1133  006638  6E04               	movwf	PWM_init2@period,c
  1134                           
  1135                           ;pwm.c: 43: Timer2Config = 0b11111110;
  1136  00663A  0EFE               	movlw	254
  1137  00663C  6E5F               	movwf	_Timer2Config,c
  1138                           
  1139                           ;pwm.c: 44: T2CON = (0xfb & Timer2Config);
  1140  00663E  505F               	movf	_Timer2Config,w,c
  1141  006640  0BFB               	andlw	251
  1142  006642  6ECA               	movwf	4042,c	;volatile
  1143                           
  1144                           ;pwm.c: 47: TMR2 = 0;
  1145  006644  0E00               	movlw	0
  1146  006646  6ECC               	movwf	4044,c	;volatile
  1147                           
  1148                           ;pwm.c: 48: PIR1bits.TMR2IF = 0;
  1149  006648  929E               	bcf	3998,1,c	;volatile
  1150                           
  1151                           ;pwm.c: 49: PIE1bits.TMR2IE = 0;
  1152  00664A  929D               	bcf	3997,1,c	;volatile
  1153                           
  1154                           ;pwm.c: 50: T2CONbits.TMR2ON = 1;
  1155  00664C  84CA               	bsf	4042,2,c	;volatile
  1156                           
  1157                           ;pwm.c: 51: OpenPWM2(period);
  1158  00664E  5004               	movf	PWM_init2@period,w,c
  1159  006650  ECB2  F033         	call	_OpenPWM2
  1160                           
  1161                           ;pwm.c: 53: return;
  1162  006654  0012               	return	
  1163  006656                     __end_of_PWM_init2:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           wreg	equ	0xFE8
  1170                           
  1171 ;; *************** function _OpenPWM2 *****************
  1172 ;; Defined at:
  1173 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  period          1    wreg     unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  period          1    1[COMRAM] unsigned char 
  1178 ;;  ccp2mx          1    2[COMRAM] unsigned char 
  1179 ;;  pmmode          1    0        unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;		None               void
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0
  1190 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1191 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1192 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1193 ;;Total ram usage:        3 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_PWM_init2
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text4
  1203  006764                     __ptext4:
  1204                           	opt stack 0
  1205  006764                     _OpenPWM2:
  1206                           	opt stack 28
  1207                           
  1208                           ;incstack = 0
  1209                           ;OpenPWM2@period stored from wreg
  1210  006764  6E02               	movwf	OpenPWM2@period,c
  1211  006766  0E0C               	movlw	12
  1212  006768  6EBA               	movwf	4026,c	;volatile
  1213  00676A  0E05               	movlw	5
  1214  00676C  6EF6               	movwf	tblptrl,c
  1215  00676E                     	if	1	;There is more than 1 active tblptr byte
  1216  00676E  0E00               	movlw	0
  1217  006770  6EF7               	movwf	tblptrh,c
  1218  006772                     	endif
  1219  006772                     	if	1	;There are 3 active tblptr bytes
  1220  006772  0E30               	movlw	48
  1221  006774  6EF8               	movwf	tblptru,c
  1222  006776                     	endif
  1223  006776  0008               	tblrd		*
  1224  006778  CFF5 F001          	movff	tablat,??_OpenPWM2
  1225  00677C  A001               	btfss	??_OpenPWM2,0,c
  1226  00677E  D002               	goto	l2071
  1227  006780  6803               	setf	OpenPWM2@ccp2mx,c
  1228  006782  D002               	goto	l293
  1229  006784                     l2071:
  1230  006784  0E00               	movlw	0
  1231  006786  6E03               	movwf	OpenPWM2@ccp2mx,c
  1232  006788                     l293:
  1233  006788  5003               	movf	OpenPWM2@ccp2mx,w,c
  1234  00678A  B4D8               	btfsc	status,2,c
  1235  00678C  D002               	goto	l294
  1236  00678E  9294               	bcf	3988,1,c	;volatile
  1237  006790  D001               	goto	l295
  1238  006792                     l294:
  1239  006792  9693               	bcf	3987,3,c	;volatile
  1240  006794                     l295:
  1241  006794  94CA               	bcf	4042,2,c	;volatile
  1242  006796  C002  FFCB         	movff	OpenPWM2@period,4043	;volatile
  1243  00679A  84CA               	bsf	4042,2,c	;volatile
  1244  00679C  0012               	return	
  1245  00679E                     __end_of_OpenPWM2:
  1246                           	opt stack 0
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           wreg	equ	0xFE8
  1252                           status	equ	0xFD8
  1253                           
  1254 ;; *************** function _PWM_init1 *****************
  1255 ;; Defined at:
  1256 ;;		line 20 in file "pwm.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  period          1    wreg     unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  period          1    1[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;		None               void
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0
  1271 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1273 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1274 ;;Total ram usage:        1 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    1
  1277 ;; This function calls:
  1278 ;;		_OpenPWM1
  1279 ;; This function is called by:
  1280 ;;		_mcu_init
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text5
  1285  00661A                     __ptext5:
  1286                           	opt stack 0
  1287  00661A                     _PWM_init1:
  1288                           	opt stack 28
  1289                           
  1290                           ;incstack = 0
  1291                           ;PWM_init1@period stored from wreg
  1292  00661A  6E02               	movwf	PWM_init1@period,c
  1293                           
  1294                           ;pwm.c: 21: Timer2Config = 0b11111110;
  1295  00661C  0EFE               	movlw	254
  1296  00661E  6E5F               	movwf	_Timer2Config,c
  1297                           
  1298                           ;pwm.c: 22: T2CON = (0xfb & Timer2Config);
  1299  006620  505F               	movf	_Timer2Config,w,c
  1300  006622  0BFB               	andlw	251
  1301  006624  6ECA               	movwf	4042,c	;volatile
  1302                           
  1303                           ;pwm.c: 25: TMR2 = 0;
  1304  006626  0E00               	movlw	0
  1305  006628  6ECC               	movwf	4044,c	;volatile
  1306                           
  1307                           ;pwm.c: 26: PIR1bits.TMR2IF = 0;
  1308  00662A  929E               	bcf	3998,1,c	;volatile
  1309                           
  1310                           ;pwm.c: 27: PIE1bits.TMR2IE = 0;
  1311  00662C  929D               	bcf	3997,1,c	;volatile
  1312                           
  1313                           ;pwm.c: 28: T2CONbits.TMR2ON = 1;
  1314  00662E  84CA               	bsf	4042,2,c	;volatile
  1315                           
  1316                           ;pwm.c: 29: OpenPWM1(period);
  1317  006630  5002               	movf	PWM_init1@period,w,c
  1318  006632  ECFA  F032         	call	_OpenPWM1
  1319                           
  1320                           ;pwm.c: 31: return;
  1321  006636  0012               	return	
  1322  006638                     __end_of_PWM_init1:
  1323                           	opt stack 0
  1324                           tblptru	equ	0xFF8
  1325                           tblptrh	equ	0xFF7
  1326                           tblptrl	equ	0xFF6
  1327                           tablat	equ	0xFF5
  1328                           wreg	equ	0xFE8
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function _OpenPWM1 *****************
  1332 ;; Defined at:
  1333 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  period          1    wreg     unsigned char 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  period          1    0[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;		None               void
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0
  1348 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1350 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1351 ;;Total ram usage:        1 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_PWM_init1
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text6
  1361  0065F4                     __ptext6:
  1362                           	opt stack 0
  1363  0065F4                     _OpenPWM1:
  1364                           	opt stack 28
  1365                           
  1366                           ;incstack = 0
  1367                           ;OpenPWM1@period stored from wreg
  1368  0065F4  6E01               	movwf	OpenPWM1@period,c
  1369  0065F6  0E0C               	movlw	12
  1370  0065F8  12BD               	iorwf	4029,f,c	;volatile
  1371  0065FA  9494               	bcf	3988,2,c	;volatile
  1372  0065FC  94CA               	bcf	4042,2,c	;volatile
  1373  0065FE  C001  FFCB         	movff	OpenPWM1@period,4043	;volatile
  1374  006602  84CA               	bsf	4042,2,c	;volatile
  1375  006604  0012               	return	
  1376  006606                     __end_of_OpenPWM1:
  1377                           	opt stack 0
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           wreg	equ	0xFE8
  1383                           status	equ	0xFD8
  1384                           
  1385 ;; *************** function _go_back *****************
  1386 ;; Defined at:
  1387 ;;		line 125 in file "cny70.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  m_right         1    wreg     unsigned char 
  1390 ;;  m_left          1   51[COMRAM] unsigned char 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  m_right         1   52[COMRAM] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;		None               void
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1402 ;;      Params:         1       0       0       0       0       0       0       0       0
  1403 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1405 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1406 ;;Total ram usage:        2 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    3
  1409 ;; This function calls:
  1410 ;;		_PWM_DutyCycle1
  1411 ;;		_PWM_DutyCycle2
  1412 ;;		_motor_Backforward
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text7
  1419  006606                     __ptext7:
  1420                           	opt stack 0
  1421  006606                     _go_back:
  1422                           	opt stack 27
  1423                           
  1424                           ;incstack = 0
  1425                           ;go_back@m_right stored from wreg
  1426  006606  6E35               	movwf	go_back@m_right,c
  1427                           
  1428                           ;cny70.c: 127: motor_Backforward();
  1429  006608  ECF0  F032         	call	_motor_Backforward	;wreg free
  1430                           
  1431                           ;cny70.c: 128: PWM_DutyCycle1(m_right);
  1432  00660C  5035               	movf	go_back@m_right,w,c
  1433  00660E  ECF3  F033         	call	_PWM_DutyCycle1
  1434                           
  1435                           ;cny70.c: 129: PWM_DutyCycle2(m_left);
  1436  006612  5034               	movf	go_back@m_left,w,c
  1437  006614  EC28  F034         	call	_PWM_DutyCycle2
  1438                           
  1439                           ;cny70.c: 130: return;
  1440  006618  0012               	return	
  1441  00661A                     __end_of_go_back:
  1442                           	opt stack 0
  1443                           tblptru	equ	0xFF8
  1444                           tblptrh	equ	0xFF7
  1445                           tblptrl	equ	0xFF6
  1446                           tablat	equ	0xFF5
  1447                           wreg	equ	0xFE8
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function _motor_Backforward *****************
  1451 ;; Defined at:
  1452 ;;		line 57 in file "motor.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2  205[COMRAM] int 
  1459 ;; Registers used:
  1460 ;;		None
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1469 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1470 ;;Total ram usage:        0 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_go_back
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text8
  1480  0065E0                     __ptext8:
  1481                           	opt stack 0
  1482  0065E0                     _motor_Backforward:
  1483                           	opt stack 29
  1484                           
  1485                           ;motor.c: 59: PORTDbits.RD7 = 0;
  1486                           
  1487                           ;incstack = 0
  1488  0065E0  9E83               	bcf	3971,7,c	;volatile
  1489                           
  1490                           ;motor.c: 60: PORTDbits.RD4 = 1;
  1491  0065E2  8883               	bsf	3971,4,c	;volatile
  1492                           
  1493                           ;motor.c: 61: PORTDbits.RD2 = 0;
  1494  0065E4  9483               	bcf	3971,2,c	;volatile
  1495                           
  1496                           ;motor.c: 62: PORTDbits.RD3 = 1;
  1497  0065E6  8683               	bsf	3971,3,c	;volatile
  1498                           
  1499                           ;motor.c: 64: return;
  1500  0065E8  0012               	return	
  1501  0065EA                     __end_of_motor_Backforward:
  1502                           	opt stack 0
  1503                           tblptru	equ	0xFF8
  1504                           tblptrh	equ	0xFF7
  1505                           tblptrl	equ	0xFF6
  1506                           tablat	equ	0xFF5
  1507                           wreg	equ	0xFE8
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _PWM_DutyCycle2 *****************
  1511 ;; Defined at:
  1512 ;;		line 55 in file "pwm.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  percentageDu    1    wreg     unsigned char 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  percentageDu    1   48[COMRAM] unsigned char 
  1517 ;;  DC              2   49[COMRAM] unsigned int 
  1518 ;;  DutyCycle       2   46[COMRAM] unsigned int 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;		None               void
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1528 ;;      Params:         0       0       0       0       0       0       0       0       0
  1529 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1530 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1531 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1532 ;;Total ram usage:        9 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    2
  1535 ;; This function calls:
  1536 ;;		_SetDCPWM2
  1537 ;;		___ftmul
  1538 ;;		___fttol
  1539 ;;		___lbtoft
  1540 ;; This function is called by:
  1541 ;;		_mcu_init
  1542 ;;		_go_back
  1543 ;;		_right
  1544 ;;		_left
  1545 ;;		_go_straight
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text9
  1550  006850                     __ptext9:
  1551                           	opt stack 0
  1552  006850                     _PWM_DutyCycle2:
  1553                           	opt stack 27
  1554                           
  1555                           ;incstack = 0
  1556                           ;PWM_DutyCycle2@percentageDuty stored from wreg
  1557  006850  6E31               	movwf	PWM_DutyCycle2@percentageDuty,c
  1558                           
  1559                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  1560  006852  0E00               	movlw	0
  1561  006854  6E33               	movwf	PWM_DutyCycle2@DC+1,c
  1562  006856  0E00               	movlw	0
  1563  006858  6E32               	movwf	PWM_DutyCycle2@DC,c
  1564  00685A  0E00               	movlw	0
  1565  00685C  6E30               	movwf	PWM_DutyCycle2@DutyCycle+1,c
  1566  00685E  0E00               	movlw	0
  1567  006860  6E2F               	movwf	PWM_DutyCycle2@DutyCycle,c
  1568                           
  1569                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  1570  006862  0EAE               	movlw	174
  1571  006864  6E10               	movwf	___ftmul@f2,c
  1572  006866  0E23               	movlw	35
  1573  006868  6E11               	movwf	___ftmul@f2+1,c
  1574  00686A  0E41               	movlw	65
  1575  00686C  6E12               	movwf	___ftmul@f2+2,c
  1576  00686E  5031               	movf	PWM_DutyCycle2@percentageDuty,w,c
  1577  006870  EC2B  F033         	call	___lbtoft
  1578  006874  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1579  006878  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1580  00687C  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1581  006880  ECDF  F036         	call	___ftmul	;wreg free
  1582  006884  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1583  006888  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1584  00688C  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1585  006890  EC0A  F036         	call	___fttol	;wreg free
  1586  006894  C01C  F02B         	movff	?___fttol,??_PWM_DutyCycle2
  1587  006898  C01D  F02C         	movff	?___fttol+1,??_PWM_DutyCycle2+1
  1588  00689C  C01E  F02D         	movff	?___fttol+2,??_PWM_DutyCycle2+2
  1589  0068A0  C01F  F02E         	movff	?___fttol+3,??_PWM_DutyCycle2+3
  1590  0068A4  C02B  F032         	movff	??_PWM_DutyCycle2,PWM_DutyCycle2@DC
  1591  0068A8  C02C  F033         	movff	??_PWM_DutyCycle2+1,PWM_DutyCycle2@DC+1
  1592                           
  1593                           ;pwm.c: 60: SetDCPWM2(DC);
  1594  0068AC  C032  F001         	movff	PWM_DutyCycle2@DC,SetDCPWM2@dutycycle
  1595  0068B0  C033  F002         	movff	PWM_DutyCycle2@DC+1,SetDCPWM2@dutycycle+1
  1596  0068B4  EC95  F033         	call	_SetDCPWM2	;wreg free
  1597                           
  1598                           ;pwm.c: 61: return;
  1599  0068B8  0012               	return	
  1600  0068BA                     __end_of_PWM_DutyCycle2:
  1601                           	opt stack 0
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           wreg	equ	0xFE8
  1607                           status	equ	0xFD8
  1608                           
  1609 ;; *************** function _SetDCPWM2 *****************
  1610 ;; Defined at:
  1611 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  dutycycle       2    0[COMRAM] unsigned int 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  DCycle          2    4[COMRAM] struct PWMDC
  1616 ;; Return value:  Size  Location     Type
  1617 ;;		None               void
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1625 ;;      Params:         2       0       0       0       0       0       0       0       0
  1626 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1627 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1628 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1629 ;;Total ram usage:        6 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_PWM_DutyCycle2
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text10
  1639  00672A                     __ptext10:
  1640                           	opt stack 0
  1641  00672A                     _SetDCPWM2:
  1642                           	opt stack 28
  1643                           
  1644                           ;incstack = 0
  1645  00672A  C001  F003         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  1646  00672E  C002  F004         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  1647  006732  0E06               	movlw	6
  1648  006734                     u1975:
  1649  006734  90D8               	bcf	status,0,c
  1650  006736  3603               	rlcf	??_SetDCPWM2,f,c
  1651  006738  3604               	rlcf	??_SetDCPWM2+1,f,c
  1652  00673A  2EE8               	decfsz	wreg,f,c
  1653  00673C  D7FB               	goto	u1975
  1654  00673E  C003  F005         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  1655  006742  C004  F006         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  1656  006746  C006  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  1657  00674A  C005  F003         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  1658  00674E  90D8               	bcf	status,0,c
  1659  006750  3203               	rrcf	??_SetDCPWM2,f,c
  1660  006752  90D8               	bcf	status,0,c
  1661  006754  3203               	rrcf	??_SetDCPWM2,f,c
  1662  006756  0E30               	movlw	48
  1663  006758  1603               	andwf	??_SetDCPWM2,f,c
  1664  00675A  50BA               	movf	4026,w,c	;volatile
  1665  00675C  0BCF               	andlw	207
  1666  00675E  1003               	iorwf	??_SetDCPWM2,w,c
  1667  006760  6EBA               	movwf	4026,c	;volatile
  1668  006762  0012               	return	
  1669  006764                     __end_of_SetDCPWM2:
  1670                           	opt stack 0
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           wreg	equ	0xFE8
  1676                           status	equ	0xFD8
  1677                           
  1678 ;; *************** function _PWM_DutyCycle1 *****************
  1679 ;; Defined at:
  1680 ;;		line 33 in file "pwm.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  percentageDu    1    wreg     unsigned char 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  percentageDu    1   48[COMRAM] unsigned char 
  1685 ;;  DC              2   49[COMRAM] unsigned int 
  1686 ;;  DutyCycle       2   46[COMRAM] unsigned int 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;		None               void
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0
  1697 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1698 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1699 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1700 ;;Total ram usage:        9 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    2
  1703 ;; This function calls:
  1704 ;;		_SetDCPWM1
  1705 ;;		___ftmul
  1706 ;;		___fttol
  1707 ;;		___lbtoft
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;;		_mcu_init
  1711 ;;		_go_back
  1712 ;;		_right
  1713 ;;		_left
  1714 ;;		_go_straight
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text11
  1719  0067E6                     __ptext11:
  1720                           	opt stack 0
  1721  0067E6                     _PWM_DutyCycle1:
  1722                           	opt stack 27
  1723                           
  1724                           ;incstack = 0
  1725                           ;PWM_DutyCycle1@percentageDuty stored from wreg
  1726  0067E6  6E31               	movwf	PWM_DutyCycle1@percentageDuty,c
  1727                           
  1728                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  1729  0067E8  0E00               	movlw	0
  1730  0067EA  6E33               	movwf	PWM_DutyCycle1@DC+1,c
  1731  0067EC  0E00               	movlw	0
  1732  0067EE  6E32               	movwf	PWM_DutyCycle1@DC,c
  1733  0067F0  0E00               	movlw	0
  1734  0067F2  6E30               	movwf	PWM_DutyCycle1@DutyCycle+1,c
  1735  0067F4  0E00               	movlw	0
  1736  0067F6  6E2F               	movwf	PWM_DutyCycle1@DutyCycle,c
  1737                           
  1738                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  1739  0067F8  0EAE               	movlw	174
  1740  0067FA  6E10               	movwf	___ftmul@f2,c
  1741  0067FC  0E23               	movlw	35
  1742  0067FE  6E11               	movwf	___ftmul@f2+1,c
  1743  006800  0E41               	movlw	65
  1744  006802  6E12               	movwf	___ftmul@f2+2,c
  1745  006804  5031               	movf	PWM_DutyCycle1@percentageDuty,w,c
  1746  006806  EC2B  F033         	call	___lbtoft
  1747  00680A  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1748  00680E  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1749  006812  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1750  006816  ECDF  F036         	call	___ftmul	;wreg free
  1751  00681A  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1752  00681E  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1753  006822  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1754  006826  EC0A  F036         	call	___fttol	;wreg free
  1755  00682A  C01C  F02B         	movff	?___fttol,??_PWM_DutyCycle1
  1756  00682E  C01D  F02C         	movff	?___fttol+1,??_PWM_DutyCycle1+1
  1757  006832  C01E  F02D         	movff	?___fttol+2,??_PWM_DutyCycle1+2
  1758  006836  C01F  F02E         	movff	?___fttol+3,??_PWM_DutyCycle1+3
  1759  00683A  C02B  F032         	movff	??_PWM_DutyCycle1,PWM_DutyCycle1@DC
  1760  00683E  C02C  F033         	movff	??_PWM_DutyCycle1+1,PWM_DutyCycle1@DC+1
  1761                           
  1762                           ;pwm.c: 38: SetDCPWM1(DC);
  1763  006842  C032  F001         	movff	PWM_DutyCycle1@DC,SetDCPWM1@dutycycle
  1764  006846  C033  F002         	movff	PWM_DutyCycle1@DC+1,SetDCPWM1@dutycycle+1
  1765  00684A  EC78  F033         	call	_SetDCPWM1	;wreg free
  1766                           
  1767                           ;pwm.c: 39: return;
  1768  00684E  0012               	return	
  1769  006850                     __end_of_PWM_DutyCycle1:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           wreg	equ	0xFE8
  1776                           status	equ	0xFD8
  1777                           
  1778 ;; *************** function ___lbtoft *****************
  1779 ;; Defined at:
  1780 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  c               1    wreg     unsigned char 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  c               1   11[COMRAM] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  3    8[COMRAM] float 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1794 ;;      Params:         3       0       0       0       0       0       0       0       0
  1795 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1797 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1798 ;;Total ram usage:        4 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    1
  1801 ;; This function calls:
  1802 ;;		___ftpack
  1803 ;; This function is called by:
  1804 ;;		_PWM_DutyCycle1
  1805 ;;		_PWM_DutyCycle2
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text12
  1810  006656                     __ptext12:
  1811                           	opt stack 0
  1812  006656                     ___lbtoft:
  1813                           	opt stack 27
  1814                           
  1815                           ;incstack = 0
  1816                           ;___lbtoft@c stored from wreg
  1817  006656  6E0C               	movwf	___lbtoft@c,c
  1818  006658  500C               	movf	___lbtoft@c,w,c
  1819  00665A  6E01               	movwf	___ftpack@arg,c
  1820  00665C  6A02               	clrf	___ftpack@arg+1,c
  1821  00665E  6A03               	clrf	___ftpack@arg+2,c
  1822  006660  0E8E               	movlw	142
  1823  006662  6E04               	movwf	___ftpack@exp,c
  1824  006664  0E00               	movlw	0
  1825  006666  6E05               	movwf	___ftpack@sign,c
  1826  006668  ECF4  F034         	call	___ftpack	;wreg free
  1827  00666C  C001  F009         	movff	?___ftpack,?___lbtoft
  1828  006670  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1829  006674  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1830  006678  0012               	return	
  1831  00667A                     __end_of___lbtoft:
  1832                           	opt stack 0
  1833                           tblptru	equ	0xFF8
  1834                           tblptrh	equ	0xFF7
  1835                           tblptrl	equ	0xFF6
  1836                           tablat	equ	0xFF5
  1837                           wreg	equ	0xFE8
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function ___fttol *****************
  1841 ;; Defined at:
  1842 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  f1              3   27[COMRAM] float 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  lval            4   37[COMRAM] unsigned long 
  1847 ;;  exp1            1   41[COMRAM] unsigned char 
  1848 ;;  sign1           1   36[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  4   27[COMRAM] long 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1858 ;;      Params:         4       0       0       0       0       0       0       0       0
  1859 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1860 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1861 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1862 ;;Total ram usage:       15 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;;		_PWM_DutyCycle1
  1869 ;;		_PWM_DutyCycle2
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text13
  1874  006C14                     __ptext13:
  1875                           	opt stack 0
  1876  006C14                     ___fttol:
  1877                           	opt stack 28
  1878                           
  1879                           ;incstack = 0
  1880  006C14  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1881  006C18  6A21               	clrf	(??___fttol+1)& (0+255),c
  1882  006C1A  6A22               	clrf	(??___fttol+2)& (0+255),c
  1883  006C1C  341D               	rlcf	___fttol@f1+1,w,c
  1884  006C1E  3620               	rlcf	??___fttol& (0+255),f,c
  1885  006C20  E301               	bnc	u2051
  1886  006C22  8021               	bsf	(??___fttol+1)& (0+255),0,c
  1887  006C24                     u2051:
  1888  006C24  5020               	movf	??___fttol,w,c
  1889  006C26  6E2A               	movwf	___fttol@exp1,c
  1890  006C28  662A               	tstfsz	___fttol@exp1& (0+255),c
  1891  006C2A  D001               	goto	l2151
  1892  006C2C  D038               	goto	u2100
  1893  006C2E                     l2151:
  1894  006C2E  0E17               	movlw	23
  1895  006C30  6E20               	movwf	??___fttol& (0+255),c
  1896  006C32  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1897  006C36  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1898  006C3A  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1899  006C3E  2820               	incf	??___fttol,w,c
  1900  006C40  6E24               	movwf	(??___fttol+4)& (0+255),c
  1901  006C42  D004               	goto	u2070
  1902  006C44                     u2075:
  1903  006C44  90D8               	bcf	status,0,c
  1904  006C46  3223               	rrcf	??___fttol+3,f,c
  1905  006C48  3222               	rrcf	??___fttol+2,f,c
  1906  006C4A  3221               	rrcf	??___fttol+1,f,c
  1907  006C4C                     u2070:
  1908  006C4C  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  1909  006C4E  D7FA               	goto	u2075
  1910  006C50  5021               	movf	??___fttol+1,w,c
  1911  006C52  6E25               	movwf	___fttol@sign1,c
  1912  006C54  8E1D               	bsf	___fttol@f1+1,7,c
  1913  006C56  0EFF               	movlw	255
  1914  006C58  161C               	andwf	___fttol@f1,f,c
  1915  006C5A  0EFF               	movlw	255
  1916  006C5C  161D               	andwf	___fttol@f1+1,f,c
  1917  006C5E  0E00               	movlw	0
  1918  006C60  161E               	andwf	___fttol@f1+2,f,c
  1919  006C62  501C               	movf	___fttol@f1,w,c
  1920  006C64  6E26               	movwf	___fttol@lval,c
  1921  006C66  501D               	movf	___fttol@f1+1,w,c
  1922  006C68  6E27               	movwf	___fttol@lval+1,c
  1923  006C6A  501E               	movf	___fttol@f1+2,w,c
  1924  006C6C  6E28               	movwf	___fttol@lval+2,c
  1925  006C6E  6A29               	clrf	___fttol@lval+3,c
  1926  006C70  0E8E               	movlw	142
  1927  006C72  5E2A               	subwf	___fttol@exp1,f,c
  1928  006C74  AE2A               	btfss	___fttol@exp1,7,c
  1929  006C76  D010               	goto	l2173
  1930  006C78  502A               	movf	___fttol@exp1,w,c
  1931  006C7A  0A80               	xorlw	128
  1932  006C7C  6E20               	movwf	??___fttol& (0+255),c
  1933  006C7E  0EF1               	movlw	241
  1934  006C80  0A80               	xorlw	128
  1935  006C82  5C20               	subwf	??___fttol,w,c
  1936  006C84  A0D8               	btfss	status,0,c
  1937  006C86  D00B               	goto	u2100
  1938  006C88                     l2169:
  1939  006C88  90D8               	bcf	status,0,c
  1940  006C8A  3229               	rrcf	___fttol@lval+3,f,c
  1941  006C8C  3228               	rrcf	___fttol@lval+2,f,c
  1942  006C8E  3227               	rrcf	___fttol@lval+1,f,c
  1943  006C90  3226               	rrcf	___fttol@lval,f,c
  1944  006C92  3E2A               	incfsz	___fttol@exp1,f,c
  1945  006C94  D7F9               	goto	l2169
  1946  006C96  D014               	goto	l2183
  1947  006C98                     l2173:
  1948  006C98  0E17               	movlw	23
  1949  006C9A  642A               	cpfsgt	___fttol@exp1,c
  1950  006C9C  D00F               	goto	l2181
  1951  006C9E                     u2100:
  1952  006C9E  0E00               	movlw	0
  1953  006CA0  6E1C               	movwf	?___fttol,c
  1954  006CA2  0E00               	movlw	0
  1955  006CA4  6E1D               	movwf	?___fttol+1,c
  1956  006CA6  0E00               	movlw	0
  1957  006CA8  6E1E               	movwf	?___fttol+2,c
  1958  006CAA  0E00               	movlw	0
  1959  006CAC  6E1F               	movwf	?___fttol+3,c
  1960  006CAE  D01B               	goto	l716
  1961  006CB0                     l2179:
  1962  006CB0  90D8               	bcf	status,0,c
  1963  006CB2  3626               	rlcf	___fttol@lval,f,c
  1964  006CB4  3627               	rlcf	___fttol@lval+1,f,c
  1965  006CB6  3628               	rlcf	___fttol@lval+2,f,c
  1966  006CB8  3629               	rlcf	___fttol@lval+3,f,c
  1967  006CBA  062A               	decf	___fttol@exp1,f,c
  1968  006CBC                     l2181:
  1969  006CBC  662A               	tstfsz	___fttol@exp1,c
  1970  006CBE  D7F8               	goto	l2179
  1971  006CC0                     l2183:
  1972  006CC0  5025               	movf	___fttol@sign1,w,c
  1973  006CC2  B4D8               	btfsc	status,2,c
  1974  006CC4  D008               	goto	l2187
  1975  006CC6  1E29               	comf	___fttol@lval+3,f,c
  1976  006CC8  1E28               	comf	___fttol@lval+2,f,c
  1977  006CCA  1E27               	comf	___fttol@lval+1,f,c
  1978  006CCC  6C26               	negf	___fttol@lval,c
  1979  006CCE  0E00               	movlw	0
  1980  006CD0  2227               	addwfc	___fttol@lval+1,f,c
  1981  006CD2  2228               	addwfc	___fttol@lval+2,f,c
  1982  006CD4  2229               	addwfc	___fttol@lval+3,f,c
  1983  006CD6                     l2187:
  1984  006CD6  C026  F01C         	movff	___fttol@lval,?___fttol
  1985  006CDA  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1986  006CDE  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1987  006CE2  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1988  006CE6                     l716:
  1989  006CE6  0012               	return	
  1990  006CE8                     __end_of___fttol:
  1991                           	opt stack 0
  1992                           tblptru	equ	0xFF8
  1993                           tblptrh	equ	0xFF7
  1994                           tblptrl	equ	0xFF6
  1995                           tablat	equ	0xFF5
  1996                           wreg	equ	0xFE8
  1997                           status	equ	0xFD8
  1998                           
  1999 ;; *************** function _SetDCPWM1 *****************
  2000 ;; Defined at:
  2001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  dutycycle       2    0[COMRAM] unsigned int 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  DCycle          2    4[COMRAM] struct PWMDC
  2006 ;; Return value:  Size  Location     Type
  2007 ;;		None               void
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2015 ;;      Params:         2       0       0       0       0       0       0       0       0
  2016 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2017 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2018 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2019 ;;Total ram usage:        6 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_PWM_DutyCycle1
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text14
  2029  0066F0                     __ptext14:
  2030                           	opt stack 0
  2031  0066F0                     _SetDCPWM1:
  2032                           	opt stack 28
  2033                           
  2034                           ;incstack = 0
  2035  0066F0  C001  F003         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  2036  0066F4  C002  F004         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  2037  0066F8  0E06               	movlw	6
  2038  0066FA                     u1945:
  2039  0066FA  90D8               	bcf	status,0,c
  2040  0066FC  3603               	rlcf	??_SetDCPWM1,f,c
  2041  0066FE  3604               	rlcf	??_SetDCPWM1+1,f,c
  2042  006700  2EE8               	decfsz	wreg,f,c
  2043  006702  D7FB               	goto	u1945
  2044  006704  C003  F005         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  2045  006708  C004  F006         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  2046  00670C  C006  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  2047  006710  C005  F003         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  2048  006714  90D8               	bcf	status,0,c
  2049  006716  3203               	rrcf	??_SetDCPWM1,f,c
  2050  006718  90D8               	bcf	status,0,c
  2051  00671A  3203               	rrcf	??_SetDCPWM1,f,c
  2052  00671C  0E30               	movlw	48
  2053  00671E  1603               	andwf	??_SetDCPWM1,f,c
  2054  006720  50BD               	movf	4029,w,c	;volatile
  2055  006722  0BCF               	andlw	207
  2056  006724  1003               	iorwf	??_SetDCPWM1,w,c
  2057  006726  6EBD               	movwf	4029,c	;volatile
  2058  006728  0012               	return	
  2059  00672A                     __end_of_SetDCPWM1:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           wreg	equ	0xFE8
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function _getCNY70Value *****************
  2069 ;; Defined at:
  2070 ;;		line 4 in file "cny70.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  2    0[COMRAM] int 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2084 ;;      Params:         2       0       0       0       0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2087 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2088 ;;Total ram usage:        2 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text15
  2098  006A90                     __ptext15:
  2099                           	opt stack 0
  2100  006A90                     _getCNY70Value:
  2101                           	opt stack 30
  2102                           
  2103                           ;cny70.c: 24: if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && PORTB
      +                          bits.RB4 == 1 && PORTBbits.RB1 == 1){
  2104                           
  2105                           ;incstack = 0
  2106  006A90  B481               	btfsc	3969,2,c	;volatile
  2107  006A92  A681               	btfss	3969,3,c	;volatile
  2108  006A94  D005               	goto	l208
  2109  006A96  A081               	btfss	3969,0,c	;volatile
  2110  006A98  A881               	btfss	3969,4,c	;volatile
  2111  006A9A  D002               	goto	l208
  2112  006A9C  B281               	btfsc	3969,1,c	;volatile
  2113  006A9E  D04F               	goto	l2539
  2114  006AA0                     l208:
  2115                           
  2116                           ;cny70.c: 29: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2117  006AA0  B481               	btfsc	3969,2,c	;volatile
  2118  006AA2  B681               	btfsc	3969,3,c	;volatile
  2119  006AA4  D005               	goto	l211
  2120  006AA6  B081               	btfsc	3969,0,c	;volatile
  2121  006AA8  A881               	btfss	3969,4,c	;volatile
  2122  006AAA  D002               	goto	l211
  2123  006AAC  B281               	btfsc	3969,1,c	;volatile
  2124  006AAE  D038               	goto	u2780
  2125  006AB0                     l211:
  2126                           
  2127                           ;cny70.c: 34: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2128  006AB0  A481               	btfss	3969,2,c	;volatile
  2129  006AB2  A681               	btfss	3969,3,c	;volatile
  2130  006AB4  D009               	goto	l213
  2131  006AB6  B081               	btfsc	3969,0,c	;volatile
  2132  006AB8  A881               	btfss	3969,4,c	;volatile
  2133  006ABA  D006               	goto	l213
  2134  006ABC  A281               	btfss	3969,1,c	;volatile
  2135  006ABE  D004               	goto	l213
  2136  006AC0                     
  2137                           ;cny70.c: 36: return -2;
  2138  006AC0  0EFF               	movlw	255
  2139  006AC2  6E02               	movwf	?_getCNY70Value+1,c
  2140  006AC4  0EFE               	movlw	254
  2141  006AC6  D03E               	goto	L4
  2142  006AC8                     l213:
  2143                           
  2144                           ;cny70.c: 39: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  2145  006AC8  B481               	btfsc	3969,2,c	;volatile
  2146  006ACA  A681               	btfss	3969,3,c	;volatile
  2147  006ACC  D005               	goto	l215
  2148  006ACE  B081               	btfsc	3969,0,c	;volatile
  2149  006AD0  B881               	btfsc	3969,4,c	;volatile
  2150  006AD2  D002               	goto	l215
  2151  006AD4  B281               	btfsc	3969,1,c	;volatile
  2152  006AD6  D02F               	goto	u2830
  2153  006AD8                     l215:
  2154                           
  2155                           ;cny70.c: 44: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 0){
  2156  006AD8  B481               	btfsc	3969,2,c	;volatile
  2157  006ADA  A681               	btfss	3969,3,c	;volatile
  2158  006ADC  D005               	goto	l217
  2159  006ADE  B081               	btfsc	3969,0,c	;volatile
  2160  006AE0  A881               	btfss	3969,4,c	;volatile
  2161  006AE2  D002               	goto	l217
  2162  006AE4  A281               	btfss	3969,1,c	;volatile
  2163  006AE6  D008               	goto	u2680
  2164  006AE8                     l217:
  2165                           
  2166                           ;cny70.c: 50: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 0){
  2167  006AE8  B481               	btfsc	3969,2,c	;volatile
  2168  006AEA  A681               	btfss	3969,3,c	;volatile
  2169  006AEC  D009               	goto	l219
  2170  006AEE  B081               	btfsc	3969,0,c	;volatile
  2171  006AF0  B881               	btfsc	3969,4,c	;volatile
  2172  006AF2  D006               	goto	l219
  2173  006AF4  B281               	btfsc	3969,1,c	;volatile
  2174  006AF6  D004               	goto	l219
  2175  006AF8                     u2680:
  2176                           
  2177                           ;cny70.c: 52: return 2;
  2178  006AF8  0E00               	movlw	0
  2179  006AFA  6E02               	movwf	?_getCNY70Value+1,c
  2180  006AFC  0E02               	movlw	2
  2181  006AFE  D022               	goto	L4
  2182  006B00                     l219:
  2183                           
  2184                           ;cny70.c: 55: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2185  006B00  A481               	btfss	3969,2,c	;volatile
  2186  006B02  B681               	btfsc	3969,3,c	;volatile
  2187  006B04  D005               	goto	l221
  2188  006B06  B081               	btfsc	3969,0,c	;volatile
  2189  006B08  A881               	btfss	3969,4,c	;volatile
  2190  006B0A  D002               	goto	l221
  2191  006B0C  B281               	btfsc	3969,1,c	;volatile
  2192  006B0E  D7D8               	goto	L5
  2193  006B10                     l221:
  2194                           
  2195                           ;cny70.c: 60: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2196  006B10  B481               	btfsc	3969,2,c	;volatile
  2197  006B12  B681               	btfsc	3969,3,c	;volatile
  2198  006B14  D008               	goto	l223
  2199  006B16  A081               	btfss	3969,0,c	;volatile
  2200  006B18  A881               	btfss	3969,4,c	;volatile
  2201  006B1A  D005               	goto	l223
  2202  006B1C  A281               	btfss	3969,1,c	;volatile
  2203  006B1E  D003               	goto	l223
  2204  006B20                     u2780:
  2205                           
  2206                           ;cny70.c: 62: return -1;
  2207  006B20  6801               	setf	?_getCNY70Value,c
  2208  006B22  6802               	setf	?_getCNY70Value+1,c
  2209  006B24  D010               	goto	l209
  2210  006B26                     l223:
  2211                           
  2212                           ;cny70.c: 65: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  2213  006B26  B481               	btfsc	3969,2,c	;volatile
  2214  006B28  A681               	btfss	3969,3,c	;volatile
  2215  006B2A  D009               	goto	l2539
  2216  006B2C  A081               	btfss	3969,0,c	;volatile
  2217  006B2E  B881               	btfsc	3969,4,c	;volatile
  2218  006B30  D006               	goto	l2539
  2219  006B32  A281               	btfss	3969,1,c	;volatile
  2220  006B34  D004               	goto	l2539
  2221  006B36                     u2830:
  2222                           
  2223                           ;cny70.c: 67: return 1;
  2224  006B36  0E00               	movlw	0
  2225  006B38  6E02               	movwf	?_getCNY70Value+1,c
  2226  006B3A  0E01               	movlw	1
  2227  006B3C  D003               	goto	L4
  2228  006B3E                     l2539:
  2229                           
  2230                           ;cny70.c: 75: else
  2231                           ;cny70.c: 76: return 0;
  2232  006B3E  0E00               	movlw	0
  2233  006B40  6E02               	movwf	?_getCNY70Value+1,c
  2234  006B42  0E00               	movlw	0
  2235  006B44                     L4:
  2236  006B44  6E01               	movwf	?_getCNY70Value,c
  2237  006B46                     l209:
  2238  006B46  0012               	return	
  2239  006B48                     __end_of_getCNY70Value:
  2240                           	opt stack 0
  2241                           tblptru	equ	0xFF8
  2242                           tblptrh	equ	0xFF7
  2243                           tblptrl	equ	0xFF6
  2244                           tablat	equ	0xFF5
  2245                           wreg	equ	0xFE8
  2246                           status	equ	0xFD8
  2247                           
  2248 ;; *************** function _fuzzy_system_single2 *****************
  2249 ;; Defined at:
  2250 ;;		line 234 in file "fuzzy.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  input           3   82[COMRAM] int 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  y             120  120[BANK6 ] [40]
  2255 ;;  x             120    0[BANK6 ] [40]
  2256 ;;  overall_out_  120  120[BANK5 ] [40]
  2257 ;;  qualified_co  120  120[BANK4 ] [40]
  2258 ;;  qualified_co  120  120[BANK3 ] [40]
  2259 ;;  cons_mf3      120    0[BANK5 ] [40]
  2260 ;;  qualified_co  120    0[BANK4 ] [40]
  2261 ;;  cons_mf1      120    0[BANK3 ] [40]
  2262 ;;  ante_mf3      120  120[BANK2 ] [40]
  2263 ;;  cons_mf2      120    0[BANK2 ] [40]
  2264 ;;  ante_mf2      120  120[BANK1 ] [40]
  2265 ;;  ante_mf1      120    0[BANK1 ] [40]
  2266 ;;  output          3  122[BANK0 ] [40]
  2267 ;;  w3              3   91[COMRAM] [40]
  2268 ;;  w2              3   88[COMRAM] [40]
  2269 ;;  w1              3   85[COMRAM] [40]
  2270 ;;  i               2    0        int 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  3   82[COMRAM] int 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2280 ;;      Params:         3       0       0       0       0       0       0       0       0
  2281 ;;      Locals:         9       3     240     240     240     240     240     240       0
  2282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2283 ;;      Totals:        12       3     240     240     240     240     240     240       0
  2284 ;;Total ram usage:     1455 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    4
  2287 ;; This function calls:
  2288 ;;		_defuzzy
  2289 ;;		_linspace
  2290 ;;		_out_mf
  2291 ;;		_qualified
  2292 ;;		_tri_mf
  2293 ;;		_triangular
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text16
  2300  007C7E                     __ptext16:
  2301                           	opt stack 0
  2302  007C7E                     _fuzzy_system_single2:
  2303                           	opt stack 26
  2304                           
  2305                           ;fuzzy.c: 236: double ante_mf1[40],cons_mf1[40];
  2306                           ;fuzzy.c: 237: double ante_mf2[40],cons_mf2[40];
  2307                           ;fuzzy.c: 238: double ante_mf3[40],cons_mf3[40];
  2308                           ;fuzzy.c: 239: double x[40],y[40];
  2309                           ;fuzzy.c: 240: double qualified_cons_mf1[40],qualified_cons_mf2[40],qualified_cons_mf3[4
      +                          0];
  2310                           ;fuzzy.c: 241: double overall_out_mf[40];
  2311                           ;fuzzy.c: 242: double w1,w2,w3;
  2312                           ;fuzzy.c: 243: double output;
  2313                           ;fuzzy.c: 244: int i;
  2314                           ;fuzzy.c: 245: linspace(x,-2,2,40);
  2315                           
  2316                           ;incstack = 0
  2317  007C7E  0106               	movlb	6	; () banked
  2318  007C80  0E06               	movlw	high fuzzy_system_single2@x
  2319  007C82  6E38               	movwf	linspace@x+1,c
  2320  007C84  0106               	movlb	6	; () banked
  2321  007C86  0E00               	movlw	low fuzzy_system_single2@x
  2322  007C88  6E37               	movwf	linspace@x,c
  2323  007C8A  0E00               	movlw	0
  2324  007C8C  6E39               	movwf	linspace@start,c
  2325  007C8E  0E00               	movlw	0
  2326  007C90  6E3A               	movwf	linspace@start+1,c
  2327  007C92  0EC0               	movlw	192
  2328  007C94  6E3B               	movwf	linspace@start+2,c
  2329  007C96  0E00               	movlw	0
  2330  007C98  6E3C               	movwf	linspace@end,c
  2331  007C9A  0E00               	movlw	0
  2332  007C9C  6E3D               	movwf	linspace@end+1,c
  2333  007C9E  0E40               	movlw	64
  2334  007CA0  6E3E               	movwf	linspace@end+2,c
  2335  007CA2  0E00               	movlw	0
  2336  007CA4  6E40               	movwf	linspace@size+1,c
  2337  007CA6  0E28               	movlw	40
  2338  007CA8  6E3F               	movwf	linspace@size,c
  2339  007CAA  ECC5  F037         	call	_linspace	;wreg free
  2340                           
  2341                           ;fuzzy.c: 246: linspace(y,0,100,40);
  2342  007CAE  0106               	movlb	6	; () banked
  2343  007CB0  0E06               	movlw	high fuzzy_system_single2@y
  2344  007CB2  6E38               	movwf	linspace@x+1,c
  2345  007CB4  0106               	movlb	6	; () banked
  2346  007CB6  0E78               	movlw	low fuzzy_system_single2@y
  2347  007CB8  6E37               	movwf	linspace@x,c
  2348  007CBA  0E00               	movlw	0
  2349  007CBC  6E39               	movwf	linspace@start,c
  2350  007CBE  0E00               	movlw	0
  2351  007CC0  6E3A               	movwf	linspace@start+1,c
  2352  007CC2  0E00               	movlw	0
  2353  007CC4  6E3B               	movwf	linspace@start+2,c
  2354  007CC6  0E00               	movlw	0
  2355  007CC8  6E3C               	movwf	linspace@end,c
  2356  007CCA  0EC8               	movlw	200
  2357  007CCC  6E3D               	movwf	linspace@end+1,c
  2358  007CCE  0E42               	movlw	66
  2359  007CD0  6E3E               	movwf	linspace@end+2,c
  2360  007CD2  0E00               	movlw	0
  2361  007CD4  6E40               	movwf	linspace@size+1,c
  2362  007CD6  0E28               	movlw	40
  2363  007CD8  6E3F               	movwf	linspace@size,c
  2364  007CDA  ECC5  F037         	call	_linspace	;wreg free
  2365                           
  2366                           ;fuzzy.c: 249: tri_mf(ante_mf1,x,-3.6, -2, -0.4);
  2367  007CDE  0101               	movlb	1	; () banked
  2368  007CE0  0E01               	movlw	high fuzzy_system_single2@ante_mf1
  2369  007CE2  6E47               	movwf	tri_mf@t_value+1,c
  2370  007CE4  0101               	movlb	1	; () banked
  2371  007CE6  0E00               	movlw	low fuzzy_system_single2@ante_mf1
  2372  007CE8  6E46               	movwf	tri_mf@t_value,c
  2373  007CEA  0106               	movlb	6	; () banked
  2374  007CEC  0E06               	movlw	high fuzzy_system_single2@x
  2375  007CEE  6E49               	movwf	tri_mf@x+1,c
  2376  007CF0  0106               	movlb	6	; () banked
  2377  007CF2  0E00               	movlw	low fuzzy_system_single2@x
  2378  007CF4  6E48               	movwf	tri_mf@x,c
  2379  007CF6  0E66               	movlw	102
  2380  007CF8  6E4A               	movwf	tri_mf@a,c
  2381  007CFA  0E66               	movlw	102
  2382  007CFC  6E4B               	movwf	tri_mf@a+1,c
  2383  007CFE  0EC0               	movlw	192
  2384  007D00  6E4C               	movwf	tri_mf@a+2,c
  2385  007D02  0E00               	movlw	0
  2386  007D04  6E4D               	movwf	tri_mf@b,c
  2387  007D06  0E00               	movlw	0
  2388  007D08  6E4E               	movwf	tri_mf@b+1,c
  2389  007D0A  0EC0               	movlw	192
  2390  007D0C  6E4F               	movwf	tri_mf@b+2,c
  2391  007D0E  0ECD               	movlw	205
  2392  007D10  6E50               	movwf	tri_mf@c,c
  2393  007D12  0ECC               	movlw	204
  2394  007D14  6E51               	movwf	tri_mf@c+1,c
  2395  007D16  0EBE               	movlw	190
  2396  007D18  6E52               	movwf	tri_mf@c+2,c
  2397  007D1A  EC46  F038         	call	_tri_mf	;wreg free
  2398                           
  2399                           ;fuzzy.c: 250: tri_mf(ante_mf2,x,-1.6, 0, 1.6);
  2400  007D1E  0101               	movlb	1	; () banked
  2401  007D20  0E01               	movlw	high fuzzy_system_single2@ante_mf2
  2402  007D22  6E47               	movwf	tri_mf@t_value+1,c
  2403  007D24  0101               	movlb	1	; () banked
  2404  007D26  0E78               	movlw	low fuzzy_system_single2@ante_mf2
  2405  007D28  6E46               	movwf	tri_mf@t_value,c
  2406  007D2A  0106               	movlb	6	; () banked
  2407  007D2C  0E06               	movlw	high fuzzy_system_single2@x
  2408  007D2E  6E49               	movwf	tri_mf@x+1,c
  2409  007D30  0106               	movlb	6	; () banked
  2410  007D32  0E00               	movlw	low fuzzy_system_single2@x
  2411  007D34  6E48               	movwf	tri_mf@x,c
  2412  007D36  0ECD               	movlw	205
  2413  007D38  6E4A               	movwf	tri_mf@a,c
  2414  007D3A  0ECC               	movlw	204
  2415  007D3C  6E4B               	movwf	tri_mf@a+1,c
  2416  007D3E  0EBF               	movlw	191
  2417  007D40  6E4C               	movwf	tri_mf@a+2,c
  2418  007D42  0E00               	movlw	0
  2419  007D44  6E4D               	movwf	tri_mf@b,c
  2420  007D46  0E00               	movlw	0
  2421  007D48  6E4E               	movwf	tri_mf@b+1,c
  2422  007D4A  0E00               	movlw	0
  2423  007D4C  6E4F               	movwf	tri_mf@b+2,c
  2424  007D4E  0ECD               	movlw	205
  2425  007D50  6E50               	movwf	tri_mf@c,c
  2426  007D52  0ECC               	movlw	204
  2427  007D54  6E51               	movwf	tri_mf@c+1,c
  2428  007D56  0E3F               	movlw	63
  2429  007D58  6E52               	movwf	tri_mf@c+2,c
  2430  007D5A  EC46  F038         	call	_tri_mf	;wreg free
  2431                           
  2432                           ;fuzzy.c: 251: tri_mf(ante_mf3,x,0.4, 2, 3.6);
  2433  007D5E  0102               	movlb	2	; () banked
  2434  007D60  0E02               	movlw	high fuzzy_system_single2@ante_mf3
  2435  007D62  6E47               	movwf	tri_mf@t_value+1,c
  2436  007D64  0102               	movlb	2	; () banked
  2437  007D66  0E78               	movlw	low fuzzy_system_single2@ante_mf3
  2438  007D68  6E46               	movwf	tri_mf@t_value,c
  2439  007D6A  0106               	movlb	6	; () banked
  2440  007D6C  0E06               	movlw	high fuzzy_system_single2@x
  2441  007D6E  6E49               	movwf	tri_mf@x+1,c
  2442  007D70  0106               	movlb	6	; () banked
  2443  007D72  0E00               	movlw	low fuzzy_system_single2@x
  2444  007D74  6E48               	movwf	tri_mf@x,c
  2445  007D76  0ECD               	movlw	205
  2446  007D78  6E4A               	movwf	tri_mf@a,c
  2447  007D7A  0ECC               	movlw	204
  2448  007D7C  6E4B               	movwf	tri_mf@a+1,c
  2449  007D7E  0E3E               	movlw	62
  2450  007D80  6E4C               	movwf	tri_mf@a+2,c
  2451  007D82  0E00               	movlw	0
  2452  007D84  6E4D               	movwf	tri_mf@b,c
  2453  007D86  0E00               	movlw	0
  2454  007D88  6E4E               	movwf	tri_mf@b+1,c
  2455  007D8A  0E40               	movlw	64
  2456  007D8C  6E4F               	movwf	tri_mf@b+2,c
  2457  007D8E  0E66               	movlw	102
  2458  007D90  6E50               	movwf	tri_mf@c,c
  2459  007D92  0E66               	movlw	102
  2460  007D94  6E51               	movwf	tri_mf@c+1,c
  2461  007D96  0E40               	movlw	64
  2462  007D98  6E52               	movwf	tri_mf@c+2,c
  2463  007D9A  EC46  F038         	call	_tri_mf	;wreg free
  2464                           
  2465                           ;fuzzy.c: 254: tri_mf(cons_mf1,y,-40, 0, 40);
  2466  007D9E  0103               	movlb	3	; () banked
  2467  007DA0  0E03               	movlw	high fuzzy_system_single2@cons_mf1
  2468  007DA2  6E47               	movwf	tri_mf@t_value+1,c
  2469  007DA4  0103               	movlb	3	; () banked
  2470  007DA6  0E00               	movlw	low fuzzy_system_single2@cons_mf1
  2471  007DA8  6E46               	movwf	tri_mf@t_value,c
  2472  007DAA  0106               	movlb	6	; () banked
  2473  007DAC  0E06               	movlw	high fuzzy_system_single2@y
  2474  007DAE  6E49               	movwf	tri_mf@x+1,c
  2475  007DB0  0106               	movlb	6	; () banked
  2476  007DB2  0E78               	movlw	low fuzzy_system_single2@y
  2477  007DB4  6E48               	movwf	tri_mf@x,c
  2478  007DB6  0E00               	movlw	0
  2479  007DB8  6E4A               	movwf	tri_mf@a,c
  2480  007DBA  0E20               	movlw	32
  2481  007DBC  6E4B               	movwf	tri_mf@a+1,c
  2482  007DBE  0EC2               	movlw	194
  2483  007DC0  6E4C               	movwf	tri_mf@a+2,c
  2484  007DC2  0E00               	movlw	0
  2485  007DC4  6E4D               	movwf	tri_mf@b,c
  2486  007DC6  0E00               	movlw	0
  2487  007DC8  6E4E               	movwf	tri_mf@b+1,c
  2488  007DCA  0E00               	movlw	0
  2489  007DCC  6E4F               	movwf	tri_mf@b+2,c
  2490  007DCE  0E00               	movlw	0
  2491  007DD0  6E50               	movwf	tri_mf@c,c
  2492  007DD2  0E20               	movlw	32
  2493  007DD4  6E51               	movwf	tri_mf@c+1,c
  2494  007DD6  0E42               	movlw	66
  2495  007DD8  6E52               	movwf	tri_mf@c+2,c
  2496  007DDA  EC46  F038         	call	_tri_mf	;wreg free
  2497                           
  2498                           ;fuzzy.c: 255: tri_mf(cons_mf2,y,10, 50, 90);
  2499  007DDE  0102               	movlb	2	; () banked
  2500  007DE0  0E02               	movlw	high fuzzy_system_single2@cons_mf2
  2501  007DE2  6E47               	movwf	tri_mf@t_value+1,c
  2502  007DE4  0102               	movlb	2	; () banked
  2503  007DE6  0E00               	movlw	low fuzzy_system_single2@cons_mf2
  2504  007DE8  6E46               	movwf	tri_mf@t_value,c
  2505  007DEA  0106               	movlb	6	; () banked
  2506  007DEC  0E06               	movlw	high fuzzy_system_single2@y
  2507  007DEE  6E49               	movwf	tri_mf@x+1,c
  2508  007DF0  0106               	movlb	6	; () banked
  2509  007DF2  0E78               	movlw	low fuzzy_system_single2@y
  2510  007DF4  6E48               	movwf	tri_mf@x,c
  2511  007DF6  0E00               	movlw	0
  2512  007DF8  6E4A               	movwf	tri_mf@a,c
  2513  007DFA  0E20               	movlw	32
  2514  007DFC  6E4B               	movwf	tri_mf@a+1,c
  2515  007DFE  0E41               	movlw	65
  2516  007E00  6E4C               	movwf	tri_mf@a+2,c
  2517  007E02  0E00               	movlw	0
  2518  007E04  6E4D               	movwf	tri_mf@b,c
  2519  007E06  0E48               	movlw	72
  2520  007E08  6E4E               	movwf	tri_mf@b+1,c
  2521  007E0A  0E42               	movlw	66
  2522  007E0C  6E4F               	movwf	tri_mf@b+2,c
  2523  007E0E  0E00               	movlw	0
  2524  007E10  6E50               	movwf	tri_mf@c,c
  2525  007E12  0EB4               	movlw	180
  2526  007E14  6E51               	movwf	tri_mf@c+1,c
  2527  007E16  0E42               	movlw	66
  2528  007E18  6E52               	movwf	tri_mf@c+2,c
  2529  007E1A  EC46  F038         	call	_tri_mf	;wreg free
  2530                           
  2531                           ;fuzzy.c: 256: tri_mf(cons_mf3,y,60, 100, 140);
  2532  007E1E  0105               	movlb	5	; () banked
  2533  007E20  0E05               	movlw	high fuzzy_system_single2@cons_mf3
  2534  007E22  6E47               	movwf	tri_mf@t_value+1,c
  2535  007E24  0105               	movlb	5	; () banked
  2536  007E26  0E00               	movlw	low fuzzy_system_single2@cons_mf3
  2537  007E28  6E46               	movwf	tri_mf@t_value,c
  2538  007E2A  0106               	movlb	6	; () banked
  2539  007E2C  0E06               	movlw	high fuzzy_system_single2@y
  2540  007E2E  6E49               	movwf	tri_mf@x+1,c
  2541  007E30  0106               	movlb	6	; () banked
  2542  007E32  0E78               	movlw	low fuzzy_system_single2@y
  2543  007E34  6E48               	movwf	tri_mf@x,c
  2544  007E36  0E00               	movlw	0
  2545  007E38  6E4A               	movwf	tri_mf@a,c
  2546  007E3A  0E70               	movlw	112
  2547  007E3C  6E4B               	movwf	tri_mf@a+1,c
  2548  007E3E  0E42               	movlw	66
  2549  007E40  6E4C               	movwf	tri_mf@a+2,c
  2550  007E42  0E00               	movlw	0
  2551  007E44  6E4D               	movwf	tri_mf@b,c
  2552  007E46  0EC8               	movlw	200
  2553  007E48  6E4E               	movwf	tri_mf@b+1,c
  2554  007E4A  0E42               	movlw	66
  2555  007E4C  6E4F               	movwf	tri_mf@b+2,c
  2556  007E4E  0E00               	movlw	0
  2557  007E50  6E50               	movwf	tri_mf@c,c
  2558  007E52  0E0C               	movlw	12
  2559  007E54  6E51               	movwf	tri_mf@c+1,c
  2560  007E56  0E43               	movlw	67
  2561  007E58  6E52               	movwf	tri_mf@c+2,c
  2562  007E5A  EC46  F038         	call	_tri_mf	;wreg free
  2563                           
  2564                           ;fuzzy.c: 260: w1=triangular(-3.6, -2, -0.4,input);
  2565  007E5E  0E66               	movlw	102
  2566  007E60  6E37               	movwf	triangular@a,c
  2567  007E62  0E66               	movlw	102
  2568  007E64  6E38               	movwf	triangular@a+1,c
  2569  007E66  0EC0               	movlw	192
  2570  007E68  6E39               	movwf	triangular@a+2,c
  2571  007E6A  0E00               	movlw	0
  2572  007E6C  6E3A               	movwf	triangular@b,c
  2573  007E6E  0E00               	movlw	0
  2574  007E70  6E3B               	movwf	triangular@b+1,c
  2575  007E72  0EC0               	movlw	192
  2576  007E74  6E3C               	movwf	triangular@b+2,c
  2577  007E76  0ECD               	movlw	205
  2578  007E78  6E3D               	movwf	triangular@c,c
  2579  007E7A  0ECC               	movlw	204
  2580  007E7C  6E3E               	movwf	triangular@c+1,c
  2581  007E7E  0EBE               	movlw	190
  2582  007E80  6E3F               	movwf	triangular@c+2,c
  2583  007E82  C053  F040         	movff	fuzzy_system_single2@input,triangular@x
  2584  007E86  C054  F041         	movff	fuzzy_system_single2@input+1,triangular@x+1
  2585  007E8A  C055  F042         	movff	fuzzy_system_single2@input+2,triangular@x+2
  2586  007E8E  EC5E  F03A         	call	_triangular	;wreg free
  2587  007E92  C037  F056         	movff	?_triangular,fuzzy_system_single2@w1
  2588  007E96  C038  F057         	movff	?_triangular+1,fuzzy_system_single2@w1+1
  2589  007E9A  C039  F058         	movff	?_triangular+2,fuzzy_system_single2@w1+2
  2590                           
  2591                           ;fuzzy.c: 261: w2=triangular(-1.6, 0, 1.6,input);
  2592  007E9E  0ECD               	movlw	205
  2593  007EA0  6E37               	movwf	triangular@a,c
  2594  007EA2  0ECC               	movlw	204
  2595  007EA4  6E38               	movwf	triangular@a+1,c
  2596  007EA6  0EBF               	movlw	191
  2597  007EA8  6E39               	movwf	triangular@a+2,c
  2598  007EAA  0E00               	movlw	0
  2599  007EAC  6E3A               	movwf	triangular@b,c
  2600  007EAE  0E00               	movlw	0
  2601  007EB0  6E3B               	movwf	triangular@b+1,c
  2602  007EB2  0E00               	movlw	0
  2603  007EB4  6E3C               	movwf	triangular@b+2,c
  2604  007EB6  0ECD               	movlw	205
  2605  007EB8  6E3D               	movwf	triangular@c,c
  2606  007EBA  0ECC               	movlw	204
  2607  007EBC  6E3E               	movwf	triangular@c+1,c
  2608  007EBE  0E3F               	movlw	63
  2609  007EC0  6E3F               	movwf	triangular@c+2,c
  2610  007EC2  C053  F040         	movff	fuzzy_system_single2@input,triangular@x
  2611  007EC6  C054  F041         	movff	fuzzy_system_single2@input+1,triangular@x+1
  2612  007ECA  C055  F042         	movff	fuzzy_system_single2@input+2,triangular@x+2
  2613  007ECE  EC5E  F03A         	call	_triangular	;wreg free
  2614  007ED2  C037  F059         	movff	?_triangular,fuzzy_system_single2@w2
  2615  007ED6  C038  F05A         	movff	?_triangular+1,fuzzy_system_single2@w2+1
  2616  007EDA  C039  F05B         	movff	?_triangular+2,fuzzy_system_single2@w2+2
  2617                           
  2618                           ;fuzzy.c: 262: w3=triangular(0.4, 2, 3.6,input);
  2619  007EDE  0ECD               	movlw	205
  2620  007EE0  6E37               	movwf	triangular@a,c
  2621  007EE2  0ECC               	movlw	204
  2622  007EE4  6E38               	movwf	triangular@a+1,c
  2623  007EE6  0E3E               	movlw	62
  2624  007EE8  6E39               	movwf	triangular@a+2,c
  2625  007EEA  0E00               	movlw	0
  2626  007EEC  6E3A               	movwf	triangular@b,c
  2627  007EEE  0E00               	movlw	0
  2628  007EF0  6E3B               	movwf	triangular@b+1,c
  2629  007EF2  0E40               	movlw	64
  2630  007EF4  6E3C               	movwf	triangular@b+2,c
  2631  007EF6  0E66               	movlw	102
  2632  007EF8  6E3D               	movwf	triangular@c,c
  2633  007EFA  0E66               	movlw	102
  2634  007EFC  6E3E               	movwf	triangular@c+1,c
  2635  007EFE  0E40               	movlw	64
  2636  007F00  6E3F               	movwf	triangular@c+2,c
  2637  007F02  C053  F040         	movff	fuzzy_system_single2@input,triangular@x
  2638  007F06  C054  F041         	movff	fuzzy_system_single2@input+1,triangular@x+1
  2639  007F0A  C055  F042         	movff	fuzzy_system_single2@input+2,triangular@x+2
  2640  007F0E  EC5E  F03A         	call	_triangular	;wreg free
  2641  007F12  C037  F05C         	movff	?_triangular,fuzzy_system_single2@w3
  2642  007F16  C038  F05D         	movff	?_triangular+1,fuzzy_system_single2@w3+1
  2643  007F1A  C039  F05E         	movff	?_triangular+2,fuzzy_system_single2@w3+2
  2644                           
  2645                           ;fuzzy.c: 263: qualified(qualified_cons_mf1,cons_mf1,w1);
  2646  007F1E  0103               	movlb	3	; () banked
  2647  007F20  0E03               	movlw	high fuzzy_system_single2@qualified_cons_mf1
  2648  007F22  6E11               	movwf	qualified@y+1,c
  2649  007F24  0103               	movlb	3	; () banked
  2650  007F26  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf1
  2651  007F28  6E10               	movwf	qualified@y,c
  2652  007F2A  0103               	movlb	3	; () banked
  2653  007F2C  0E03               	movlw	high fuzzy_system_single2@cons_mf1
  2654  007F2E  6E13               	movwf	qualified@x+1,c
  2655  007F30  0103               	movlb	3	; () banked
  2656  007F32  0E00               	movlw	low fuzzy_system_single2@cons_mf1
  2657  007F34  6E12               	movwf	qualified@x,c
  2658  007F36  C056  F014         	movff	fuzzy_system_single2@w1,qualified@w
  2659  007F3A  C057  F015         	movff	fuzzy_system_single2@w1+1,qualified@w+1
  2660  007F3E  C058  F016         	movff	fuzzy_system_single2@w1+2,qualified@w+2
  2661  007F42  EC51  F037         	call	_qualified	;wreg free
  2662                           
  2663                           ;fuzzy.c: 264: qualified(qualified_cons_mf2,cons_mf3,w2);
  2664  007F46  0104               	movlb	4	; () banked
  2665  007F48  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf2
  2666  007F4A  6E11               	movwf	qualified@y+1,c
  2667  007F4C  0104               	movlb	4	; () banked
  2668  007F4E  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf2
  2669  007F50  6E10               	movwf	qualified@y,c
  2670  007F52  0105               	movlb	5	; () banked
  2671  007F54  0E05               	movlw	high fuzzy_system_single2@cons_mf3
  2672  007F56  6E13               	movwf	qualified@x+1,c
  2673  007F58  0105               	movlb	5	; () banked
  2674  007F5A  0E00               	movlw	low fuzzy_system_single2@cons_mf3
  2675  007F5C  6E12               	movwf	qualified@x,c
  2676  007F5E  C059  F014         	movff	fuzzy_system_single2@w2,qualified@w
  2677  007F62  C05A  F015         	movff	fuzzy_system_single2@w2+1,qualified@w+1
  2678  007F66  C05B  F016         	movff	fuzzy_system_single2@w2+2,qualified@w+2
  2679  007F6A  EC51  F037         	call	_qualified	;wreg free
  2680                           
  2681                           ;fuzzy.c: 265: qualified(qualified_cons_mf3,cons_mf3,w3);
  2682  007F6E  0104               	movlb	4	; () banked
  2683  007F70  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf3
  2684  007F72  6E11               	movwf	qualified@y+1,c
  2685  007F74  0104               	movlb	4	; () banked
  2686  007F76  0E00               	movlw	low fuzzy_system_single2@qualified_cons_mf3
  2687  007F78  6E10               	movwf	qualified@y,c
  2688  007F7A  0105               	movlb	5	; () banked
  2689  007F7C  0E05               	movlw	high fuzzy_system_single2@cons_mf3
  2690  007F7E  6E13               	movwf	qualified@x+1,c
  2691  007F80  0105               	movlb	5	; () banked
  2692  007F82  0E00               	movlw	low fuzzy_system_single2@cons_mf3
  2693  007F84  6E12               	movwf	qualified@x,c
  2694  007F86  C05C  F014         	movff	fuzzy_system_single2@w3,qualified@w
  2695  007F8A  C05D  F015         	movff	fuzzy_system_single2@w3+1,qualified@w+1
  2696  007F8E  C05E  F016         	movff	fuzzy_system_single2@w3+2,qualified@w+2
  2697  007F92  EC51  F037         	call	_qualified	;wreg free
  2698                           
  2699                           ;fuzzy.c: 266: out_mf(overall_out_mf,qualified_cons_mf1,qualified_cons_mf2,qualified_con
      +                          s_mf3);
  2700  007F96  0105               	movlb	5	; () banked
  2701  007F98  0E05               	movlw	high fuzzy_system_single2@overall_out_mf
  2702  007F9A  6E11               	movwf	out_mf@result+1,c
  2703  007F9C  0105               	movlb	5	; () banked
  2704  007F9E  0E78               	movlw	low fuzzy_system_single2@overall_out_mf
  2705  007FA0  6E10               	movwf	out_mf@result,c
  2706  007FA2  0103               	movlb	3	; () banked
  2707  007FA4  0E03               	movlw	high fuzzy_system_single2@qualified_cons_mf1
  2708  007FA6  6E13               	movwf	out_mf@x+1,c
  2709  007FA8  0103               	movlb	3	; () banked
  2710  007FAA  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf1
  2711  007FAC  6E12               	movwf	out_mf@x,c
  2712  007FAE  0104               	movlb	4	; () banked
  2713  007FB0  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf2
  2714  007FB2  6E15               	movwf	out_mf@y+1,c
  2715  007FB4  0104               	movlb	4	; () banked
  2716  007FB6  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf2
  2717  007FB8  6E14               	movwf	out_mf@y,c
  2718  007FBA  0104               	movlb	4	; () banked
  2719  007FBC  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf3
  2720  007FBE  6E17               	movwf	out_mf@z+1,c
  2721  007FC0  0104               	movlb	4	; () banked
  2722  007FC2  0E00               	movlw	low fuzzy_system_single2@qualified_cons_mf3
  2723  007FC4  6E16               	movwf	out_mf@z,c
  2724  007FC6  EC51  F03B         	call	_out_mf	;wreg free
  2725                           
  2726                           ;fuzzy.c: 267: output= defuzzy(y,overall_out_mf);
  2727  007FCA  0106               	movlb	6	; () banked
  2728  007FCC  0E06               	movlw	high fuzzy_system_single2@y
  2729  007FCE  6E38               	movwf	defuzzy@x+1,c
  2730  007FD0  0106               	movlb	6	; () banked
  2731  007FD2  0E78               	movlw	low fuzzy_system_single2@y
  2732  007FD4  6E37               	movwf	defuzzy@x,c
  2733  007FD6  0105               	movlb	5	; () banked
  2734  007FD8  0E05               	movlw	high fuzzy_system_single2@overall_out_mf
  2735  007FDA  6E3A               	movwf	defuzzy@mf+1,c
  2736  007FDC  0105               	movlb	5	; () banked
  2737  007FDE  0E78               	movlw	low fuzzy_system_single2@overall_out_mf
  2738  007FE0  6E39               	movwf	defuzzy@mf,c
  2739  007FE2  ECD7  F038         	call	_defuzzy	;wreg free
  2740  007FE6  C037  F0DA         	movff	?_defuzzy,fuzzy_system_single2@output
  2741  007FEA  C038  F0DB         	movff	?_defuzzy+1,fuzzy_system_single2@output+1
  2742  007FEE  C039  F0DC         	movff	?_defuzzy+2,fuzzy_system_single2@output+2
  2743                           
  2744                           ;fuzzy.c: 268: return output;
  2745  007FF2  C0DA  F053         	movff	fuzzy_system_single2@output,?_fuzzy_system_single2
  2746  007FF6  C0DB  F054         	movff	fuzzy_system_single2@output+1,?_fuzzy_system_single2+1
  2747  007FFA  C0DC  F055         	movff	fuzzy_system_single2@output+2,?_fuzzy_system_single2+2
  2748  007FFE  0012               	return	
  2749  008000                     __end_of_fuzzy_system_single2:
  2750                           	opt stack 0
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           wreg	equ	0xFE8
  2756                           status	equ	0xFD8
  2757                           
  2758 ;; *************** function _fuzzy_system_single1 *****************
  2759 ;; Defined at:
  2760 ;;		line 275 in file "fuzzy.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  input           3   82[COMRAM] int 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  y             120  120[BANK6 ] [40]
  2765 ;;  x             120    0[BANK6 ] [40]
  2766 ;;  overall_out_  120  120[BANK5 ] [40]
  2767 ;;  qualified_co  120  120[BANK4 ] [40]
  2768 ;;  qualified_co  120  120[BANK3 ] [40]
  2769 ;;  cons_mf3      120    0[BANK5 ] [40]
  2770 ;;  qualified_co  120    0[BANK4 ] [40]
  2771 ;;  cons_mf1      120    0[BANK3 ] [40]
  2772 ;;  ante_mf3      120  120[BANK2 ] [40]
  2773 ;;  cons_mf2      120    0[BANK2 ] [40]
  2774 ;;  ante_mf2      120  120[BANK1 ] [40]
  2775 ;;  ante_mf1      120    0[BANK1 ] [40]
  2776 ;;  output          3  122[BANK0 ] [40]
  2777 ;;  w3              3   91[COMRAM] [40]
  2778 ;;  w2              3   88[COMRAM] [40]
  2779 ;;  w1              3   85[COMRAM] [40]
  2780 ;;  i               2    0        int 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  3   82[COMRAM] int 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2790 ;;      Params:         3       0       0       0       0       0       0       0       0
  2791 ;;      Locals:         9       3     240     240     240     240     240     240       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2793 ;;      Totals:        12       3     240     240     240     240     240     240       0
  2794 ;;Total ram usage:     1455 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    4
  2797 ;; This function calls:
  2798 ;;		_defuzzy
  2799 ;;		_linspace
  2800 ;;		_out_mf
  2801 ;;		_qualified
  2802 ;;		_tri_mf
  2803 ;;		_triangular
  2804 ;; This function is called by:
  2805 ;;		_main
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text17
  2810  0078FC                     __ptext17:
  2811                           	opt stack 0
  2812  0078FC                     _fuzzy_system_single1:
  2813                           	opt stack 26
  2814                           
  2815                           ;fuzzy.c: 277: double ante_mf1[40],cons_mf1[40];
  2816                           ;fuzzy.c: 278: double ante_mf2[40],cons_mf2[40];
  2817                           ;fuzzy.c: 279: double ante_mf3[40],cons_mf3[40];
  2818                           ;fuzzy.c: 280: double x[40],y[40];
  2819                           ;fuzzy.c: 281: double qualified_cons_mf1[40],qualified_cons_mf2[40],qualified_cons_mf3[4
      +                          0];
  2820                           ;fuzzy.c: 282: double overall_out_mf[40];
  2821                           ;fuzzy.c: 283: double w1,w2,w3;
  2822                           ;fuzzy.c: 284: double output;
  2823                           ;fuzzy.c: 285: int i;
  2824                           ;fuzzy.c: 286: linspace(x,-2,2,40);
  2825                           
  2826                           ;incstack = 0
  2827  0078FC  0106               	movlb	6	; () banked
  2828  0078FE  0E06               	movlw	high fuzzy_system_single1@x
  2829  007900  6E38               	movwf	linspace@x+1,c
  2830  007902  0106               	movlb	6	; () banked
  2831  007904  0E00               	movlw	low fuzzy_system_single1@x
  2832  007906  6E37               	movwf	linspace@x,c
  2833  007908  0E00               	movlw	0
  2834  00790A  6E39               	movwf	linspace@start,c
  2835  00790C  0E00               	movlw	0
  2836  00790E  6E3A               	movwf	linspace@start+1,c
  2837  007910  0EC0               	movlw	192
  2838  007912  6E3B               	movwf	linspace@start+2,c
  2839  007914  0E00               	movlw	0
  2840  007916  6E3C               	movwf	linspace@end,c
  2841  007918  0E00               	movlw	0
  2842  00791A  6E3D               	movwf	linspace@end+1,c
  2843  00791C  0E40               	movlw	64
  2844  00791E  6E3E               	movwf	linspace@end+2,c
  2845  007920  0E00               	movlw	0
  2846  007922  6E40               	movwf	linspace@size+1,c
  2847  007924  0E28               	movlw	40
  2848  007926  6E3F               	movwf	linspace@size,c
  2849  007928  ECC5  F037         	call	_linspace	;wreg free
  2850                           
  2851                           ;fuzzy.c: 287: linspace(y,0,100,40);
  2852  00792C  0106               	movlb	6	; () banked
  2853  00792E  0E06               	movlw	high fuzzy_system_single1@y
  2854  007930  6E38               	movwf	linspace@x+1,c
  2855  007932  0106               	movlb	6	; () banked
  2856  007934  0E78               	movlw	low fuzzy_system_single1@y
  2857  007936  6E37               	movwf	linspace@x,c
  2858  007938  0E00               	movlw	0
  2859  00793A  6E39               	movwf	linspace@start,c
  2860  00793C  0E00               	movlw	0
  2861  00793E  6E3A               	movwf	linspace@start+1,c
  2862  007940  0E00               	movlw	0
  2863  007942  6E3B               	movwf	linspace@start+2,c
  2864  007944  0E00               	movlw	0
  2865  007946  6E3C               	movwf	linspace@end,c
  2866  007948  0EC8               	movlw	200
  2867  00794A  6E3D               	movwf	linspace@end+1,c
  2868  00794C  0E42               	movlw	66
  2869  00794E  6E3E               	movwf	linspace@end+2,c
  2870  007950  0E00               	movlw	0
  2871  007952  6E40               	movwf	linspace@size+1,c
  2872  007954  0E28               	movlw	40
  2873  007956  6E3F               	movwf	linspace@size,c
  2874  007958  ECC5  F037         	call	_linspace	;wreg free
  2875                           
  2876                           ;fuzzy.c: 290: tri_mf(ante_mf1,x,-3.6, -2, -0.4);
  2877  00795C  0101               	movlb	1	; () banked
  2878  00795E  0E01               	movlw	high fuzzy_system_single1@ante_mf1
  2879  007960  6E47               	movwf	tri_mf@t_value+1,c
  2880  007962  0101               	movlb	1	; () banked
  2881  007964  0E00               	movlw	low fuzzy_system_single1@ante_mf1
  2882  007966  6E46               	movwf	tri_mf@t_value,c
  2883  007968  0106               	movlb	6	; () banked
  2884  00796A  0E06               	movlw	high fuzzy_system_single1@x
  2885  00796C  6E49               	movwf	tri_mf@x+1,c
  2886  00796E  0106               	movlb	6	; () banked
  2887  007970  0E00               	movlw	low fuzzy_system_single1@x
  2888  007972  6E48               	movwf	tri_mf@x,c
  2889  007974  0E66               	movlw	102
  2890  007976  6E4A               	movwf	tri_mf@a,c
  2891  007978  0E66               	movlw	102
  2892  00797A  6E4B               	movwf	tri_mf@a+1,c
  2893  00797C  0EC0               	movlw	192
  2894  00797E  6E4C               	movwf	tri_mf@a+2,c
  2895  007980  0E00               	movlw	0
  2896  007982  6E4D               	movwf	tri_mf@b,c
  2897  007984  0E00               	movlw	0
  2898  007986  6E4E               	movwf	tri_mf@b+1,c
  2899  007988  0EC0               	movlw	192
  2900  00798A  6E4F               	movwf	tri_mf@b+2,c
  2901  00798C  0ECD               	movlw	205
  2902  00798E  6E50               	movwf	tri_mf@c,c
  2903  007990  0ECC               	movlw	204
  2904  007992  6E51               	movwf	tri_mf@c+1,c
  2905  007994  0EBE               	movlw	190
  2906  007996  6E52               	movwf	tri_mf@c+2,c
  2907  007998  EC46  F038         	call	_tri_mf	;wreg free
  2908                           
  2909                           ;fuzzy.c: 291: tri_mf(ante_mf2,x,-1.6, 0, 1.6);
  2910  00799C  0101               	movlb	1	; () banked
  2911  00799E  0E01               	movlw	high fuzzy_system_single1@ante_mf2
  2912  0079A0  6E47               	movwf	tri_mf@t_value+1,c
  2913  0079A2  0101               	movlb	1	; () banked
  2914  0079A4  0E78               	movlw	low fuzzy_system_single1@ante_mf2
  2915  0079A6  6E46               	movwf	tri_mf@t_value,c
  2916  0079A8  0106               	movlb	6	; () banked
  2917  0079AA  0E06               	movlw	high fuzzy_system_single1@x
  2918  0079AC  6E49               	movwf	tri_mf@x+1,c
  2919  0079AE  0106               	movlb	6	; () banked
  2920  0079B0  0E00               	movlw	low fuzzy_system_single1@x
  2921  0079B2  6E48               	movwf	tri_mf@x,c
  2922  0079B4  0ECD               	movlw	205
  2923  0079B6  6E4A               	movwf	tri_mf@a,c
  2924  0079B8  0ECC               	movlw	204
  2925  0079BA  6E4B               	movwf	tri_mf@a+1,c
  2926  0079BC  0EBF               	movlw	191
  2927  0079BE  6E4C               	movwf	tri_mf@a+2,c
  2928  0079C0  0E00               	movlw	0
  2929  0079C2  6E4D               	movwf	tri_mf@b,c
  2930  0079C4  0E00               	movlw	0
  2931  0079C6  6E4E               	movwf	tri_mf@b+1,c
  2932  0079C8  0E00               	movlw	0
  2933  0079CA  6E4F               	movwf	tri_mf@b+2,c
  2934  0079CC  0ECD               	movlw	205
  2935  0079CE  6E50               	movwf	tri_mf@c,c
  2936  0079D0  0ECC               	movlw	204
  2937  0079D2  6E51               	movwf	tri_mf@c+1,c
  2938  0079D4  0E3F               	movlw	63
  2939  0079D6  6E52               	movwf	tri_mf@c+2,c
  2940  0079D8  EC46  F038         	call	_tri_mf	;wreg free
  2941                           
  2942                           ;fuzzy.c: 292: tri_mf(ante_mf3,x,0.4, 2, 3.6);
  2943  0079DC  0102               	movlb	2	; () banked
  2944  0079DE  0E02               	movlw	high fuzzy_system_single1@ante_mf3
  2945  0079E0  6E47               	movwf	tri_mf@t_value+1,c
  2946  0079E2  0102               	movlb	2	; () banked
  2947  0079E4  0E78               	movlw	low fuzzy_system_single1@ante_mf3
  2948  0079E6  6E46               	movwf	tri_mf@t_value,c
  2949  0079E8  0106               	movlb	6	; () banked
  2950  0079EA  0E06               	movlw	high fuzzy_system_single1@x
  2951  0079EC  6E49               	movwf	tri_mf@x+1,c
  2952  0079EE  0106               	movlb	6	; () banked
  2953  0079F0  0E00               	movlw	low fuzzy_system_single1@x
  2954  0079F2  6E48               	movwf	tri_mf@x,c
  2955  0079F4  0ECD               	movlw	205
  2956  0079F6  6E4A               	movwf	tri_mf@a,c
  2957  0079F8  0ECC               	movlw	204
  2958  0079FA  6E4B               	movwf	tri_mf@a+1,c
  2959  0079FC  0E3E               	movlw	62
  2960  0079FE  6E4C               	movwf	tri_mf@a+2,c
  2961  007A00  0E00               	movlw	0
  2962  007A02  6E4D               	movwf	tri_mf@b,c
  2963  007A04  0E00               	movlw	0
  2964  007A06  6E4E               	movwf	tri_mf@b+1,c
  2965  007A08  0E40               	movlw	64
  2966  007A0A  6E4F               	movwf	tri_mf@b+2,c
  2967  007A0C  0E66               	movlw	102
  2968  007A0E  6E50               	movwf	tri_mf@c,c
  2969  007A10  0E66               	movlw	102
  2970  007A12  6E51               	movwf	tri_mf@c+1,c
  2971  007A14  0E40               	movlw	64
  2972  007A16  6E52               	movwf	tri_mf@c+2,c
  2973  007A18  EC46  F038         	call	_tri_mf	;wreg free
  2974                           
  2975                           ;fuzzy.c: 295: tri_mf(cons_mf1,y,-40, 0, 40);
  2976  007A1C  0103               	movlb	3	; () banked
  2977  007A1E  0E03               	movlw	high fuzzy_system_single1@cons_mf1
  2978  007A20  6E47               	movwf	tri_mf@t_value+1,c
  2979  007A22  0103               	movlb	3	; () banked
  2980  007A24  0E00               	movlw	low fuzzy_system_single1@cons_mf1
  2981  007A26  6E46               	movwf	tri_mf@t_value,c
  2982  007A28  0106               	movlb	6	; () banked
  2983  007A2A  0E06               	movlw	high fuzzy_system_single1@y
  2984  007A2C  6E49               	movwf	tri_mf@x+1,c
  2985  007A2E  0106               	movlb	6	; () banked
  2986  007A30  0E78               	movlw	low fuzzy_system_single1@y
  2987  007A32  6E48               	movwf	tri_mf@x,c
  2988  007A34  0E00               	movlw	0
  2989  007A36  6E4A               	movwf	tri_mf@a,c
  2990  007A38  0E20               	movlw	32
  2991  007A3A  6E4B               	movwf	tri_mf@a+1,c
  2992  007A3C  0EC2               	movlw	194
  2993  007A3E  6E4C               	movwf	tri_mf@a+2,c
  2994  007A40  0E00               	movlw	0
  2995  007A42  6E4D               	movwf	tri_mf@b,c
  2996  007A44  0E00               	movlw	0
  2997  007A46  6E4E               	movwf	tri_mf@b+1,c
  2998  007A48  0E00               	movlw	0
  2999  007A4A  6E4F               	movwf	tri_mf@b+2,c
  3000  007A4C  0E00               	movlw	0
  3001  007A4E  6E50               	movwf	tri_mf@c,c
  3002  007A50  0E20               	movlw	32
  3003  007A52  6E51               	movwf	tri_mf@c+1,c
  3004  007A54  0E42               	movlw	66
  3005  007A56  6E52               	movwf	tri_mf@c+2,c
  3006  007A58  EC46  F038         	call	_tri_mf	;wreg free
  3007                           
  3008                           ;fuzzy.c: 296: tri_mf(cons_mf2,y,10, 50, 90);
  3009  007A5C  0102               	movlb	2	; () banked
  3010  007A5E  0E02               	movlw	high fuzzy_system_single1@cons_mf2
  3011  007A60  6E47               	movwf	tri_mf@t_value+1,c
  3012  007A62  0102               	movlb	2	; () banked
  3013  007A64  0E00               	movlw	low fuzzy_system_single1@cons_mf2
  3014  007A66  6E46               	movwf	tri_mf@t_value,c
  3015  007A68  0106               	movlb	6	; () banked
  3016  007A6A  0E06               	movlw	high fuzzy_system_single1@y
  3017  007A6C  6E49               	movwf	tri_mf@x+1,c
  3018  007A6E  0106               	movlb	6	; () banked
  3019  007A70  0E78               	movlw	low fuzzy_system_single1@y
  3020  007A72  6E48               	movwf	tri_mf@x,c
  3021  007A74  0E00               	movlw	0
  3022  007A76  6E4A               	movwf	tri_mf@a,c
  3023  007A78  0E20               	movlw	32
  3024  007A7A  6E4B               	movwf	tri_mf@a+1,c
  3025  007A7C  0E41               	movlw	65
  3026  007A7E  6E4C               	movwf	tri_mf@a+2,c
  3027  007A80  0E00               	movlw	0
  3028  007A82  6E4D               	movwf	tri_mf@b,c
  3029  007A84  0E48               	movlw	72
  3030  007A86  6E4E               	movwf	tri_mf@b+1,c
  3031  007A88  0E42               	movlw	66
  3032  007A8A  6E4F               	movwf	tri_mf@b+2,c
  3033  007A8C  0E00               	movlw	0
  3034  007A8E  6E50               	movwf	tri_mf@c,c
  3035  007A90  0EB4               	movlw	180
  3036  007A92  6E51               	movwf	tri_mf@c+1,c
  3037  007A94  0E42               	movlw	66
  3038  007A96  6E52               	movwf	tri_mf@c+2,c
  3039  007A98  EC46  F038         	call	_tri_mf	;wreg free
  3040                           
  3041                           ;fuzzy.c: 297: tri_mf(cons_mf3,y,60, 100, 140);
  3042  007A9C  0105               	movlb	5	; () banked
  3043  007A9E  0E05               	movlw	high fuzzy_system_single1@cons_mf3
  3044  007AA0  6E47               	movwf	tri_mf@t_value+1,c
  3045  007AA2  0105               	movlb	5	; () banked
  3046  007AA4  0E00               	movlw	low fuzzy_system_single1@cons_mf3
  3047  007AA6  6E46               	movwf	tri_mf@t_value,c
  3048  007AA8  0106               	movlb	6	; () banked
  3049  007AAA  0E06               	movlw	high fuzzy_system_single1@y
  3050  007AAC  6E49               	movwf	tri_mf@x+1,c
  3051  007AAE  0106               	movlb	6	; () banked
  3052  007AB0  0E78               	movlw	low fuzzy_system_single1@y
  3053  007AB2  6E48               	movwf	tri_mf@x,c
  3054  007AB4  0E00               	movlw	0
  3055  007AB6  6E4A               	movwf	tri_mf@a,c
  3056  007AB8  0E70               	movlw	112
  3057  007ABA  6E4B               	movwf	tri_mf@a+1,c
  3058  007ABC  0E42               	movlw	66
  3059  007ABE  6E4C               	movwf	tri_mf@a+2,c
  3060  007AC0  0E00               	movlw	0
  3061  007AC2  6E4D               	movwf	tri_mf@b,c
  3062  007AC4  0EC8               	movlw	200
  3063  007AC6  6E4E               	movwf	tri_mf@b+1,c
  3064  007AC8  0E42               	movlw	66
  3065  007ACA  6E4F               	movwf	tri_mf@b+2,c
  3066  007ACC  0E00               	movlw	0
  3067  007ACE  6E50               	movwf	tri_mf@c,c
  3068  007AD0  0E0C               	movlw	12
  3069  007AD2  6E51               	movwf	tri_mf@c+1,c
  3070  007AD4  0E43               	movlw	67
  3071  007AD6  6E52               	movwf	tri_mf@c+2,c
  3072  007AD8  EC46  F038         	call	_tri_mf	;wreg free
  3073                           
  3074                           ;fuzzy.c: 301: w1=triangular(-3.6, -2, -0.4,input);
  3075  007ADC  0E66               	movlw	102
  3076  007ADE  6E37               	movwf	triangular@a,c
  3077  007AE0  0E66               	movlw	102
  3078  007AE2  6E38               	movwf	triangular@a+1,c
  3079  007AE4  0EC0               	movlw	192
  3080  007AE6  6E39               	movwf	triangular@a+2,c
  3081  007AE8  0E00               	movlw	0
  3082  007AEA  6E3A               	movwf	triangular@b,c
  3083  007AEC  0E00               	movlw	0
  3084  007AEE  6E3B               	movwf	triangular@b+1,c
  3085  007AF0  0EC0               	movlw	192
  3086  007AF2  6E3C               	movwf	triangular@b+2,c
  3087  007AF4  0ECD               	movlw	205
  3088  007AF6  6E3D               	movwf	triangular@c,c
  3089  007AF8  0ECC               	movlw	204
  3090  007AFA  6E3E               	movwf	triangular@c+1,c
  3091  007AFC  0EBE               	movlw	190
  3092  007AFE  6E3F               	movwf	triangular@c+2,c
  3093  007B00  C053  F040         	movff	fuzzy_system_single1@input,triangular@x
  3094  007B04  C054  F041         	movff	fuzzy_system_single1@input+1,triangular@x+1
  3095  007B08  C055  F042         	movff	fuzzy_system_single1@input+2,triangular@x+2
  3096  007B0C  EC5E  F03A         	call	_triangular	;wreg free
  3097  007B10  C037  F056         	movff	?_triangular,fuzzy_system_single1@w1
  3098  007B14  C038  F057         	movff	?_triangular+1,fuzzy_system_single1@w1+1
  3099  007B18  C039  F058         	movff	?_triangular+2,fuzzy_system_single1@w1+2
  3100                           
  3101                           ;fuzzy.c: 302: w2=triangular(-1.6, 0, 1.6,input);
  3102  007B1C  0ECD               	movlw	205
  3103  007B1E  6E37               	movwf	triangular@a,c
  3104  007B20  0ECC               	movlw	204
  3105  007B22  6E38               	movwf	triangular@a+1,c
  3106  007B24  0EBF               	movlw	191
  3107  007B26  6E39               	movwf	triangular@a+2,c
  3108  007B28  0E00               	movlw	0
  3109  007B2A  6E3A               	movwf	triangular@b,c
  3110  007B2C  0E00               	movlw	0
  3111  007B2E  6E3B               	movwf	triangular@b+1,c
  3112  007B30  0E00               	movlw	0
  3113  007B32  6E3C               	movwf	triangular@b+2,c
  3114  007B34  0ECD               	movlw	205
  3115  007B36  6E3D               	movwf	triangular@c,c
  3116  007B38  0ECC               	movlw	204
  3117  007B3A  6E3E               	movwf	triangular@c+1,c
  3118  007B3C  0E3F               	movlw	63
  3119  007B3E  6E3F               	movwf	triangular@c+2,c
  3120  007B40  C053  F040         	movff	fuzzy_system_single1@input,triangular@x
  3121  007B44  C054  F041         	movff	fuzzy_system_single1@input+1,triangular@x+1
  3122  007B48  C055  F042         	movff	fuzzy_system_single1@input+2,triangular@x+2
  3123  007B4C  EC5E  F03A         	call	_triangular	;wreg free
  3124  007B50  C037  F059         	movff	?_triangular,fuzzy_system_single1@w2
  3125  007B54  C038  F05A         	movff	?_triangular+1,fuzzy_system_single1@w2+1
  3126  007B58  C039  F05B         	movff	?_triangular+2,fuzzy_system_single1@w2+2
  3127                           
  3128                           ;fuzzy.c: 303: w3=triangular(0.4, 2, 3.6,input);
  3129  007B5C  0ECD               	movlw	205
  3130  007B5E  6E37               	movwf	triangular@a,c
  3131  007B60  0ECC               	movlw	204
  3132  007B62  6E38               	movwf	triangular@a+1,c
  3133  007B64  0E3E               	movlw	62
  3134  007B66  6E39               	movwf	triangular@a+2,c
  3135  007B68  0E00               	movlw	0
  3136  007B6A  6E3A               	movwf	triangular@b,c
  3137  007B6C  0E00               	movlw	0
  3138  007B6E  6E3B               	movwf	triangular@b+1,c
  3139  007B70  0E40               	movlw	64
  3140  007B72  6E3C               	movwf	triangular@b+2,c
  3141  007B74  0E66               	movlw	102
  3142  007B76  6E3D               	movwf	triangular@c,c
  3143  007B78  0E66               	movlw	102
  3144  007B7A  6E3E               	movwf	triangular@c+1,c
  3145  007B7C  0E40               	movlw	64
  3146  007B7E  6E3F               	movwf	triangular@c+2,c
  3147  007B80  C053  F040         	movff	fuzzy_system_single1@input,triangular@x
  3148  007B84  C054  F041         	movff	fuzzy_system_single1@input+1,triangular@x+1
  3149  007B88  C055  F042         	movff	fuzzy_system_single1@input+2,triangular@x+2
  3150  007B8C  EC5E  F03A         	call	_triangular	;wreg free
  3151  007B90  C037  F05C         	movff	?_triangular,fuzzy_system_single1@w3
  3152  007B94  C038  F05D         	movff	?_triangular+1,fuzzy_system_single1@w3+1
  3153  007B98  C039  F05E         	movff	?_triangular+2,fuzzy_system_single1@w3+2
  3154                           
  3155                           ;fuzzy.c: 304: qualified(qualified_cons_mf1,cons_mf3,w1);
  3156  007B9C  0103               	movlb	3	; () banked
  3157  007B9E  0E03               	movlw	high fuzzy_system_single1@qualified_cons_mf1
  3158  007BA0  6E11               	movwf	qualified@y+1,c
  3159  007BA2  0103               	movlb	3	; () banked
  3160  007BA4  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf1
  3161  007BA6  6E10               	movwf	qualified@y,c
  3162  007BA8  0105               	movlb	5	; () banked
  3163  007BAA  0E05               	movlw	high fuzzy_system_single1@cons_mf3
  3164  007BAC  6E13               	movwf	qualified@x+1,c
  3165  007BAE  0105               	movlb	5	; () banked
  3166  007BB0  0E00               	movlw	low fuzzy_system_single1@cons_mf3
  3167  007BB2  6E12               	movwf	qualified@x,c
  3168  007BB4  C056  F014         	movff	fuzzy_system_single1@w1,qualified@w
  3169  007BB8  C057  F015         	movff	fuzzy_system_single1@w1+1,qualified@w+1
  3170  007BBC  C058  F016         	movff	fuzzy_system_single1@w1+2,qualified@w+2
  3171  007BC0  EC51  F037         	call	_qualified	;wreg free
  3172                           
  3173                           ;fuzzy.c: 305: qualified(qualified_cons_mf2,cons_mf3,w2);
  3174  007BC4  0104               	movlb	4	; () banked
  3175  007BC6  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf2
  3176  007BC8  6E11               	movwf	qualified@y+1,c
  3177  007BCA  0104               	movlb	4	; () banked
  3178  007BCC  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf2
  3179  007BCE  6E10               	movwf	qualified@y,c
  3180  007BD0  0105               	movlb	5	; () banked
  3181  007BD2  0E05               	movlw	high fuzzy_system_single1@cons_mf3
  3182  007BD4  6E13               	movwf	qualified@x+1,c
  3183  007BD6  0105               	movlb	5	; () banked
  3184  007BD8  0E00               	movlw	low fuzzy_system_single1@cons_mf3
  3185  007BDA  6E12               	movwf	qualified@x,c
  3186  007BDC  C059  F014         	movff	fuzzy_system_single1@w2,qualified@w
  3187  007BE0  C05A  F015         	movff	fuzzy_system_single1@w2+1,qualified@w+1
  3188  007BE4  C05B  F016         	movff	fuzzy_system_single1@w2+2,qualified@w+2
  3189  007BE8  EC51  F037         	call	_qualified	;wreg free
  3190                           
  3191                           ;fuzzy.c: 306: qualified(qualified_cons_mf3,cons_mf1,w3);
  3192  007BEC  0104               	movlb	4	; () banked
  3193  007BEE  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf3
  3194  007BF0  6E11               	movwf	qualified@y+1,c
  3195  007BF2  0104               	movlb	4	; () banked
  3196  007BF4  0E00               	movlw	low fuzzy_system_single1@qualified_cons_mf3
  3197  007BF6  6E10               	movwf	qualified@y,c
  3198  007BF8  0103               	movlb	3	; () banked
  3199  007BFA  0E03               	movlw	high fuzzy_system_single1@cons_mf1
  3200  007BFC  6E13               	movwf	qualified@x+1,c
  3201  007BFE  0103               	movlb	3	; () banked
  3202  007C00  0E00               	movlw	low fuzzy_system_single1@cons_mf1
  3203  007C02  6E12               	movwf	qualified@x,c
  3204  007C04  C05C  F014         	movff	fuzzy_system_single1@w3,qualified@w
  3205  007C08  C05D  F015         	movff	fuzzy_system_single1@w3+1,qualified@w+1
  3206  007C0C  C05E  F016         	movff	fuzzy_system_single1@w3+2,qualified@w+2
  3207  007C10  EC51  F037         	call	_qualified	;wreg free
  3208                           
  3209                           ;fuzzy.c: 307: out_mf(overall_out_mf,qualified_cons_mf1,qualified_cons_mf2,qualified_con
      +                          s_mf3);
  3210  007C14  0105               	movlb	5	; () banked
  3211  007C16  0E05               	movlw	high fuzzy_system_single1@overall_out_mf
  3212  007C18  6E11               	movwf	out_mf@result+1,c
  3213  007C1A  0105               	movlb	5	; () banked
  3214  007C1C  0E78               	movlw	low fuzzy_system_single1@overall_out_mf
  3215  007C1E  6E10               	movwf	out_mf@result,c
  3216  007C20  0103               	movlb	3	; () banked
  3217  007C22  0E03               	movlw	high fuzzy_system_single1@qualified_cons_mf1
  3218  007C24  6E13               	movwf	out_mf@x+1,c
  3219  007C26  0103               	movlb	3	; () banked
  3220  007C28  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf1
  3221  007C2A  6E12               	movwf	out_mf@x,c
  3222  007C2C  0104               	movlb	4	; () banked
  3223  007C2E  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf2
  3224  007C30  6E15               	movwf	out_mf@y+1,c
  3225  007C32  0104               	movlb	4	; () banked
  3226  007C34  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf2
  3227  007C36  6E14               	movwf	out_mf@y,c
  3228  007C38  0104               	movlb	4	; () banked
  3229  007C3A  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf3
  3230  007C3C  6E17               	movwf	out_mf@z+1,c
  3231  007C3E  0104               	movlb	4	; () banked
  3232  007C40  0E00               	movlw	low fuzzy_system_single1@qualified_cons_mf3
  3233  007C42  6E16               	movwf	out_mf@z,c
  3234  007C44  EC51  F03B         	call	_out_mf	;wreg free
  3235                           
  3236                           ;fuzzy.c: 308: output= defuzzy(y,overall_out_mf);
  3237  007C48  0106               	movlb	6	; () banked
  3238  007C4A  0E06               	movlw	high fuzzy_system_single1@y
  3239  007C4C  6E38               	movwf	defuzzy@x+1,c
  3240  007C4E  0106               	movlb	6	; () banked
  3241  007C50  0E78               	movlw	low fuzzy_system_single1@y
  3242  007C52  6E37               	movwf	defuzzy@x,c
  3243  007C54  0105               	movlb	5	; () banked
  3244  007C56  0E05               	movlw	high fuzzy_system_single1@overall_out_mf
  3245  007C58  6E3A               	movwf	defuzzy@mf+1,c
  3246  007C5A  0105               	movlb	5	; () banked
  3247  007C5C  0E78               	movlw	low fuzzy_system_single1@overall_out_mf
  3248  007C5E  6E39               	movwf	defuzzy@mf,c
  3249  007C60  ECD7  F038         	call	_defuzzy	;wreg free
  3250  007C64  C037  F0DA         	movff	?_defuzzy,fuzzy_system_single1@output
  3251  007C68  C038  F0DB         	movff	?_defuzzy+1,fuzzy_system_single1@output+1
  3252  007C6C  C039  F0DC         	movff	?_defuzzy+2,fuzzy_system_single1@output+2
  3253                           
  3254                           ;fuzzy.c: 309: return output;
  3255  007C70  C0DA  F053         	movff	fuzzy_system_single1@output,?_fuzzy_system_single1
  3256  007C74  C0DB  F054         	movff	fuzzy_system_single1@output+1,?_fuzzy_system_single1+1
  3257  007C78  C0DC  F055         	movff	fuzzy_system_single1@output+2,?_fuzzy_system_single1+2
  3258  007C7C  0012               	return	
  3259  007C7E                     __end_of_fuzzy_system_single1:
  3260                           	opt stack 0
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           wreg	equ	0xFE8
  3266                           status	equ	0xFD8
  3267                           
  3268 ;; *************** function _tri_mf *****************
  3269 ;; Defined at:
  3270 ;;		line 64 in file "fuzzy.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  t_value         2   69[COMRAM] PTR 
  3273 ;;		 -> fuzzy_system_single1@cons_mf3(120), fuzzy_system_single1@cons_mf2(120), fuzzy_system_single1@cons_mf1(120), fuzz
      +y_system_single1@ante_mf3(120), 
  3274 ;;		 -> fuzzy_system_single1@ante_mf2(120), fuzzy_system_single1@ante_mf1(120), fuzzy_system_single2@cons_mf3(120), fuzz
      +y_system_single2@cons_mf2(120), 
  3275 ;;		 -> fuzzy_system_single2@cons_mf1(120), fuzzy_system_single2@ante_mf3(120), fuzzy_system_single2@ante_mf2(120), fuzz
      +y_system_single2@ante_mf1(120), 
  3276 ;;  x               2   71[COMRAM] PTR 
  3277 ;;		 -> fuzzy_system_single1@y(120), fuzzy_system_single1@x(120), fuzzy_system_single2@y(120), fuzzy_system_single2@x(12
      +0), 
  3278 ;;  a               3   73[COMRAM] PTR 
  3279 ;;  b               3   76[COMRAM] PTR 
  3280 ;;  c               3   79[COMRAM] PTR 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  temp          120    0[BANK0 ] [40]
  3283 ;;  i               2  120[BANK0 ] int 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;		None               void
  3286 ;; Registers used:
  3287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3293 ;;      Params:        13       0       0       0       0       0       0       0       0
  3294 ;;      Locals:         0     122       0       0       0       0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3296 ;;      Totals:        13     122       0       0       0       0       0       0       0
  3297 ;;Total ram usage:      135 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    3
  3300 ;; This function calls:
  3301 ;;		___wmul
  3302 ;;		_triangular
  3303 ;; This function is called by:
  3304 ;;		_fuzzy_system_single2
  3305 ;;		_fuzzy_system_single1
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text18
  3310  00708C                     __ptext18:
  3311                           	opt stack 0
  3312  00708C                     _tri_mf:
  3313                           	opt stack 26
  3314                           
  3315                           ;fuzzy.c: 66: int i;
  3316                           ;fuzzy.c: 67: double temp[40];
  3317                           ;fuzzy.c: 68: for(i=0; i<40; i++)
  3318                           
  3319                           ;incstack = 0
  3320  00708C  0E00               	movlw	0
  3321  00708E  0100               	movlb	0	; () banked
  3322  007090  6FD9               	movwf	(tri_mf@i+1)& (0+255),b
  3323  007092  0E00               	movlw	0
  3324  007094  0100               	movlb	0	; () banked
  3325  007096  6FD8               	movwf	tri_mf@i& (0+255),b
  3326  007098                     
  3327                           ; BSR set to: 0
  3328  007098  0100               	movlb	0	; () banked
  3329  00709A  51D9               	movf	(tri_mf@i+1)& (0+255),w,b
  3330  00709C  0A80               	xorlw	128
  3331  00709E  0F80               	addlw	-128
  3332  0070A0  0E28               	movlw	40
  3333  0070A2  B4D8               	btfsc	status,2,c
  3334  0070A4  5DD8               	subwf	tri_mf@i& (0+255),w,b
  3335  0070A6  B0D8               	btfsc	status,0,c
  3336  0070A8  D02D               	goto	l2263
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;fuzzy.c: 69: temp[i]= x[i];
  3340                           
  3341                           ; BSR set to: 0
  3342                           
  3343                           ; BSR set to: 0
  3344  0070AA  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3345  0070AE  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3346  0070B2  0E00               	movlw	0
  3347  0070B4  6E04               	movwf	___wmul@multiplicand+1,c
  3348  0070B6  0E03               	movlw	3
  3349  0070B8  6E03               	movwf	___wmul@multiplicand,c
  3350  0070BA  EC3D  F033         	call	___wmul	;wreg free
  3351  0070BE  5001               	movf	?___wmul,w,c
  3352  0070C0  2448               	addwf	tri_mf@x,w,c
  3353  0070C2  6ED9               	movwf	fsr2l,c
  3354  0070C4  5002               	movf	?___wmul+1,w,c
  3355  0070C6  2049               	addwfc	tri_mf@x+1,w,c
  3356  0070C8  6EDA               	movwf	fsr2h,c
  3357  0070CA  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3358  0070CE  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3359  0070D2  0E00               	movlw	0
  3360  0070D4  6E04               	movwf	___wmul@multiplicand+1,c
  3361  0070D6  0E03               	movlw	3
  3362  0070D8  6E03               	movwf	___wmul@multiplicand,c
  3363  0070DA  EC3D  F033         	call	___wmul	;wreg free
  3364  0070DE  0100               	movlb	0	; () banked
  3365  0070E0  0E60               	movlw	low tri_mf@temp
  3366  0070E2  2401               	addwf	?___wmul,w,c
  3367  0070E4  6EE1               	movwf	fsr1l,c
  3368  0070E6  0100               	movlb	0	; () banked
  3369  0070E8  0E00               	movlw	high tri_mf@temp
  3370  0070EA  2002               	addwfc	?___wmul+1,w,c
  3371  0070EC  6EE2               	movwf	fsr1h,c
  3372  0070EE  CFDE FFE6          	movff	postinc2,postinc1
  3373  0070F2  CFDE FFE6          	movff	postinc2,postinc1
  3374  0070F6  CFDE FFE5          	movff	postinc2,postdec1
  3375  0070FA  52E5               	movf	postdec1,f,c
  3376                           
  3377                           ; BSR set to: 0
  3378  0070FC  0100               	movlb	0	; () banked
  3379  0070FE  4BD8               	infsnz	tri_mf@i& (0+255),f,b
  3380  007100  2BD9               	incf	(tri_mf@i+1)& (0+255),f,b
  3381  007102  D7CA               	goto	L6
  3382  007104                     l2263:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;fuzzy.c: 70: for(i=0; i<40; i++)
  3386  007104  0E00               	movlw	0
  3387  007106  0100               	movlb	0	; () banked
  3388  007108  6FD9               	movwf	(tri_mf@i+1)& (0+255),b
  3389  00710A  0E00               	movlw	0
  3390  00710C  0100               	movlb	0	; () banked
  3391  00710E  6FD8               	movwf	tri_mf@i& (0+255),b
  3392  007110                     
  3393                           ; BSR set to: 0
  3394  007110  0100               	movlb	0	; () banked
  3395  007112  51D9               	movf	(tri_mf@i+1)& (0+255),w,b
  3396  007114  0A80               	xorlw	128
  3397  007116  0F80               	addlw	-128
  3398  007118  0E28               	movlw	40
  3399  00711A  B4D8               	btfsc	status,2,c
  3400  00711C  5DD8               	subwf	tri_mf@i& (0+255),w,b
  3401  00711E  B0D8               	btfsc	status,0,c
  3402  007120  D045               	goto	l97
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;fuzzy.c: 71: t_value[i]= triangular(a,b,c,x[i]);
  3406                           
  3407                           ; BSR set to: 0
  3408                           
  3409                           ; BSR set to: 0
  3410  007122  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3411  007126  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3412  00712A  0E00               	movlw	0
  3413  00712C  6E04               	movwf	___wmul@multiplicand+1,c
  3414  00712E  0E03               	movlw	3
  3415  007130  6E03               	movwf	___wmul@multiplicand,c
  3416  007132  EC3D  F033         	call	___wmul	;wreg free
  3417  007136  5001               	movf	?___wmul,w,c
  3418  007138  2446               	addwf	tri_mf@t_value,w,c
  3419  00713A  6ED9               	movwf	fsr2l,c
  3420  00713C  5002               	movf	?___wmul+1,w,c
  3421  00713E  2047               	addwfc	tri_mf@t_value+1,w,c
  3422  007140  6EDA               	movwf	fsr2h,c
  3423  007142  C04A  F037         	movff	tri_mf@a,triangular@a
  3424  007146  C04B  F038         	movff	tri_mf@a+1,triangular@a+1
  3425  00714A  C04C  F039         	movff	tri_mf@a+2,triangular@a+2
  3426  00714E  C04D  F03A         	movff	tri_mf@b,triangular@b
  3427  007152  C04E  F03B         	movff	tri_mf@b+1,triangular@b+1
  3428  007156  C04F  F03C         	movff	tri_mf@b+2,triangular@b+2
  3429  00715A  C050  F03D         	movff	tri_mf@c,triangular@c
  3430  00715E  C051  F03E         	movff	tri_mf@c+1,triangular@c+1
  3431  007162  C052  F03F         	movff	tri_mf@c+2,triangular@c+2
  3432  007166  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3433  00716A  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3434  00716E  0E00               	movlw	0
  3435  007170  6E04               	movwf	___wmul@multiplicand+1,c
  3436  007172  0E03               	movlw	3
  3437  007174  6E03               	movwf	___wmul@multiplicand,c
  3438  007176  EC3D  F033         	call	___wmul	;wreg free
  3439  00717A  5001               	movf	?___wmul,w,c
  3440  00717C  2448               	addwf	tri_mf@x,w,c
  3441  00717E  6EE1               	movwf	fsr1l,c
  3442  007180  5002               	movf	?___wmul+1,w,c
  3443  007182  2049               	addwfc	tri_mf@x+1,w,c
  3444  007184  6EE2               	movwf	fsr1h,c
  3445  007186  CFE6 F040          	movff	postinc1,triangular@x
  3446  00718A  CFE6 F041          	movff	postinc1,triangular@x+1
  3447  00718E  CFE5 F042          	movff	postdec1,triangular@x+2
  3448  007192  EC5E  F03A         	call	_triangular	;wreg free
  3449  007196  C037  FFDE         	movff	?_triangular,postinc2
  3450  00719A  C038  FFDE         	movff	?_triangular+1,postinc2
  3451  00719E  C039  FFDD         	movff	?_triangular+2,postdec2
  3452  0071A2  52DD               	movf	postdec2,f,c
  3453  0071A4  0100               	movlb	0	; () banked
  3454  0071A6  4BD8               	infsnz	tri_mf@i& (0+255),f,b
  3455  0071A8  2BD9               	incf	(tri_mf@i+1)& (0+255),f,b
  3456  0071AA  D7B2               	goto	L7
  3457  0071AC                     l97:
  3458                           
  3459                           ; BSR set to: 0
  3460  0071AC  0012               	return	
  3461  0071AE                     __end_of_tri_mf:
  3462                           	opt stack 0
  3463                           tblptru	equ	0xFF8
  3464                           tblptrh	equ	0xFF7
  3465                           tblptrl	equ	0xFF6
  3466                           tablat	equ	0xFF5
  3467                           wreg	equ	0xFE8
  3468                           postinc1	equ	0xFE6
  3469                           postdec1	equ	0xFE5
  3470                           fsr1h	equ	0xFE2
  3471                           fsr1l	equ	0xFE1
  3472                           postinc2	equ	0xFDE
  3473                           postdec2	equ	0xFDD
  3474                           fsr2h	equ	0xFDA
  3475                           fsr2l	equ	0xFD9
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _triangular *****************
  3479 ;; Defined at:
  3480 ;;		line 46 in file "fuzzy.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  a               3   54[COMRAM] int 
  3483 ;;  b               3   57[COMRAM] int 
  3484 ;;  c               3   60[COMRAM] int 
  3485 ;;  x               3   63[COMRAM] int 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  ux              3   66[COMRAM] int 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  3   54[COMRAM] int 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3497 ;;      Params:        12       0       0       0       0       0       0       0       0
  3498 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3500 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3501 ;;Total ram usage:       15 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    2
  3504 ;; This function calls:
  3505 ;;		___ftadd
  3506 ;;		___ftdiv
  3507 ;;		___ftge
  3508 ;;		___ftneg
  3509 ;; This function is called by:
  3510 ;;		_tri_mf
  3511 ;;		_fuzzy_system_single2
  3512 ;;		_fuzzy_system_single1
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text19
  3517  0074BC                     __ptext19:
  3518                           	opt stack 0
  3519  0074BC                     _triangular:
  3520                           	opt stack 27
  3521                           
  3522                           ;fuzzy.c: 48: double ux=0;
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;incstack = 0
  3526  0074BC  0E00               	movlw	0
  3527  0074BE  6E43               	movwf	triangular@ux,c
  3528  0074C0  0E00               	movlw	0
  3529  0074C2  6E44               	movwf	triangular@ux+1,c
  3530  0074C4  0E00               	movlw	0
  3531  0074C6  6E45               	movwf	triangular@ux+2,c
  3532                           
  3533                           ;fuzzy.c: 49: if(x<=a){
  3534  0074C8  C037  F007         	movff	triangular@a,___ftge@ff1
  3535  0074CC  C038  F008         	movff	triangular@a+1,___ftge@ff1+1
  3536  0074D0  C039  F009         	movff	triangular@a+2,___ftge@ff1+2
  3537  0074D4  C040  F00A         	movff	triangular@x,___ftge@ff2
  3538  0074D8  C041  F00B         	movff	triangular@x+1,___ftge@ff2+1
  3539  0074DC  C042  F00C         	movff	triangular@x+2,___ftge@ff2+2
  3540  0074E0  EC5D  F034         	call	___ftge	;wreg free
  3541  0074E4  A0D8               	btfss	status,0,c
  3542  0074E6  D006               	goto	l2031
  3543                           
  3544                           ;fuzzy.c: 50: ux=0;
  3545  0074E8  0E00               	movlw	0
  3546  0074EA  6E43               	movwf	triangular@ux,c
  3547  0074EC  0E00               	movlw	0
  3548  0074EE  6E44               	movwf	triangular@ux+1,c
  3549  0074F0  0E00               	movlw	0
  3550  0074F2  6E45               	movwf	triangular@ux+2,c
  3551  0074F4                     l2031:
  3552                           
  3553                           ;fuzzy.c: 51: }
  3554                           ;fuzzy.c: 52: if(x>a && x<b){
  3555  0074F4  C037  F007         	movff	triangular@a,___ftge@ff1
  3556  0074F8  C038  F008         	movff	triangular@a+1,___ftge@ff1+1
  3557  0074FC  C039  F009         	movff	triangular@a+2,___ftge@ff1+2
  3558  007500  C040  F00A         	movff	triangular@x,___ftge@ff2
  3559  007504  C041  F00B         	movff	triangular@x+1,___ftge@ff2+1
  3560  007508  C042  F00C         	movff	triangular@x+2,___ftge@ff2+2
  3561  00750C  EC5D  F034         	call	___ftge	;wreg free
  3562  007510  B0D8               	btfsc	status,0,c
  3563  007512  D050               	goto	l2037
  3564  007514  C040  F007         	movff	triangular@x,___ftge@ff1
  3565  007518  C041  F008         	movff	triangular@x+1,___ftge@ff1+1
  3566  00751C  C042  F009         	movff	triangular@x+2,___ftge@ff1+2
  3567  007520  C03A  F00A         	movff	triangular@b,___ftge@ff2
  3568  007524  C03B  F00B         	movff	triangular@b+1,___ftge@ff2+1
  3569  007528  C03C  F00C         	movff	triangular@b+2,___ftge@ff2+2
  3570  00752C  EC5D  F034         	call	___ftge	;wreg free
  3571  007530  B0D8               	btfsc	status,0,c
  3572  007532  D040               	goto	l2037
  3573                           
  3574                           ;fuzzy.c: 53: ux=(x-a)/(b-a);
  3575  007534  C040  F01F         	movff	triangular@x,___ftadd@f2
  3576  007538  C041  F020         	movff	triangular@x+1,___ftadd@f2+1
  3577  00753C  C042  F021         	movff	triangular@x+2,___ftadd@f2+2
  3578  007540  C037  F001         	movff	triangular@a,___ftneg@f1
  3579  007544  C038  F002         	movff	triangular@a+1,___ftneg@f1+1
  3580  007548  C039  F003         	movff	triangular@a+2,___ftneg@f1+2
  3581  00754C  EC50  F033         	call	___ftneg	;wreg free
  3582  007550  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3583  007554  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3584  007558  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3585  00755C  EC88  F039         	call	___ftadd	;wreg free
  3586  007560  C01C  F028         	movff	?___ftadd,___ftdiv@f1
  3587  007564  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
  3588  007568  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
  3589  00756C  C03A  F01F         	movff	triangular@b,___ftadd@f2
  3590  007570  C03B  F020         	movff	triangular@b+1,___ftadd@f2+1
  3591  007574  C03C  F021         	movff	triangular@b+2,___ftadd@f2+2
  3592  007578  C037  F001         	movff	triangular@a,___ftneg@f1
  3593  00757C  C038  F002         	movff	triangular@a+1,___ftneg@f1+1
  3594  007580  C039  F003         	movff	triangular@a+2,___ftneg@f1+2
  3595  007584  EC50  F033         	call	___ftneg	;wreg free
  3596  007588  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3597  00758C  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3598  007590  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3599  007594  EC88  F039         	call	___ftadd	;wreg free
  3600  007598  C01C  F02B         	movff	?___ftadd,___ftdiv@f2
  3601  00759C  C01D  F02C         	movff	?___ftadd+1,___ftdiv@f2+1
  3602  0075A0  C01E  F02D         	movff	?___ftadd+2,___ftdiv@f2+2
  3603  0075A4  EC74  F036         	call	___ftdiv	;wreg free
  3604  0075A8  C028  F043         	movff	?___ftdiv,triangular@ux
  3605  0075AC  C029  F044         	movff	?___ftdiv+1,triangular@ux+1
  3606  0075B0  C02A  F045         	movff	?___ftdiv+2,triangular@ux+2
  3607  0075B4                     l2037:
  3608                           
  3609                           ;fuzzy.c: 54: }
  3610                           ;fuzzy.c: 55: if(x==b){
  3611  0075B4  503C               	movf	triangular@b+2,w,c
  3612  0075B6  1842               	xorwf	triangular@x+2,w,c
  3613  0075B8  E105               	bnz	u1915
  3614  0075BA  503B               	movf	triangular@b+1,w,c
  3615  0075BC  1841               	xorwf	triangular@x+1,w,c
  3616  0075BE  E102               	bnz	u1915
  3617  0075C0  503A               	movf	triangular@b,w,c
  3618  0075C2  1840               	xorwf	triangular@x,w,c
  3619  0075C4                     u1915:
  3620  0075C4  A4D8               	btfss	status,2,c
  3621  0075C6  D006               	goto	l2041
  3622                           
  3623                           ;fuzzy.c: 56: ux=1;
  3624  0075C8  0E00               	movlw	0
  3625  0075CA  6E43               	movwf	triangular@ux,c
  3626  0075CC  0E80               	movlw	128
  3627  0075CE  6E44               	movwf	triangular@ux+1,c
  3628  0075D0  0E3F               	movlw	63
  3629  0075D2  6E45               	movwf	triangular@ux+2,c
  3630  0075D4                     l2041:
  3631                           
  3632                           ;fuzzy.c: 57: }
  3633                           ;fuzzy.c: 58: if(x>b && x<c){
  3634  0075D4  C03A  F007         	movff	triangular@b,___ftge@ff1
  3635  0075D8  C03B  F008         	movff	triangular@b+1,___ftge@ff1+1
  3636  0075DC  C03C  F009         	movff	triangular@b+2,___ftge@ff1+2
  3637  0075E0  C040  F00A         	movff	triangular@x,___ftge@ff2
  3638  0075E4  C041  F00B         	movff	triangular@x+1,___ftge@ff2+1
  3639  0075E8  C042  F00C         	movff	triangular@x+2,___ftge@ff2+2
  3640  0075EC  EC5D  F034         	call	___ftge	;wreg free
  3641  0075F0  B0D8               	btfsc	status,0,c
  3642  0075F2  D050               	goto	l2047
  3643  0075F4  C040  F007         	movff	triangular@x,___ftge@ff1
  3644  0075F8  C041  F008         	movff	triangular@x+1,___ftge@ff1+1
  3645  0075FC  C042  F009         	movff	triangular@x+2,___ftge@ff1+2
  3646  007600  C03D  F00A         	movff	triangular@c,___ftge@ff2
  3647  007604  C03E  F00B         	movff	triangular@c+1,___ftge@ff2+1
  3648  007608  C03F  F00C         	movff	triangular@c+2,___ftge@ff2+2
  3649  00760C  EC5D  F034         	call	___ftge	;wreg free
  3650  007610  B0D8               	btfsc	status,0,c
  3651  007612  D040               	goto	l2047
  3652                           
  3653                           ;fuzzy.c: 59: ux = (c-x)/(c-b);
  3654  007614  C03D  F01F         	movff	triangular@c,___ftadd@f2
  3655  007618  C03E  F020         	movff	triangular@c+1,___ftadd@f2+1
  3656  00761C  C03F  F021         	movff	triangular@c+2,___ftadd@f2+2
  3657  007620  C040  F001         	movff	triangular@x,___ftneg@f1
  3658  007624  C041  F002         	movff	triangular@x+1,___ftneg@f1+1
  3659  007628  C042  F003         	movff	triangular@x+2,___ftneg@f1+2
  3660  00762C  EC50  F033         	call	___ftneg	;wreg free
  3661  007630  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3662  007634  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3663  007638  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3664  00763C  EC88  F039         	call	___ftadd	;wreg free
  3665  007640  C01C  F028         	movff	?___ftadd,___ftdiv@f1
  3666  007644  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
  3667  007648  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
  3668  00764C  C03D  F01F         	movff	triangular@c,___ftadd@f2
  3669  007650  C03E  F020         	movff	triangular@c+1,___ftadd@f2+1
  3670  007654  C03F  F021         	movff	triangular@c+2,___ftadd@f2+2
  3671  007658  C03A  F001         	movff	triangular@b,___ftneg@f1
  3672  00765C  C03B  F002         	movff	triangular@b+1,___ftneg@f1+1
  3673  007660  C03C  F003         	movff	triangular@b+2,___ftneg@f1+2
  3674  007664  EC50  F033         	call	___ftneg	;wreg free
  3675  007668  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3676  00766C  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3677  007670  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3678  007674  EC88  F039         	call	___ftadd	;wreg free
  3679  007678  C01C  F02B         	movff	?___ftadd,___ftdiv@f2
  3680  00767C  C01D  F02C         	movff	?___ftadd+1,___ftdiv@f2+1
  3681  007680  C01E  F02D         	movff	?___ftadd+2,___ftdiv@f2+2
  3682  007684  EC74  F036         	call	___ftdiv	;wreg free
  3683  007688  C028  F043         	movff	?___ftdiv,triangular@ux
  3684  00768C  C029  F044         	movff	?___ftdiv+1,triangular@ux+1
  3685  007690  C02A  F045         	movff	?___ftdiv+2,triangular@ux+2
  3686  007694                     l2047:
  3687                           
  3688                           ;fuzzy.c: 60: }
  3689                           ;fuzzy.c: 61: return ux;
  3690  007694  C043  F037         	movff	triangular@ux,?_triangular
  3691  007698  C044  F038         	movff	triangular@ux+1,?_triangular+1
  3692  00769C  C045  F039         	movff	triangular@ux+2,?_triangular+2
  3693  0076A0  0012               	return	
  3694  0076A2                     __end_of_triangular:
  3695                           	opt stack 0
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           wreg	equ	0xFE8
  3701                           postinc1	equ	0xFE6
  3702                           postdec1	equ	0xFE5
  3703                           fsr1h	equ	0xFE2
  3704                           fsr1l	equ	0xFE1
  3705                           postinc2	equ	0xFDE
  3706                           postdec2	equ	0xFDD
  3707                           fsr2h	equ	0xFDA
  3708                           fsr2l	equ	0xFD9
  3709                           status	equ	0xFD8
  3710                           
  3711 ;; *************** function ___ftneg *****************
  3712 ;; Defined at:
  3713 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  f1              3    0[COMRAM] float 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  3    0[COMRAM] float 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3727 ;;      Params:         3       0       0       0       0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3730 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3731 ;;Total ram usage:        3 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		_triangular
  3737 ;;		_trapezoidal
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text20
  3742  0066A0                     __ptext20:
  3743                           	opt stack 0
  3744  0066A0                     ___ftneg:
  3745                           	opt stack 28
  3746                           
  3747                           ;incstack = 0
  3748  0066A0  0E7F               	movlw	127
  3749  0066A2  1403               	andwf	___ftneg@f1+2,w,c
  3750  0066A4  1002               	iorwf	___ftneg@f1+1,w,c
  3751  0066A6  1001               	iorwf	___ftneg@f1,w,c
  3752  0066A8  B4D8               	btfsc	status,2,c
  3753  0066AA  D006               	goto	l706
  3754  0066AC  0E00               	movlw	0
  3755  0066AE  1A01               	xorwf	___ftneg@f1,f,c
  3756  0066B0  0E00               	movlw	0
  3757  0066B2  1A02               	xorwf	___ftneg@f1+1,f,c
  3758  0066B4  0E80               	movlw	128
  3759  0066B6  1A03               	xorwf	___ftneg@f1+2,f,c
  3760  0066B8                     l706:
  3761  0066B8  C001  F001         	movff	___ftneg@f1,?___ftneg
  3762  0066BC  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  3763  0066C0  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  3764  0066C4  0012               	return	
  3765  0066C6                     __end_of___ftneg:
  3766                           	opt stack 0
  3767                           tblptru	equ	0xFF8
  3768                           tblptrh	equ	0xFF7
  3769                           tblptrl	equ	0xFF6
  3770                           tablat	equ	0xFF5
  3771                           wreg	equ	0xFE8
  3772                           postinc1	equ	0xFE6
  3773                           postdec1	equ	0xFE5
  3774                           fsr1h	equ	0xFE2
  3775                           fsr1l	equ	0xFE1
  3776                           postinc2	equ	0xFDE
  3777                           postdec2	equ	0xFDD
  3778                           fsr2h	equ	0xFDA
  3779                           fsr2l	equ	0xFD9
  3780                           status	equ	0xFD8
  3781                           
  3782 ;; *************** function _qualified *****************
  3783 ;; Defined at:
  3784 ;;		line 108 in file "fuzzy.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  y               2   15[COMRAM] PTR 
  3787 ;;		 -> fuzzy_system_single1@qualified_cons_mf3(120), fuzzy_system_single1@qualified_cons_mf2(120), fuzzy_system_single1
      +@qualified_cons_mf1(120), fuzzy_system_single2@qualified_cons_mf3(120), 
  3788 ;;		 -> fuzzy_system_single2@qualified_cons_mf2(120), fuzzy_system_single2@qualified_cons_mf1(120), fuzzy_system_single@
      +qualified_cons_mf3(120), fuzzy_system_single@qualified_cons_mf2(120), 
  3789 ;;		 -> fuzzy_system_single@qualified_cons_mf1(120), fuzzy_system@qualified_cons_mf3(120), fuzzy_system@qualified_cons_m
      +f2(120), fuzzy_system@qualified_cons_mf1(120), 
  3790 ;;  x               2   17[COMRAM] PTR 
  3791 ;;		 -> fuzzy_system_single1@cons_mf3(120), fuzzy_system_single1@cons_mf1(120), fuzzy_system_single2@cons_mf3(120), fuzz
      +y_system_single2@cons_mf1(120), 
  3792 ;;		 -> fuzzy_system_single@cons_mf3(120), fuzzy_system_single@cons_mf2(120), fuzzy_system_single@cons_mf1(120), fuzzy_s
      +ystem@cons_mf3(120), 
  3793 ;;		 -> fuzzy_system@cons_mf2(120), fuzzy_system@cons_mf1(120), 
  3794 ;;  w               3   19[COMRAM] PTR 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  min             3   22[COMRAM] PTR 
  3797 ;;  i               2   25[COMRAM] int 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;		None               void
  3800 ;; Registers used:
  3801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3807 ;;      Params:         7       0       0       0       0       0       0       0       0
  3808 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3810 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3811 ;;Total ram usage:       12 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    1
  3814 ;; This function calls:
  3815 ;;		___ftge
  3816 ;;		___wmul
  3817 ;; This function is called by:
  3818 ;;		_fuzzy_system_single2
  3819 ;;		_fuzzy_system_single1
  3820 ;;		_fuzzy_system
  3821 ;;		_fuzzy_system_single
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text21
  3826  006EA2                     __ptext21:
  3827                           	opt stack 0
  3828  006EA2                     _qualified:
  3829                           	opt stack 28
  3830                           
  3831                           ;fuzzy.c: 110: double min;
  3832                           ;fuzzy.c: 111: int i;
  3833                           ;fuzzy.c: 112: min=w;
  3834                           
  3835                           ;incstack = 0
  3836  006EA2  C014  F017         	movff	qualified@w,qualified@min
  3837  006EA6  C015  F018         	movff	qualified@w+1,qualified@min+1
  3838  006EAA  C016  F019         	movff	qualified@w+2,qualified@min+2
  3839                           
  3840                           ;fuzzy.c: 113: for(i=0;i<40;i++){
  3841  006EAE  0E00               	movlw	0
  3842  006EB0  6E1B               	movwf	qualified@i+1,c
  3843  006EB2  0E00               	movlw	0
  3844  006EB4  6E1A               	movwf	qualified@i,c
  3845  006EB6  501B               	movf	qualified@i+1,w,c
  3846  006EB8  0A80               	xorlw	128
  3847  006EBA  0F80               	addlw	-128
  3848  006EBC  0E28               	movlw	40
  3849  006EBE  B4D8               	btfsc	status,2,c
  3850  006EC0  5C1A               	subwf	qualified@i,w,c
  3851  006EC2  B0D8               	btfsc	status,0,c
  3852  006EC4  D061               	goto	l119
  3853                           
  3854                           ;fuzzy.c: 114: if (x[i] < w)
  3855  006EC6  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3856  006ECA  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3857  006ECE  0E00               	movlw	0
  3858  006ED0  6E04               	movwf	___wmul@multiplicand+1,c
  3859  006ED2  0E03               	movlw	3
  3860  006ED4  6E03               	movwf	___wmul@multiplicand,c
  3861  006ED6  EC3D  F033         	call	___wmul	;wreg free
  3862  006EDA  5001               	movf	?___wmul,w,c
  3863  006EDC  2412               	addwf	qualified@x,w,c
  3864  006EDE  6ED9               	movwf	fsr2l,c
  3865  006EE0  5002               	movf	?___wmul+1,w,c
  3866  006EE2  2013               	addwfc	qualified@x+1,w,c
  3867  006EE4  6EDA               	movwf	fsr2h,c
  3868  006EE6  CFDE F007          	movff	postinc2,___ftge@ff1
  3869  006EEA  CFDE F008          	movff	postinc2,___ftge@ff1+1
  3870  006EEE  CFDD F009          	movff	postdec2,___ftge@ff1+2
  3871  006EF2  C014  F00A         	movff	qualified@w,___ftge@ff2
  3872  006EF6  C015  F00B         	movff	qualified@w+1,___ftge@ff2+1
  3873  006EFA  C016  F00C         	movff	qualified@w+2,___ftge@ff2+2
  3874  006EFE  EC5D  F034         	call	___ftge	;wreg free
  3875  006F02  B0D8               	btfsc	status,0,c
  3876  006F04  D028               	goto	l2315
  3877                           
  3878                           ;fuzzy.c: 115: y[i] = x[i];
  3879  006F06  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3880  006F0A  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3881  006F0E  0E00               	movlw	0
  3882  006F10  6E04               	movwf	___wmul@multiplicand+1,c
  3883  006F12  0E03               	movlw	3
  3884  006F14  6E03               	movwf	___wmul@multiplicand,c
  3885  006F16  EC3D  F033         	call	___wmul	;wreg free
  3886  006F1A  5001               	movf	?___wmul,w,c
  3887  006F1C  2412               	addwf	qualified@x,w,c
  3888  006F1E  6ED9               	movwf	fsr2l,c
  3889  006F20  5002               	movf	?___wmul+1,w,c
  3890  006F22  2013               	addwfc	qualified@x+1,w,c
  3891  006F24  6EDA               	movwf	fsr2h,c
  3892  006F26  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3893  006F2A  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3894  006F2E  0E00               	movlw	0
  3895  006F30  6E04               	movwf	___wmul@multiplicand+1,c
  3896  006F32  0E03               	movlw	3
  3897  006F34  6E03               	movwf	___wmul@multiplicand,c
  3898  006F36  EC3D  F033         	call	___wmul	;wreg free
  3899  006F3A  5001               	movf	?___wmul,w,c
  3900  006F3C  2410               	addwf	qualified@y,w,c
  3901  006F3E  6EE1               	movwf	fsr1l,c
  3902  006F40  5002               	movf	?___wmul+1,w,c
  3903  006F42  2011               	addwfc	qualified@y+1,w,c
  3904  006F44  6EE2               	movwf	fsr1h,c
  3905  006F46  CFDE FFE6          	movff	postinc2,postinc1
  3906  006F4A  CFDE FFE6          	movff	postinc2,postinc1
  3907  006F4E  CFDE FFE5          	movff	postinc2,postdec1
  3908  006F52  52E5               	movf	postdec1,f,c
  3909  006F54  D016               	goto	l2317
  3910  006F56                     l2315:
  3911                           
  3912                           ;fuzzy.c: 116: else
  3913                           ;fuzzy.c: 117: y[i] = w;
  3914  006F56  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3915  006F5A  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3916  006F5E  0E00               	movlw	0
  3917  006F60  6E04               	movwf	___wmul@multiplicand+1,c
  3918  006F62  0E03               	movlw	3
  3919  006F64  6E03               	movwf	___wmul@multiplicand,c
  3920  006F66  EC3D  F033         	call	___wmul	;wreg free
  3921  006F6A  5001               	movf	?___wmul,w,c
  3922  006F6C  2410               	addwf	qualified@y,w,c
  3923  006F6E  6ED9               	movwf	fsr2l,c
  3924  006F70  5002               	movf	?___wmul+1,w,c
  3925  006F72  2011               	addwfc	qualified@y+1,w,c
  3926  006F74  6EDA               	movwf	fsr2h,c
  3927  006F76  C014  FFDE         	movff	qualified@w,postinc2
  3928  006F7A  C015  FFDE         	movff	qualified@w+1,postinc2
  3929  006F7E  C016  FFDD         	movff	qualified@w+2,postdec2
  3930  006F82                     l2317:
  3931  006F82  4A1A               	infsnz	qualified@i,f,c
  3932  006F84  2A1B               	incf	qualified@i+1,f,c
  3933  006F86  D797               	goto	L8
  3934  006F88                     l119:
  3935  006F88  0012               	return	
  3936  006F8A                     __end_of_qualified:
  3937                           	opt stack 0
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           wreg	equ	0xFE8
  3943                           postinc1	equ	0xFE6
  3944                           postdec1	equ	0xFE5
  3945                           fsr1h	equ	0xFE2
  3946                           fsr1l	equ	0xFE1
  3947                           postinc2	equ	0xFDE
  3948                           postdec2	equ	0xFDD
  3949                           fsr2h	equ	0xFDA
  3950                           fsr2l	equ	0xFD9
  3951                           status	equ	0xFD8
  3952                           
  3953 ;; *************** function _out_mf *****************
  3954 ;; Defined at:
  3955 ;;		line 123 in file "fuzzy.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  result          2   15[COMRAM] PTR 
  3958 ;;		 -> fuzzy_system_single1@overall_out_mf(120), fuzzy_system_single2@overall_out_mf(120), fuzzy_system_single@overall_
      +out_mf(120), fuzzy_system@overall_out_mf(120), 
  3959 ;;  x               2   17[COMRAM] PTR 
  3960 ;;		 -> fuzzy_system_single1@qualified_cons_mf1(120), fuzzy_system_single2@qualified_cons_mf1(120), fuzzy_system_single@
      +qualified_cons_mf1(120), fuzzy_system@qualified_cons_mf1(120), 
  3961 ;;  y               2   19[COMRAM] PTR 
  3962 ;;		 -> fuzzy_system_single1@qualified_cons_mf2(120), fuzzy_system_single2@qualified_cons_mf2(120), fuzzy_system_single@
      +qualified_cons_mf2(120), fuzzy_system@qualified_cons_mf2(120), 
  3963 ;;  z               2   21[COMRAM] PTR 
  3964 ;;		 -> fuzzy_system_single1@qualified_cons_mf3(120), fuzzy_system_single2@qualified_cons_mf3(120), fuzzy_system_single@
      +qualified_cons_mf3(120), fuzzy_system@qualified_cons_mf3(120), 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  i               2   23[COMRAM] int 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;		None               void
  3969 ;; Registers used:
  3970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3976 ;;      Params:         8       0       0       0       0       0       0       0       0
  3977 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3979 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3980 ;;Total ram usage:       10 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		___ftge
  3985 ;;		___wmul
  3986 ;; This function is called by:
  3987 ;;		_fuzzy_system_single2
  3988 ;;		_fuzzy_system_single1
  3989 ;;		_fuzzy_system
  3990 ;;		_fuzzy_system_single
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text22
  3995  0076A2                     __ptext22:
  3996                           	opt stack 0
  3997  0076A2                     _out_mf:
  3998                           	opt stack 28
  3999                           
  4000                           ;fuzzy.c: 125: int i;
  4001                           ;fuzzy.c: 126: for(i=0; i<40;i++){
  4002                           
  4003                           ;incstack = 0
  4004  0076A2  0E00               	movlw	0
  4005  0076A4  6E19               	movwf	out_mf@i+1,c
  4006  0076A6  0E00               	movlw	0
  4007  0076A8  6E18               	movwf	out_mf@i,c
  4008  0076AA  5019               	movf	out_mf@i+1,w,c
  4009  0076AC  0A80               	xorlw	128
  4010  0076AE  0F80               	addlw	-128
  4011  0076B0  0E28               	movlw	40
  4012  0076B2  B4D8               	btfsc	status,2,c
  4013  0076B4  5C18               	subwf	out_mf@i,w,c
  4014  0076B6  B0D8               	btfsc	status,0,c
  4015  0076B8  D120               	goto	l128
  4016                           
  4017                           ;fuzzy.c: 127: if(x[i] > y[i] && x[i] > z[i])
  4018  0076BA  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4019  0076BE  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4020  0076C2  0E00               	movlw	0
  4021  0076C4  6E04               	movwf	___wmul@multiplicand+1,c
  4022  0076C6  0E03               	movlw	3
  4023  0076C8  6E03               	movwf	___wmul@multiplicand,c
  4024  0076CA  EC3D  F033         	call	___wmul	;wreg free
  4025  0076CE  5001               	movf	?___wmul,w,c
  4026  0076D0  2414               	addwf	out_mf@y,w,c
  4027  0076D2  6ED9               	movwf	fsr2l,c
  4028  0076D4  5002               	movf	?___wmul+1,w,c
  4029  0076D6  2015               	addwfc	out_mf@y+1,w,c
  4030  0076D8  6EDA               	movwf	fsr2h,c
  4031  0076DA  CFDE F007          	movff	postinc2,___ftge@ff1
  4032  0076DE  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4033  0076E2  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4034  0076E6  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4035  0076EA  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4036  0076EE  0E00               	movlw	0
  4037  0076F0  6E04               	movwf	___wmul@multiplicand+1,c
  4038  0076F2  0E03               	movlw	3
  4039  0076F4  6E03               	movwf	___wmul@multiplicand,c
  4040  0076F6  EC3D  F033         	call	___wmul	;wreg free
  4041  0076FA  5001               	movf	?___wmul,w,c
  4042  0076FC  2412               	addwf	out_mf@x,w,c
  4043  0076FE  6ED9               	movwf	fsr2l,c
  4044  007700  5002               	movf	?___wmul+1,w,c
  4045  007702  2013               	addwfc	out_mf@x+1,w,c
  4046  007704  6EDA               	movwf	fsr2h,c
  4047  007706  CFDE F00A          	movff	postinc2,___ftge@ff2
  4048  00770A  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4049  00770E  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4050  007712  EC5D  F034         	call	___ftge	;wreg free
  4051  007716  B0D8               	btfsc	status,0,c
  4052  007718  D04B               	goto	l2333
  4053  00771A  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4054  00771E  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4055  007722  0E00               	movlw	0
  4056  007724  6E04               	movwf	___wmul@multiplicand+1,c
  4057  007726  0E03               	movlw	3
  4058  007728  6E03               	movwf	___wmul@multiplicand,c
  4059  00772A  EC3D  F033         	call	___wmul	;wreg free
  4060  00772E  5001               	movf	?___wmul,w,c
  4061  007730  2416               	addwf	out_mf@z,w,c
  4062  007732  6ED9               	movwf	fsr2l,c
  4063  007734  5002               	movf	?___wmul+1,w,c
  4064  007736  2017               	addwfc	out_mf@z+1,w,c
  4065  007738  6EDA               	movwf	fsr2h,c
  4066  00773A  CFDE F007          	movff	postinc2,___ftge@ff1
  4067  00773E  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4068  007742  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4069  007746  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4070  00774A  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4071  00774E  0E00               	movlw	0
  4072  007750  6E04               	movwf	___wmul@multiplicand+1,c
  4073  007752  0E03               	movlw	3
  4074  007754  6E03               	movwf	___wmul@multiplicand,c
  4075  007756  EC3D  F033         	call	___wmul	;wreg free
  4076  00775A  5001               	movf	?___wmul,w,c
  4077  00775C  2412               	addwf	out_mf@x,w,c
  4078  00775E  6ED9               	movwf	fsr2l,c
  4079  007760  5002               	movf	?___wmul+1,w,c
  4080  007762  2013               	addwfc	out_mf@x+1,w,c
  4081  007764  6EDA               	movwf	fsr2h,c
  4082  007766  CFDE F00A          	movff	postinc2,___ftge@ff2
  4083  00776A  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4084  00776E  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4085  007772  EC5D  F034         	call	___ftge	;wreg free
  4086  007776  B0D8               	btfsc	status,0,c
  4087  007778  D01B               	goto	l2333
  4088                           
  4089                           ;fuzzy.c: 128: {
  4090                           ;fuzzy.c: 130: result[i]=x[i];
  4091  00777A  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4092  00777E  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4093  007782  0E00               	movlw	0
  4094  007784  6E04               	movwf	___wmul@multiplicand+1,c
  4095  007786  0E03               	movlw	3
  4096  007788  6E03               	movwf	___wmul@multiplicand,c
  4097  00778A  EC3D  F033         	call	___wmul	;wreg free
  4098  00778E  5001               	movf	?___wmul,w,c
  4099  007790  2412               	addwf	out_mf@x,w,c
  4100  007792  6ED9               	movwf	fsr2l,c
  4101  007794  5002               	movf	?___wmul+1,w,c
  4102  007796  2013               	addwfc	out_mf@x+1,w,c
  4103  007798  6EDA               	movwf	fsr2h,c
  4104  00779A  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4105  00779E  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4106  0077A2  0E00               	movlw	0
  4107  0077A4  6E04               	movwf	___wmul@multiplicand+1,c
  4108  0077A6  0E03               	movlw	3
  4109  0077A8  6E03               	movwf	___wmul@multiplicand,c
  4110  0077AA  EC3D  F033         	call	___wmul	;wreg free
  4111  0077AE  D095               	goto	L10
  4112  0077B0                     l2333:
  4113                           
  4114                           ;fuzzy.c: 132: else
  4115                           ;fuzzy.c: 133: {
  4116                           ;fuzzy.c: 134: if( y[i] > x[i] && y[i] > z[i]){
  4117  0077B0  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4118  0077B4  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4119  0077B8  0E00               	movlw	0
  4120  0077BA  6E04               	movwf	___wmul@multiplicand+1,c
  4121  0077BC  0E03               	movlw	3
  4122  0077BE  6E03               	movwf	___wmul@multiplicand,c
  4123  0077C0  EC3D  F033         	call	___wmul	;wreg free
  4124  0077C4  5001               	movf	?___wmul,w,c
  4125  0077C6  2412               	addwf	out_mf@x,w,c
  4126  0077C8  6ED9               	movwf	fsr2l,c
  4127  0077CA  5002               	movf	?___wmul+1,w,c
  4128  0077CC  2013               	addwfc	out_mf@x+1,w,c
  4129  0077CE  6EDA               	movwf	fsr2h,c
  4130  0077D0  CFDE F007          	movff	postinc2,___ftge@ff1
  4131  0077D4  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4132  0077D8  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4133  0077DC  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4134  0077E0  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4135  0077E4  0E00               	movlw	0
  4136  0077E6  6E04               	movwf	___wmul@multiplicand+1,c
  4137  0077E8  0E03               	movlw	3
  4138  0077EA  6E03               	movwf	___wmul@multiplicand,c
  4139  0077EC  EC3D  F033         	call	___wmul	;wreg free
  4140  0077F0  5001               	movf	?___wmul,w,c
  4141  0077F2  2414               	addwf	out_mf@y,w,c
  4142  0077F4  6ED9               	movwf	fsr2l,c
  4143  0077F6  5002               	movf	?___wmul+1,w,c
  4144  0077F8  2015               	addwfc	out_mf@y+1,w,c
  4145  0077FA  6EDA               	movwf	fsr2h,c
  4146  0077FC  CFDE F00A          	movff	postinc2,___ftge@ff2
  4147  007800  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4148  007804  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4149  007808  EC5D  F034         	call	___ftge	;wreg free
  4150  00780C  B0D8               	btfsc	status,0,c
  4151  00780E  D04B               	goto	l2339
  4152  007810  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4153  007814  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4154  007818  0E00               	movlw	0
  4155  00781A  6E04               	movwf	___wmul@multiplicand+1,c
  4156  00781C  0E03               	movlw	3
  4157  00781E  6E03               	movwf	___wmul@multiplicand,c
  4158  007820  EC3D  F033         	call	___wmul	;wreg free
  4159  007824  5001               	movf	?___wmul,w,c
  4160  007826  2416               	addwf	out_mf@z,w,c
  4161  007828  6ED9               	movwf	fsr2l,c
  4162  00782A  5002               	movf	?___wmul+1,w,c
  4163  00782C  2017               	addwfc	out_mf@z+1,w,c
  4164  00782E  6EDA               	movwf	fsr2h,c
  4165  007830  CFDE F007          	movff	postinc2,___ftge@ff1
  4166  007834  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4167  007838  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4168  00783C  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4169  007840  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4170  007844  0E00               	movlw	0
  4171  007846  6E04               	movwf	___wmul@multiplicand+1,c
  4172  007848  0E03               	movlw	3
  4173  00784A  6E03               	movwf	___wmul@multiplicand,c
  4174  00784C  EC3D  F033         	call	___wmul	;wreg free
  4175  007850  5001               	movf	?___wmul,w,c
  4176  007852  2414               	addwf	out_mf@y,w,c
  4177  007854  6ED9               	movwf	fsr2l,c
  4178  007856  5002               	movf	?___wmul+1,w,c
  4179  007858  2015               	addwfc	out_mf@y+1,w,c
  4180  00785A  6EDA               	movwf	fsr2h,c
  4181  00785C  CFDE F00A          	movff	postinc2,___ftge@ff2
  4182  007860  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4183  007864  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4184  007868  EC5D  F034         	call	___ftge	;wreg free
  4185  00786C  B0D8               	btfsc	status,0,c
  4186  00786E  D01B               	goto	l2339
  4187                           
  4188                           ;fuzzy.c: 136: result[i]=y[i];
  4189  007870  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4190  007874  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4191  007878  0E00               	movlw	0
  4192  00787A  6E04               	movwf	___wmul@multiplicand+1,c
  4193  00787C  0E03               	movlw	3
  4194  00787E  6E03               	movwf	___wmul@multiplicand,c
  4195  007880  EC3D  F033         	call	___wmul	;wreg free
  4196  007884  5001               	movf	?___wmul,w,c
  4197  007886  2414               	addwf	out_mf@y,w,c
  4198  007888  6ED9               	movwf	fsr2l,c
  4199  00788A  5002               	movf	?___wmul+1,w,c
  4200  00788C  2015               	addwfc	out_mf@y+1,w,c
  4201  00788E  6EDA               	movwf	fsr2h,c
  4202  007890  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4203  007894  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4204  007898  0E00               	movlw	0
  4205  00789A  6E04               	movwf	___wmul@multiplicand+1,c
  4206  00789C  0E03               	movlw	3
  4207  00789E  6E03               	movwf	___wmul@multiplicand,c
  4208  0078A0  EC3D  F033         	call	___wmul	;wreg free
  4209  0078A4  D01A               	goto	L10
  4210  0078A6                     l2339:
  4211                           
  4212                           ;fuzzy.c: 138: else
  4213                           ;fuzzy.c: 139: {
  4214                           ;fuzzy.c: 141: result[i]=z[i];
  4215  0078A6  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4216  0078AA  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4217  0078AE  0E00               	movlw	0
  4218  0078B0  6E04               	movwf	___wmul@multiplicand+1,c
  4219  0078B2  0E03               	movlw	3
  4220  0078B4  6E03               	movwf	___wmul@multiplicand,c
  4221  0078B6  EC3D  F033         	call	___wmul	;wreg free
  4222  0078BA  5001               	movf	?___wmul,w,c
  4223  0078BC  2416               	addwf	out_mf@z,w,c
  4224  0078BE  6ED9               	movwf	fsr2l,c
  4225  0078C0  5002               	movf	?___wmul+1,w,c
  4226  0078C2  2017               	addwfc	out_mf@z+1,w,c
  4227  0078C4  6EDA               	movwf	fsr2h,c
  4228  0078C6  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4229  0078CA  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4230  0078CE  0E00               	movlw	0
  4231  0078D0  6E04               	movwf	___wmul@multiplicand+1,c
  4232  0078D2  0E03               	movlw	3
  4233  0078D4  6E03               	movwf	___wmul@multiplicand,c
  4234  0078D6  EC3D  F033         	call	___wmul	;wreg free
  4235  0078DA                     L10:
  4236  0078DA  5001               	movf	?___wmul,w,c
  4237  0078DC  2410               	addwf	out_mf@result,w,c
  4238  0078DE  6EE1               	movwf	fsr1l,c
  4239  0078E0  5002               	movf	?___wmul+1,w,c
  4240  0078E2  2011               	addwfc	out_mf@result+1,w,c
  4241  0078E4  6EE2               	movwf	fsr1h,c
  4242  0078E6  CFDE FFE6          	movff	postinc2,postinc1
  4243  0078EA  CFDE FFE6          	movff	postinc2,postinc1
  4244  0078EE  CFDE FFE5          	movff	postinc2,postdec1
  4245  0078F2  52E5               	movf	postdec1,f,c
  4246  0078F4  4A18               	infsnz	out_mf@i,f,c
  4247  0078F6  2A19               	incf	out_mf@i+1,f,c
  4248  0078F8  D6D8               	goto	L11
  4249  0078FA                     l128:
  4250  0078FA  0012               	return	
  4251  0078FC                     __end_of_out_mf:
  4252                           	opt stack 0
  4253                           tblptru	equ	0xFF8
  4254                           tblptrh	equ	0xFF7
  4255                           tblptrl	equ	0xFF6
  4256                           tablat	equ	0xFF5
  4257                           wreg	equ	0xFE8
  4258                           postinc1	equ	0xFE6
  4259                           postdec1	equ	0xFE5
  4260                           fsr1h	equ	0xFE2
  4261                           fsr1l	equ	0xFE1
  4262                           postinc2	equ	0xFDE
  4263                           postdec2	equ	0xFDD
  4264                           fsr2h	equ	0xFDA
  4265                           fsr2l	equ	0xFD9
  4266                           status	equ	0xFD8
  4267                           
  4268 ;; *************** function ___ftge *****************
  4269 ;; Defined at:
  4270 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  ff1             3    6[COMRAM] float 
  4273 ;;  ff2             3    9[COMRAM] float 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;		None               void
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4285 ;;      Params:         6       0       0       0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4287 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4288 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4289 ;;Total ram usage:        9 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_triangular
  4295 ;;		_qualified
  4296 ;;		_out_mf
  4297 ;;		_minimo
  4298 ;;		_maximo
  4299 ;;		_trapezoidal
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text23
  4304  0068BA                     __ptext23:
  4305                           	opt stack 0
  4306  0068BA                     ___ftge:
  4307                           	opt stack 28
  4308                           
  4309                           ;incstack = 0
  4310  0068BA  AE09               	btfss	___ftge@ff1+2,7,c
  4311  0068BC  D016               	goto	l2007
  4312  0068BE  C007  F00D         	movff	___ftge@ff1,??___ftge
  4313  0068C2  C008  F00E         	movff	___ftge@ff1+1,??___ftge+1
  4314  0068C6  C009  F00F         	movff	___ftge@ff1+2,??___ftge+2
  4315  0068CA  1E0D               	comf	??___ftge,f,c
  4316  0068CC  1E0E               	comf	??___ftge+1,f,c
  4317  0068CE  1E0F               	comf	??___ftge+2,f,c
  4318  0068D0  2A0D               	incf	??___ftge,f,c
  4319  0068D2  0E00               	movlw	0
  4320  0068D4  220E               	addwfc	??___ftge+1,f,c
  4321  0068D6  220F               	addwfc	??___ftge+2,f,c
  4322  0068D8  0E00               	movlw	0
  4323  0068DA  240D               	addwf	??___ftge,w,c
  4324  0068DC  6E07               	movwf	___ftge@ff1,c
  4325  0068DE  0E00               	movlw	0
  4326  0068E0  200E               	addwfc	??___ftge+1,w,c
  4327  0068E2  6E08               	movwf	___ftge@ff1+1,c
  4328  0068E4  0E80               	movlw	128
  4329  0068E6  200F               	addwfc	??___ftge+2,w,c
  4330  0068E8  6E09               	movwf	___ftge@ff1+2,c
  4331  0068EA                     l2007:
  4332  0068EA  AE0C               	btfss	___ftge@ff2+2,7,c
  4333  0068EC  D016               	goto	l2011
  4334  0068EE  C00A  F00D         	movff	___ftge@ff2,??___ftge
  4335  0068F2  C00B  F00E         	movff	___ftge@ff2+1,??___ftge+1
  4336  0068F6  C00C  F00F         	movff	___ftge@ff2+2,??___ftge+2
  4337  0068FA  1E0D               	comf	??___ftge,f,c
  4338  0068FC  1E0E               	comf	??___ftge+1,f,c
  4339  0068FE  1E0F               	comf	??___ftge+2,f,c
  4340  006900  2A0D               	incf	??___ftge,f,c
  4341  006902  0E00               	movlw	0
  4342  006904  220E               	addwfc	??___ftge+1,f,c
  4343  006906  220F               	addwfc	??___ftge+2,f,c
  4344  006908  0E00               	movlw	0
  4345  00690A  240D               	addwf	??___ftge,w,c
  4346  00690C  6E0A               	movwf	___ftge@ff2,c
  4347  00690E  0E00               	movlw	0
  4348  006910  200E               	addwfc	??___ftge+1,w,c
  4349  006912  6E0B               	movwf	___ftge@ff2+1,c
  4350  006914  0E80               	movlw	128
  4351  006916  200F               	addwfc	??___ftge+2,w,c
  4352  006918  6E0C               	movwf	___ftge@ff2+2,c
  4353  00691A                     l2011:
  4354  00691A  0E00               	movlw	0
  4355  00691C  1A07               	xorwf	___ftge@ff1,f,c
  4356  00691E  0E00               	movlw	0
  4357  006920  1A08               	xorwf	___ftge@ff1+1,f,c
  4358  006922  0E80               	movlw	128
  4359  006924  1A09               	xorwf	___ftge@ff1+2,f,c
  4360  006926  0E00               	movlw	0
  4361  006928  1A0A               	xorwf	___ftge@ff2,f,c
  4362  00692A  0E00               	movlw	0
  4363  00692C  1A0B               	xorwf	___ftge@ff2+1,f,c
  4364  00692E  0E80               	movlw	128
  4365  006930  1A0C               	xorwf	___ftge@ff2+2,f,c
  4366  006932  500A               	movf	___ftge@ff2,w,c
  4367  006934  5C07               	subwf	___ftge@ff1,w,c
  4368  006936  500B               	movf	___ftge@ff2+1,w,c
  4369  006938  5808               	subwfb	___ftge@ff1+1,w,c
  4370  00693A  500C               	movf	___ftge@ff2+2,w,c
  4371  00693C  5809               	subwfb	___ftge@ff1+2,w,c
  4372  00693E  B0D8               	btfsc	status,0,c
  4373  006940  D002               	goto	l2017
  4374  006942  90D8               	bcf	status,0,c
  4375  006944  D001               	goto	l690
  4376  006946                     l2017:
  4377  006946  80D8               	bsf	status,0,c
  4378  006948                     l690:
  4379  006948  0012               	return	
  4380  00694A                     __end_of___ftge:
  4381                           	opt stack 0
  4382                           tblptru	equ	0xFF8
  4383                           tblptrh	equ	0xFF7
  4384                           tblptrl	equ	0xFF6
  4385                           tablat	equ	0xFF5
  4386                           wreg	equ	0xFE8
  4387                           postinc1	equ	0xFE6
  4388                           postdec1	equ	0xFE5
  4389                           fsr1h	equ	0xFE2
  4390                           fsr1l	equ	0xFE1
  4391                           postinc2	equ	0xFDE
  4392                           postdec2	equ	0xFDD
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _linspace *****************
  4398 ;; Defined at:
  4399 ;;		line 12 in file "fuzzy.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  x               2   54[COMRAM] PTR 
  4402 ;;		 -> fuzzy_system_single1@y(120), fuzzy_system_single1@x(120), fuzzy_system_single2@y(120), fuzzy_system_single2@x(12
      +0), 
  4403 ;;		 -> fuzzy_system_single@y(120), fuzzy_system_single@x(120), fuzzy_system@y(120), fuzzy_system@x(120), 
  4404 ;;  start           3   56[COMRAM] PTR 
  4405 ;;  end             3   59[COMRAM] PTR 
  4406 ;;  size            2   62[COMRAM] int 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  i               2   66[COMRAM] int 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;		None               void
  4411 ;; Registers used:
  4412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4418 ;;      Params:        10       0       0       0       0       0       0       0       0
  4419 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4420 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4421 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4422 ;;Total ram usage:       14 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:    2
  4425 ;; This function calls:
  4426 ;;		___awtoft
  4427 ;;		___ftadd
  4428 ;;		___ftdiv
  4429 ;;		___ftmul
  4430 ;;		___wmul
  4431 ;; This function is called by:
  4432 ;;		_fuzzy_system_single2
  4433 ;;		_fuzzy_system_single1
  4434 ;;		_fuzzy_system
  4435 ;;		_fuzzy_system_single
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text24
  4440  006F8A                     __ptext24:
  4441                           	opt stack 0
  4442  006F8A                     _linspace:
  4443                           	opt stack 27
  4444                           
  4445                           ;fuzzy.c: 14: int i;
  4446                           ;fuzzy.c: 15: for (i=0; i<size; i++)
  4447                           
  4448                           ;incstack = 0
  4449  006F8A  0E00               	movlw	0
  4450  006F8C  6E44               	movwf	linspace@i+1,c
  4451  006F8E  0E00               	movlw	0
  4452  006F90  6E43               	movwf	linspace@i,c
  4453  006F92  D071               	goto	l2249
  4454  006F94                     l2245:
  4455                           
  4456                           ;fuzzy.c: 16: x[i] = ( i*end + (size-1-i)*start ) / (size-1);
  4457  006F94  C043  F001         	movff	linspace@i,___wmul@multiplier
  4458  006F98  C044  F002         	movff	linspace@i+1,___wmul@multiplier+1
  4459  006F9C  0E00               	movlw	0
  4460  006F9E  6E04               	movwf	___wmul@multiplicand+1,c
  4461  006FA0  0E03               	movlw	3
  4462  006FA2  6E03               	movwf	___wmul@multiplicand,c
  4463  006FA4  EC3D  F033         	call	___wmul	;wreg free
  4464  006FA8  5001               	movf	?___wmul,w,c
  4465  006FAA  2437               	addwf	linspace@x,w,c
  4466  006FAC  6ED9               	movwf	fsr2l,c
  4467  006FAE  5002               	movf	?___wmul+1,w,c
  4468  006FB0  2038               	addwfc	linspace@x+1,w,c
  4469  006FB2  6EDA               	movwf	fsr2h,c
  4470  006FB4  C039  F010         	movff	linspace@start,___ftmul@f2
  4471  006FB8  C03A  F011         	movff	linspace@start+1,___ftmul@f2+1
  4472  006FBC  C03B  F012         	movff	linspace@start+2,___ftmul@f2+2
  4473  006FC0  0E01               	movlw	1
  4474  006FC2  2443               	addwf	linspace@i,w,c
  4475  006FC4  6E41               	movwf	??_linspace& (0+255),c
  4476  006FC6  0E00               	movlw	0
  4477  006FC8  2044               	addwfc	linspace@i+1,w,c
  4478  006FCA  6E42               	movwf	(??_linspace+1)& (0+255),c
  4479  006FCC  1E41               	comf	??_linspace,f,c
  4480  006FCE  1E42               	comf	??_linspace+1,f,c
  4481  006FD0  4A41               	infsnz	??_linspace,f,c
  4482  006FD2  2A42               	incf	??_linspace+1,f,c
  4483  006FD4  503F               	movf	linspace@size,w,c
  4484  006FD6  2441               	addwf	??_linspace,w,c
  4485  006FD8  6E09               	movwf	___awtoft@c,c
  4486  006FDA  5040               	movf	linspace@size+1,w,c
  4487  006FDC  2042               	addwfc	??_linspace+1,w,c
  4488  006FDE  6E0A               	movwf	___awtoft@c+1,c
  4489  006FE0  ECCF  F033         	call	___awtoft	;wreg free
  4490  006FE4  C009  F00D         	movff	?___awtoft,___ftmul@f1
  4491  006FE8  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  4492  006FEC  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  4493  006FF0  ECDF  F036         	call	___ftmul	;wreg free
  4494  006FF4  C00D  F01F         	movff	?___ftmul,___ftadd@f2
  4495  006FF8  C00E  F020         	movff	?___ftmul+1,___ftadd@f2+1
  4496  006FFC  C00F  F021         	movff	?___ftmul+2,___ftadd@f2+2
  4497  007000  C03C  F010         	movff	linspace@end,___ftmul@f2
  4498  007004  C03D  F011         	movff	linspace@end+1,___ftmul@f2+1
  4499  007008  C03E  F012         	movff	linspace@end+2,___ftmul@f2+2
  4500  00700C  C043  F009         	movff	linspace@i,___awtoft@c
  4501  007010  C044  F00A         	movff	linspace@i+1,___awtoft@c+1
  4502  007014  ECCF  F033         	call	___awtoft	;wreg free
  4503  007018  C009  F00D         	movff	?___awtoft,___ftmul@f1
  4504  00701C  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  4505  007020  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  4506  007024  ECDF  F036         	call	___ftmul	;wreg free
  4507  007028  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  4508  00702C  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  4509  007030  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  4510  007034  EC88  F039         	call	___ftadd	;wreg free
  4511  007038  C01C  F028         	movff	?___ftadd,___ftdiv@f1
  4512  00703C  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
  4513  007040  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
  4514  007044  0EFF               	movlw	255
  4515  007046  243F               	addwf	linspace@size,w,c
  4516  007048  6E09               	movwf	___awtoft@c,c
  4517  00704A  0EFF               	movlw	255
  4518  00704C  2040               	addwfc	linspace@size+1,w,c
  4519  00704E  6E0A               	movwf	___awtoft@c+1,c
  4520  007050  ECCF  F033         	call	___awtoft	;wreg free
  4521  007054  C009  F02B         	movff	?___awtoft,___ftdiv@f2
  4522  007058  C00A  F02C         	movff	?___awtoft+1,___ftdiv@f2+1
  4523  00705C  C00B  F02D         	movff	?___awtoft+2,___ftdiv@f2+2
  4524  007060  EC74  F036         	call	___ftdiv	;wreg free
  4525  007064  C028  FFDE         	movff	?___ftdiv,postinc2
  4526  007068  C029  FFDE         	movff	?___ftdiv+1,postinc2
  4527  00706C  C02A  FFDD         	movff	?___ftdiv+2,postdec2
  4528  007070  52DD               	movf	postdec2,f,c
  4529  007072  4A43               	infsnz	linspace@i,f,c
  4530  007074  2A44               	incf	linspace@i+1,f,c
  4531  007076                     l2249:
  4532  007076  5044               	movf	linspace@i+1,w,c
  4533  007078  0A80               	xorlw	128
  4534  00707A  6E41               	movwf	??_linspace& (0+255),c
  4535  00707C  503F               	movf	linspace@size,w,c
  4536  00707E  5C43               	subwf	linspace@i,w,c
  4537  007080  5040               	movf	linspace@size+1,w,c
  4538  007082  0A80               	xorlw	128
  4539  007084  5841               	subwfb	??_linspace& (0+255),w,c
  4540  007086  B0D8               	btfsc	status,0,c
  4541                           
  4542                           ;fuzzy.c: 17: return;
  4543  007088  0012               	return	
  4544  00708A  D784               	goto	l2245
  4545  00708C                     __end_of_linspace:
  4546                           	opt stack 0
  4547                           tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           wreg	equ	0xFE8
  4552                           postinc1	equ	0xFE6
  4553                           postdec1	equ	0xFE5
  4554                           fsr1h	equ	0xFE2
  4555                           fsr1l	equ	0xFE1
  4556                           postinc2	equ	0xFDE
  4557                           postdec2	equ	0xFDD
  4558                           fsr2h	equ	0xFDA
  4559                           fsr2l	equ	0xFD9
  4560                           status	equ	0xFD8
  4561                           
  4562 ;; *************** function ___awtoft *****************
  4563 ;; Defined at:
  4564 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awtoft.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  c               2    8[COMRAM] int 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  sign            1   11[COMRAM] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  3    8[COMRAM] float 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0, prodl, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4578 ;;      Params:         3       0       0       0       0       0       0       0       0
  4579 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4581 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4582 ;;Total ram usage:        4 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    1
  4585 ;; This function calls:
  4586 ;;		___ftpack
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;;		_linspace
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text25
  4594  00679E                     __ptext25:
  4595                           	opt stack 0
  4596  00679E                     ___awtoft:
  4597                           	opt stack 27
  4598                           
  4599                           ;incstack = 0
  4600  00679E  0E00               	movlw	0
  4601  0067A0  6E0C               	movwf	___awtoft@sign,c
  4602  0067A2  500A               	movf	___awtoft@c+1,w,c
  4603  0067A4  0A80               	xorlw	128
  4604  0067A6  6EF3               	movwf	prodl,c
  4605  0067A8  0E80               	movlw	128
  4606  0067AA  5CF3               	subwf	prodl,w,c
  4607  0067AC  0E00               	movlw	0
  4608  0067AE  B4D8               	btfsc	status,2,c
  4609  0067B0  5C09               	subwf	___awtoft@c,w,c
  4610  0067B2  B0D8               	btfsc	status,0,c
  4611  0067B4  D006               	goto	l2141
  4612  0067B6  6C09               	negf	___awtoft@c,c
  4613  0067B8  1E0A               	comf	___awtoft@c+1,f,c
  4614  0067BA  B0D8               	btfsc	status,0,c
  4615  0067BC  2A0A               	incf	___awtoft@c+1,f,c
  4616  0067BE  0E01               	movlw	1
  4617  0067C0  6E0C               	movwf	___awtoft@sign,c
  4618  0067C2                     l2141:
  4619  0067C2  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4620  0067C6  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4621  0067CA  6A03               	clrf	___ftpack@arg+2,c
  4622  0067CC  0E8E               	movlw	142
  4623  0067CE  6E04               	movwf	___ftpack@exp,c
  4624  0067D0  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4625  0067D4  ECF4  F034         	call	___ftpack	;wreg free
  4626  0067D8  C001  F009         	movff	?___ftpack,?___awtoft
  4627  0067DC  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4628  0067E0  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4629  0067E4  0012               	return	
  4630  0067E6                     __end_of___awtoft:
  4631                           	opt stack 0
  4632                           tblptru	equ	0xFF8
  4633                           tblptrh	equ	0xFF7
  4634                           tblptrl	equ	0xFF6
  4635                           tablat	equ	0xFF5
  4636                           prodl	equ	0xFF3
  4637                           wreg	equ	0xFE8
  4638                           postinc1	equ	0xFE6
  4639                           postdec1	equ	0xFE5
  4640                           fsr1h	equ	0xFE2
  4641                           fsr1l	equ	0xFE1
  4642                           postinc2	equ	0xFDE
  4643                           postdec2	equ	0xFDD
  4644                           fsr2h	equ	0xFDA
  4645                           fsr2l	equ	0xFD9
  4646                           status	equ	0xFD8
  4647                           
  4648 ;; *************** function _defuzzy *****************
  4649 ;; Defined at:
  4650 ;;		line 147 in file "fuzzy.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  x               2   54[COMRAM] PTR 
  4653 ;;		 -> fuzzy_system_single1@y(120), fuzzy_system_single2@y(120), fuzzy_system_single@y(120), fuzzy_system@y(120), 
  4654 ;;  mf              2   56[COMRAM] PTR 
  4655 ;;		 -> fuzzy_system_single1@overall_out_mf(120), fuzzy_system_single2@overall_out_mf(120), fuzzy_system_single@overall_
      +out_mf(120), fuzzy_system@overall_out_mf(120), 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  sum2            3   64[COMRAM] PTR 
  4658 ;;  sum1            3   61[COMRAM] PTR 
  4659 ;;  out             3   58[COMRAM] PTR 
  4660 ;;  i               2   67[COMRAM] int 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  3   54[COMRAM] int 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4670 ;;      Params:         4       0       0       0       0       0       0       0       0
  4671 ;;      Locals:        11       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4673 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:       15 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    2
  4677 ;; This function calls:
  4678 ;;		___ftadd
  4679 ;;		___ftdiv
  4680 ;;		___ftmul
  4681 ;;		___wmul
  4682 ;; This function is called by:
  4683 ;;		_fuzzy_system_single2
  4684 ;;		_fuzzy_system_single1
  4685 ;;		_fuzzy_system
  4686 ;;		_fuzzy_system_single
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text26
  4691  0071AE                     __ptext26:
  4692                           	opt stack 0
  4693  0071AE                     _defuzzy:
  4694                           	opt stack 27
  4695                           
  4696                           ;fuzzy.c: 149: double sum1=0, sum2=0,out=0;
  4697                           
  4698                           ;incstack = 0
  4699  0071AE  0E00               	movlw	0
  4700  0071B0  6E3E               	movwf	defuzzy@sum1,c
  4701  0071B2  0E00               	movlw	0
  4702  0071B4  6E3F               	movwf	defuzzy@sum1+1,c
  4703  0071B6  0E00               	movlw	0
  4704  0071B8  6E40               	movwf	defuzzy@sum1+2,c
  4705  0071BA  0E00               	movlw	0
  4706  0071BC  6E41               	movwf	defuzzy@sum2,c
  4707  0071BE  0E00               	movlw	0
  4708  0071C0  6E42               	movwf	defuzzy@sum2+1,c
  4709  0071C2  0E00               	movlw	0
  4710  0071C4  6E43               	movwf	defuzzy@sum2+2,c
  4711  0071C6  0E00               	movlw	0
  4712  0071C8  6E3B               	movwf	defuzzy@out,c
  4713  0071CA  0E00               	movlw	0
  4714  0071CC  6E3C               	movwf	defuzzy@out+1,c
  4715  0071CE  0E00               	movlw	0
  4716  0071D0  6E3D               	movwf	defuzzy@out+2,c
  4717                           
  4718                           ;fuzzy.c: 150: int i;
  4719                           ;fuzzy.c: 151: for(i=0;i<40; i++)
  4720  0071D2  0E00               	movlw	0
  4721  0071D4  6E45               	movwf	defuzzy@i+1,c
  4722  0071D6  0E00               	movlw	0
  4723  0071D8  6E44               	movwf	defuzzy@i,c
  4724  0071DA  5045               	movf	defuzzy@i+1,w,c
  4725  0071DC  0A80               	xorlw	128
  4726  0071DE  0F80               	addlw	-128
  4727  0071E0  0E28               	movlw	40
  4728  0071E2  B4D8               	btfsc	status,2,c
  4729  0071E4  5C44               	subwf	defuzzy@i,w,c
  4730  0071E6  B0D8               	btfsc	status,0,c
  4731  0071E8  D045               	goto	l2357
  4732                           
  4733                           ;fuzzy.c: 152: sum1+=x[i]*mf[i];
  4734  0071EA  C03E  F01C         	movff	defuzzy@sum1,___ftadd@f1
  4735  0071EE  C03F  F01D         	movff	defuzzy@sum1+1,___ftadd@f1+1
  4736  0071F2  C040  F01E         	movff	defuzzy@sum1+2,___ftadd@f1+2
  4737  0071F6  C044  F001         	movff	defuzzy@i,___wmul@multiplier
  4738  0071FA  C045  F002         	movff	defuzzy@i+1,___wmul@multiplier+1
  4739  0071FE  0E00               	movlw	0
  4740  007200  6E04               	movwf	___wmul@multiplicand+1,c
  4741  007202  0E03               	movlw	3
  4742  007204  6E03               	movwf	___wmul@multiplicand,c
  4743  007206  EC3D  F033         	call	___wmul	;wreg free
  4744  00720A  5001               	movf	?___wmul,w,c
  4745  00720C  2439               	addwf	defuzzy@mf,w,c
  4746  00720E  6ED9               	movwf	fsr2l,c
  4747  007210  5002               	movf	?___wmul+1,w,c
  4748  007212  203A               	addwfc	defuzzy@mf+1,w,c
  4749  007214  6EDA               	movwf	fsr2h,c
  4750  007216  CFDE F010          	movff	postinc2,___ftmul@f2
  4751  00721A  CFDE F011          	movff	postinc2,___ftmul@f2+1
  4752  00721E  CFDD F012          	movff	postdec2,___ftmul@f2+2
  4753  007222  C044  F001         	movff	defuzzy@i,___wmul@multiplier
  4754  007226  C045  F002         	movff	defuzzy@i+1,___wmul@multiplier+1
  4755  00722A  0E00               	movlw	0
  4756  00722C  6E04               	movwf	___wmul@multiplicand+1,c
  4757  00722E  0E03               	movlw	3
  4758  007230  6E03               	movwf	___wmul@multiplicand,c
  4759  007232  EC3D  F033         	call	___wmul	;wreg free
  4760  007236  5001               	movf	?___wmul,w,c
  4761  007238  2437               	addwf	defuzzy@x,w,c
  4762  00723A  6ED9               	movwf	fsr2l,c
  4763  00723C  5002               	movf	?___wmul+1,w,c
  4764  00723E  2038               	addwfc	defuzzy@x+1,w,c
  4765  007240  6EDA               	movwf	fsr2h,c
  4766  007242  CFDE F00D          	movff	postinc2,___ftmul@f1
  4767  007246  CFDE F00E          	movff	postinc2,___ftmul@f1+1
  4768  00724A  CFDD F00F          	movff	postdec2,___ftmul@f1+2
  4769  00724E  ECDF  F036         	call	___ftmul	;wreg free
  4770  007252  C00D  F01F         	movff	?___ftmul,___ftadd@f2
  4771  007256  C00E  F020         	movff	?___ftmul+1,___ftadd@f2+1
  4772  00725A  C00F  F021         	movff	?___ftmul+2,___ftadd@f2+2
  4773  00725E  EC88  F039         	call	___ftadd	;wreg free
  4774  007262  C01C  F03E         	movff	?___ftadd,defuzzy@sum1
  4775  007266  C01D  F03F         	movff	?___ftadd+1,defuzzy@sum1+1
  4776  00726A  C01E  F040         	movff	?___ftadd+2,defuzzy@sum1+2
  4777  00726E  4A44               	infsnz	defuzzy@i,f,c
  4778  007270  2A45               	incf	defuzzy@i+1,f,c
  4779  007272  D7B3               	goto	L12
  4780  007274                     l2357:
  4781                           
  4782                           ;fuzzy.c: 153: for(i=0;i<40; i++)
  4783  007274  0E00               	movlw	0
  4784  007276  6E45               	movwf	defuzzy@i+1,c
  4785  007278  0E00               	movlw	0
  4786  00727A  6E44               	movwf	defuzzy@i,c
  4787  00727C  5045               	movf	defuzzy@i+1,w,c
  4788  00727E  0A80               	xorlw	128
  4789  007280  0F80               	addlw	-128
  4790  007282  0E28               	movlw	40
  4791  007284  B4D8               	btfsc	status,2,c
  4792  007286  5C44               	subwf	defuzzy@i,w,c
  4793  007288  B0D8               	btfsc	status,0,c
  4794  00728A  D027               	goto	l2369
  4795                           
  4796                           ;fuzzy.c: 154: sum2+=mf[i];
  4797  00728C  C041  F01C         	movff	defuzzy@sum2,___ftadd@f1
  4798  007290  C042  F01D         	movff	defuzzy@sum2+1,___ftadd@f1+1
  4799  007294  C043  F01E         	movff	defuzzy@sum2+2,___ftadd@f1+2
  4800  007298  C044  F001         	movff	defuzzy@i,___wmul@multiplier
  4801  00729C  C045  F002         	movff	defuzzy@i+1,___wmul@multiplier+1
  4802  0072A0  0E00               	movlw	0
  4803  0072A2  6E04               	movwf	___wmul@multiplicand+1,c
  4804  0072A4  0E03               	movlw	3
  4805  0072A6  6E03               	movwf	___wmul@multiplicand,c
  4806  0072A8  EC3D  F033         	call	___wmul	;wreg free
  4807  0072AC  5001               	movf	?___wmul,w,c
  4808  0072AE  2439               	addwf	defuzzy@mf,w,c
  4809  0072B0  6ED9               	movwf	fsr2l,c
  4810  0072B2  5002               	movf	?___wmul+1,w,c
  4811  0072B4  203A               	addwfc	defuzzy@mf+1,w,c
  4812  0072B6  6EDA               	movwf	fsr2h,c
  4813  0072B8  CFDE F01F          	movff	postinc2,___ftadd@f2
  4814  0072BC  CFDE F020          	movff	postinc2,___ftadd@f2+1
  4815  0072C0  CFDD F021          	movff	postdec2,___ftadd@f2+2
  4816  0072C4  EC88  F039         	call	___ftadd	;wreg free
  4817  0072C8  C01C  F041         	movff	?___ftadd,defuzzy@sum2
  4818  0072CC  C01D  F042         	movff	?___ftadd+1,defuzzy@sum2+1
  4819  0072D0  C01E  F043         	movff	?___ftadd+2,defuzzy@sum2+2
  4820  0072D4  4A44               	infsnz	defuzzy@i,f,c
  4821  0072D6  2A45               	incf	defuzzy@i+1,f,c
  4822  0072D8  D7D1               	goto	L13
  4823  0072DA                     l2369:
  4824                           
  4825                           ;fuzzy.c: 155: out=sum1/sum2;
  4826  0072DA  C03E  F028         	movff	defuzzy@sum1,___ftdiv@f1
  4827  0072DE  C03F  F029         	movff	defuzzy@sum1+1,___ftdiv@f1+1
  4828  0072E2  C040  F02A         	movff	defuzzy@sum1+2,___ftdiv@f1+2
  4829  0072E6  C041  F02B         	movff	defuzzy@sum2,___ftdiv@f2
  4830  0072EA  C042  F02C         	movff	defuzzy@sum2+1,___ftdiv@f2+1
  4831  0072EE  C043  F02D         	movff	defuzzy@sum2+2,___ftdiv@f2+2
  4832  0072F2  EC74  F036         	call	___ftdiv	;wreg free
  4833  0072F6  C028  F03B         	movff	?___ftdiv,defuzzy@out
  4834  0072FA  C029  F03C         	movff	?___ftdiv+1,defuzzy@out+1
  4835  0072FE  C02A  F03D         	movff	?___ftdiv+2,defuzzy@out+2
  4836                           
  4837                           ;fuzzy.c: 156: return out;
  4838  007302  C03B  F037         	movff	defuzzy@out,?_defuzzy
  4839  007306  C03C  F038         	movff	defuzzy@out+1,?_defuzzy+1
  4840  00730A  C03D  F039         	movff	defuzzy@out+2,?_defuzzy+2
  4841  00730E  0012               	return	
  4842  007310                     __end_of_defuzzy:
  4843                           	opt stack 0
  4844                           tblptru	equ	0xFF8
  4845                           tblptrh	equ	0xFF7
  4846                           tblptrl	equ	0xFF6
  4847                           tablat	equ	0xFF5
  4848                           prodl	equ	0xFF3
  4849                           wreg	equ	0xFE8
  4850                           postinc1	equ	0xFE6
  4851                           postdec1	equ	0xFE5
  4852                           fsr1h	equ	0xFE2
  4853                           fsr1l	equ	0xFE1
  4854                           postinc2	equ	0xFDE
  4855                           postdec2	equ	0xFDD
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function ___wmul *****************
  4861 ;; Defined at:
  4862 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  multiplier      2    0[COMRAM] unsigned int 
  4865 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;  product         2    4[COMRAM] unsigned int 
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  2    0[COMRAM] unsigned int 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0, prodl, prodh
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4877 ;;      Params:         4       0       0       0       0       0       0       0       0
  4878 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4880 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4881 ;;Total ram usage:        6 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_linspace
  4887 ;;		_tri_mf
  4888 ;;		_qualified
  4889 ;;		_out_mf
  4890 ;;		_defuzzy
  4891 ;;		_minimo
  4892 ;;		_maximo
  4893 ;;		_trap_mf
  4894 ;;		_fuzzy_system
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text27
  4899  00667A                     __ptext27:
  4900                           	opt stack 0
  4901  00667A                     ___wmul:
  4902                           	opt stack 28
  4903                           
  4904                           ;incstack = 0
  4905  00667A  5001               	movf	___wmul@multiplier,w,c
  4906  00667C  0203               	mulwf	___wmul@multiplicand,c
  4907  00667E  CFF3 F005          	movff	prodl,___wmul@product
  4908  006682  CFF4 F006          	movff	prodh,___wmul@product+1
  4909  006686  5001               	movf	___wmul@multiplier,w,c
  4910  006688  0204               	mulwf	___wmul@multiplicand+1,c
  4911  00668A  50F3               	movf	prodl,w,c
  4912  00668C  2606               	addwf	___wmul@product+1,f,c
  4913  00668E  5002               	movf	___wmul@multiplier+1,w,c
  4914  006690  0203               	mulwf	___wmul@multiplicand,c
  4915  006692  50F3               	movf	prodl,w,c
  4916  006694  2606               	addwf	___wmul@product+1,f,c
  4917  006696  C005  F001         	movff	___wmul@product,?___wmul
  4918  00669A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4919  00669E  0012               	return	
  4920  0066A0                     __end_of___wmul:
  4921                           	opt stack 0
  4922                           tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           prodh	equ	0xFF4
  4927                           prodl	equ	0xFF3
  4928                           wreg	equ	0xFE8
  4929                           postinc1	equ	0xFE6
  4930                           postdec1	equ	0xFE5
  4931                           fsr1h	equ	0xFE2
  4932                           fsr1l	equ	0xFE1
  4933                           postinc2	equ	0xFDE
  4934                           postdec2	equ	0xFDD
  4935                           fsr2h	equ	0xFDA
  4936                           fsr2l	equ	0xFD9
  4937                           status	equ	0xFD8
  4938                           
  4939 ;; *************** function ___ftmul *****************
  4940 ;; Defined at:
  4941 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  f1              3   12[COMRAM] float 
  4944 ;;  f2              3   15[COMRAM] float 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4947 ;;  sign            1   26[COMRAM] unsigned char 
  4948 ;;  cntr            1   25[COMRAM] unsigned char 
  4949 ;;  exp             1   21[COMRAM] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  3   12[COMRAM] float 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4959 ;;      Params:         6       0       0       0       0       0       0       0       0
  4960 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4961 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4962 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4963 ;;Total ram usage:       15 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    1
  4966 ;; This function calls:
  4967 ;;		___ftpack
  4968 ;; This function is called by:
  4969 ;;		_linspace
  4970 ;;		_defuzzy
  4971 ;;		_PWM_DutyCycle1
  4972 ;;		_PWM_DutyCycle2
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text28
  4977  006DBE                     __ptext28:
  4978                           	opt stack 0
  4979  006DBE                     ___ftmul:
  4980                           	opt stack 27
  4981                           
  4982                           ;incstack = 0
  4983  006DBE  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  4984  006DC2  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4985  006DC4  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4986  006DC6  340E               	rlcf	___ftmul@f1+1,w,c
  4987  006DC8  3613               	rlcf	??___ftmul& (0+255),f,c
  4988  006DCA  E301               	bnc	u1981
  4989  006DCC  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4990  006DCE                     u1981:
  4991  006DCE  5013               	movf	??___ftmul,w,c
  4992  006DD0  6E16               	movwf	___ftmul@exp,c
  4993  006DD2  6616               	tstfsz	___ftmul@exp& (0+255),c
  4994  006DD4  D001               	goto	l2091
  4995  006DD6  D00C               	goto	u2010
  4996  006DD8                     l2091:
  4997  006DD8  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  4998  006DDC  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4999  006DDE  6A15               	clrf	(??___ftmul+2)& (0+255),c
  5000  006DE0  3411               	rlcf	___ftmul@f2+1,w,c
  5001  006DE2  3613               	rlcf	??___ftmul& (0+255),f,c
  5002  006DE4  E301               	bnc	u2001
  5003  006DE6  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  5004  006DE8                     u2001:
  5005  006DE8  5013               	movf	??___ftmul,w,c
  5006  006DEA  6E1B               	movwf	___ftmul@sign,c
  5007  006DEC  661B               	tstfsz	___ftmul@sign& (0+255),c
  5008  006DEE  D007               	goto	l2097
  5009  006DF0                     u2010:
  5010  006DF0  0E00               	movlw	0
  5011  006DF2  6E0D               	movwf	?___ftmul,c
  5012  006DF4  0E00               	movlw	0
  5013  006DF6  6E0E               	movwf	?___ftmul+1,c
  5014  006DF8  0E00               	movlw	0
  5015  006DFA  6E0F               	movwf	?___ftmul+2,c
  5016  006DFC  D051               	goto	l696
  5017  006DFE                     l2097:
  5018  006DFE  501B               	movf	___ftmul@sign,w,c
  5019  006E00  0F7B               	addlw	123
  5020  006E02  2616               	addwf	___ftmul@exp,f,c
  5021  006E04  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  5022  006E08  5012               	movf	___ftmul@f2+2,w,c
  5023  006E0A  1A1B               	xorwf	___ftmul@sign,f,c
  5024  006E0C  0E80               	movlw	128
  5025  006E0E  161B               	andwf	___ftmul@sign,f,c
  5026  006E10  8E0E               	bsf	___ftmul@f1+1,7,c
  5027  006E12  8E11               	bsf	___ftmul@f2+1,7,c
  5028  006E14  0EFF               	movlw	255
  5029  006E16  1610               	andwf	___ftmul@f2,f,c
  5030  006E18  0EFF               	movlw	255
  5031  006E1A  1611               	andwf	___ftmul@f2+1,f,c
  5032  006E1C  0E00               	movlw	0
  5033  006E1E  1612               	andwf	___ftmul@f2+2,f,c
  5034  006E20  0E00               	movlw	0
  5035  006E22  6E17               	movwf	___ftmul@f3_as_product,c
  5036  006E24  0E00               	movlw	0
  5037  006E26  6E18               	movwf	___ftmul@f3_as_product+1,c
  5038  006E28  0E00               	movlw	0
  5039  006E2A  6E19               	movwf	___ftmul@f3_as_product+2,c
  5040  006E2C  0E07               	movlw	7
  5041  006E2E  6E1A               	movwf	___ftmul@cntr,c
  5042  006E30                     l2111:
  5043  006E30  A00D               	btfss	___ftmul@f1,0,c
  5044  006E32  D006               	goto	l2115
  5045  006E34  5010               	movf	___ftmul@f2,w,c
  5046  006E36  2617               	addwf	___ftmul@f3_as_product,f,c
  5047  006E38  5011               	movf	___ftmul@f2+1,w,c
  5048  006E3A  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  5049  006E3C  5012               	movf	___ftmul@f2+2,w,c
  5050  006E3E  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  5051  006E40                     l2115:
  5052  006E40  90D8               	bcf	status,0,c
  5053  006E42  320F               	rrcf	___ftmul@f1+2,f,c
  5054  006E44  320E               	rrcf	___ftmul@f1+1,f,c
  5055  006E46  320D               	rrcf	___ftmul@f1,f,c
  5056  006E48  90D8               	bcf	status,0,c
  5057  006E4A  3610               	rlcf	___ftmul@f2,f,c
  5058  006E4C  3611               	rlcf	___ftmul@f2+1,f,c
  5059  006E4E  3612               	rlcf	___ftmul@f2+2,f,c
  5060  006E50  2E1A               	decfsz	___ftmul@cntr,f,c
  5061  006E52  D7EE               	goto	l2111
  5062  006E54  0E09               	movlw	9
  5063  006E56  6E1A               	movwf	___ftmul@cntr,c
  5064  006E58                     l2121:
  5065  006E58  A00D               	btfss	___ftmul@f1,0,c
  5066  006E5A  D006               	goto	l2125
  5067  006E5C  5010               	movf	___ftmul@f2,w,c
  5068  006E5E  2617               	addwf	___ftmul@f3_as_product,f,c
  5069  006E60  5011               	movf	___ftmul@f2+1,w,c
  5070  006E62  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  5071  006E64  5012               	movf	___ftmul@f2+2,w,c
  5072  006E66  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  5073  006E68                     l2125:
  5074  006E68  90D8               	bcf	status,0,c
  5075  006E6A  320F               	rrcf	___ftmul@f1+2,f,c
  5076  006E6C  320E               	rrcf	___ftmul@f1+1,f,c
  5077  006E6E  320D               	rrcf	___ftmul@f1,f,c
  5078  006E70  90D8               	bcf	status,0,c
  5079  006E72  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  5080  006E74  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  5081  006E76  3217               	rrcf	___ftmul@f3_as_product,f,c
  5082  006E78  2E1A               	decfsz	___ftmul@cntr,f,c
  5083  006E7A  D7EE               	goto	l2121
  5084  006E7C  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  5085  006E80  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5086  006E84  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5087  006E88  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  5088  006E8C  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  5089  006E90  ECF4  F034         	call	___ftpack	;wreg free
  5090  006E94  C001  F00D         	movff	?___ftpack,?___ftmul
  5091  006E98  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  5092  006E9C  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  5093  006EA0                     l696:
  5094  006EA0  0012               	return	
  5095  006EA2                     __end_of___ftmul:
  5096                           	opt stack 0
  5097                           tblptru	equ	0xFF8
  5098                           tblptrh	equ	0xFF7
  5099                           tblptrl	equ	0xFF6
  5100                           tablat	equ	0xFF5
  5101                           prodh	equ	0xFF4
  5102                           prodl	equ	0xFF3
  5103                           wreg	equ	0xFE8
  5104                           postinc1	equ	0xFE6
  5105                           postdec1	equ	0xFE5
  5106                           fsr1h	equ	0xFE2
  5107                           fsr1l	equ	0xFE1
  5108                           postinc2	equ	0xFDE
  5109                           postdec2	equ	0xFDD
  5110                           fsr2h	equ	0xFDA
  5111                           fsr2l	equ	0xFD9
  5112                           status	equ	0xFD8
  5113                           
  5114 ;; *************** function ___ftdiv *****************
  5115 ;; Defined at:
  5116 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftdiv.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  f1              3   39[COMRAM] float 
  5119 ;;  f2              3   42[COMRAM] float 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  f3              3   49[COMRAM] float 
  5122 ;;  sign            1   53[COMRAM] unsigned char 
  5123 ;;  exp             1   52[COMRAM] unsigned char 
  5124 ;;  cntr            1   48[COMRAM] unsigned char 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  3   39[COMRAM] float 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5134 ;;      Params:         6       0       0       0       0       0       0       0       0
  5135 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5136 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5137 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5138 ;;Total ram usage:       15 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    1
  5141 ;; This function calls:
  5142 ;;		___ftpack
  5143 ;; This function is called by:
  5144 ;;		_linspace
  5145 ;;		_triangular
  5146 ;;		_defuzzy
  5147 ;;		_trapezoidal
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text29
  5152  006CE8                     __ptext29:
  5153                           	opt stack 0
  5154  006CE8                     ___ftdiv:
  5155                           	opt stack 27
  5156                           
  5157                           ;incstack = 0
  5158  006CE8  C02A  F02E         	movff	___ftdiv@f1+2,??___ftdiv
  5159  006CEC  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  5160  006CEE  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  5161  006CF0  3429               	rlcf	___ftdiv@f1+1,w,c
  5162  006CF2  362E               	rlcf	??___ftdiv& (0+255),f,c
  5163  006CF4  E301               	bnc	u1791
  5164  006CF6  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  5165  006CF8                     u1791:
  5166  006CF8  502E               	movf	??___ftdiv,w,c
  5167  006CFA  6E35               	movwf	___ftdiv@exp,c
  5168  006CFC  6635               	tstfsz	___ftdiv@exp& (0+255),c
  5169  006CFE  D001               	goto	l1963
  5170  006D00  D00C               	goto	u1820
  5171  006D02                     l1963:
  5172  006D02  C02D  F02E         	movff	___ftdiv@f2+2,??___ftdiv
  5173  006D06  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  5174  006D08  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  5175  006D0A  342C               	rlcf	___ftdiv@f2+1,w,c
  5176  006D0C  362E               	rlcf	??___ftdiv& (0+255),f,c
  5177  006D0E  E301               	bnc	u1811
  5178  006D10  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  5179  006D12                     u1811:
  5180  006D12  502E               	movf	??___ftdiv,w,c
  5181  006D14  6E36               	movwf	___ftdiv@sign,c
  5182  006D16  6636               	tstfsz	___ftdiv@sign& (0+255),c
  5183  006D18  D007               	goto	l1969
  5184  006D1A                     u1820:
  5185  006D1A  0E00               	movlw	0
  5186  006D1C  6E28               	movwf	?___ftdiv,c
  5187  006D1E  0E00               	movlw	0
  5188  006D20  6E29               	movwf	?___ftdiv+1,c
  5189  006D22  0E00               	movlw	0
  5190  006D24  6E2A               	movwf	?___ftdiv+2,c
  5191  006D26  D04A               	goto	l681
  5192  006D28                     l1969:
  5193  006D28  0E00               	movlw	0
  5194  006D2A  6E32               	movwf	___ftdiv@f3,c
  5195  006D2C  0E00               	movlw	0
  5196  006D2E  6E33               	movwf	___ftdiv@f3+1,c
  5197  006D30  0E00               	movlw	0
  5198  006D32  6E34               	movwf	___ftdiv@f3+2,c
  5199  006D34  5036               	movf	___ftdiv@sign,w,c
  5200  006D36  0F89               	addlw	137
  5201  006D38  5E35               	subwf	___ftdiv@exp,f,c
  5202  006D3A  C02A  F036         	movff	___ftdiv@f1+2,___ftdiv@sign
  5203  006D3E  502D               	movf	___ftdiv@f2+2,w,c
  5204  006D40  1A36               	xorwf	___ftdiv@sign,f,c
  5205  006D42  0E80               	movlw	128
  5206  006D44  1636               	andwf	___ftdiv@sign,f,c
  5207  006D46  8E29               	bsf	___ftdiv@f1+1,7,c
  5208  006D48  0EFF               	movlw	255
  5209  006D4A  1628               	andwf	___ftdiv@f1,f,c
  5210  006D4C  0EFF               	movlw	255
  5211  006D4E  1629               	andwf	___ftdiv@f1+1,f,c
  5212  006D50  0E00               	movlw	0
  5213  006D52  162A               	andwf	___ftdiv@f1+2,f,c
  5214  006D54  8E2C               	bsf	___ftdiv@f2+1,7,c
  5215  006D56  0EFF               	movlw	255
  5216  006D58  162B               	andwf	___ftdiv@f2,f,c
  5217  006D5A  0EFF               	movlw	255
  5218  006D5C  162C               	andwf	___ftdiv@f2+1,f,c
  5219  006D5E  0E00               	movlw	0
  5220  006D60  162D               	andwf	___ftdiv@f2+2,f,c
  5221  006D62  0E18               	movlw	24
  5222  006D64  6E31               	movwf	___ftdiv@cntr,c
  5223  006D66                     l1989:
  5224  006D66  90D8               	bcf	status,0,c
  5225  006D68  3632               	rlcf	___ftdiv@f3,f,c
  5226  006D6A  3633               	rlcf	___ftdiv@f3+1,f,c
  5227  006D6C  3634               	rlcf	___ftdiv@f3+2,f,c
  5228  006D6E  502B               	movf	___ftdiv@f2,w,c
  5229  006D70  5C28               	subwf	___ftdiv@f1,w,c
  5230  006D72  502C               	movf	___ftdiv@f2+1,w,c
  5231  006D74  5829               	subwfb	___ftdiv@f1+1,w,c
  5232  006D76  502D               	movf	___ftdiv@f2+2,w,c
  5233  006D78  582A               	subwfb	___ftdiv@f1+2,w,c
  5234  006D7A  A0D8               	btfss	status,0,c
  5235  006D7C  D007               	goto	l684
  5236  006D7E  502B               	movf	___ftdiv@f2,w,c
  5237  006D80  5E28               	subwf	___ftdiv@f1,f,c
  5238  006D82  502C               	movf	___ftdiv@f2+1,w,c
  5239  006D84  5A29               	subwfb	___ftdiv@f1+1,f,c
  5240  006D86  502D               	movf	___ftdiv@f2+2,w,c
  5241  006D88  5A2A               	subwfb	___ftdiv@f1+2,f,c
  5242  006D8A  8032               	bsf	___ftdiv@f3,0,c
  5243  006D8C                     l684:
  5244  006D8C  90D8               	bcf	status,0,c
  5245  006D8E  3628               	rlcf	___ftdiv@f1,f,c
  5246  006D90  3629               	rlcf	___ftdiv@f1+1,f,c
  5247  006D92  362A               	rlcf	___ftdiv@f1+2,f,c
  5248  006D94  2E31               	decfsz	___ftdiv@cntr,f,c
  5249  006D96  D7E7               	goto	l1989
  5250  006D98  C032  F001         	movff	___ftdiv@f3,___ftpack@arg
  5251  006D9C  C033  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5252  006DA0  C034  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5253  006DA4  C035  F004         	movff	___ftdiv@exp,___ftpack@exp
  5254  006DA8  C036  F005         	movff	___ftdiv@sign,___ftpack@sign
  5255  006DAC  ECF4  F034         	call	___ftpack	;wreg free
  5256  006DB0  C001  F028         	movff	?___ftpack,?___ftdiv
  5257  006DB4  C002  F029         	movff	?___ftpack+1,?___ftdiv+1
  5258  006DB8  C003  F02A         	movff	?___ftpack+2,?___ftdiv+2
  5259  006DBC                     l681:
  5260  006DBC  0012               	return	
  5261  006DBE                     __end_of___ftdiv:
  5262                           	opt stack 0
  5263                           tblptru	equ	0xFF8
  5264                           tblptrh	equ	0xFF7
  5265                           tblptrl	equ	0xFF6
  5266                           tablat	equ	0xFF5
  5267                           prodh	equ	0xFF4
  5268                           prodl	equ	0xFF3
  5269                           wreg	equ	0xFE8
  5270                           postinc1	equ	0xFE6
  5271                           postdec1	equ	0xFE5
  5272                           fsr1h	equ	0xFE2
  5273                           fsr1l	equ	0xFE1
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function ___ftadd *****************
  5281 ;; Defined at:
  5282 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  f1              3   27[COMRAM] float 
  5285 ;;  f2              3   30[COMRAM] float 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  exp1            1   38[COMRAM] unsigned char 
  5288 ;;  exp2            1   37[COMRAM] unsigned char 
  5289 ;;  sign            1   36[COMRAM] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  3   27[COMRAM] float 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5299 ;;      Params:         6       0       0       0       0       0       0       0       0
  5300 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5301 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5302 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5303 ;;Total ram usage:       12 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    1
  5306 ;; This function calls:
  5307 ;;		___ftpack
  5308 ;; This function is called by:
  5309 ;;		_linspace
  5310 ;;		_triangular
  5311 ;;		_defuzzy
  5312 ;;		_trapezoidal
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text30
  5317  007310                     __ptext30:
  5318                           	opt stack 0
  5319  007310                     ___ftadd:
  5320                           	opt stack 27
  5321                           
  5322                           ;incstack = 0
  5323  007310  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  5324  007314  6A23               	clrf	(??___ftadd+1)& (0+255),c
  5325  007316  6A24               	clrf	(??___ftadd+2)& (0+255),c
  5326  007318  341D               	rlcf	___ftadd@f1+1,w,c
  5327  00731A  3622               	rlcf	??___ftadd& (0+255),f,c
  5328  00731C  E301               	bnc	u1581
  5329  00731E  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  5330  007320                     u1581:
  5331  007320  5022               	movf	??___ftadd,w,c
  5332  007322  6E27               	movwf	___ftadd@exp1,c
  5333  007324  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  5334  007328  6A23               	clrf	(??___ftadd+1)& (0+255),c
  5335  00732A  6A24               	clrf	(??___ftadd+2)& (0+255),c
  5336  00732C  3420               	rlcf	___ftadd@f2+1,w,c
  5337  00732E  3622               	rlcf	??___ftadd& (0+255),f,c
  5338  007330  E301               	bnc	u1591
  5339  007332  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  5340  007334                     u1591:
  5341  007334  5022               	movf	??___ftadd,w,c
  5342  007336  6E26               	movwf	___ftadd@exp2,c
  5343  007338  5027               	movf	___ftadd@exp1,w,c
  5344  00733A  B4D8               	btfsc	status,2,c
  5345  00733C  D00C               	goto	l649
  5346  00733E  5026               	movf	___ftadd@exp2,w,c
  5347  007340  5C27               	subwf	___ftadd@exp1,w,c
  5348  007342  B0D8               	btfsc	status,0,c
  5349  007344  D00F               	goto	l1895
  5350  007346  5027               	movf	___ftadd@exp1,w,c
  5351  007348  0800               	sublw	0
  5352  00734A  2426               	addwf	___ftadd@exp2,w,c
  5353  00734C  6E22               	movwf	??___ftadd& (0+255),c
  5354  00734E  0E19               	movlw	25
  5355  007350  5C22               	subwf	??___ftadd,w,c
  5356  007352  A0D8               	btfss	status,0,c
  5357  007354  D007               	goto	l1895
  5358  007356                     l649:
  5359  007356  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  5360  00735A  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  5361  00735E  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  5362  007362  D0AB               	goto	l650
  5363  007364                     l1895:
  5364  007364  5026               	movf	___ftadd@exp2,w,c
  5365  007366  B4D8               	btfsc	status,2,c
  5366  007368  D00C               	goto	l653
  5367  00736A  5027               	movf	___ftadd@exp1,w,c
  5368  00736C  5C26               	subwf	___ftadd@exp2,w,c
  5369  00736E  B0D8               	btfsc	status,0,c
  5370  007370  D00F               	goto	l1901
  5371  007372  5026               	movf	___ftadd@exp2,w,c
  5372  007374  0800               	sublw	0
  5373  007376  2427               	addwf	___ftadd@exp1,w,c
  5374  007378  6E22               	movwf	??___ftadd& (0+255),c
  5375  00737A  0E19               	movlw	25
  5376  00737C  5C22               	subwf	??___ftadd,w,c
  5377  00737E  A0D8               	btfss	status,0,c
  5378  007380  D007               	goto	l1901
  5379  007382                     l653:
  5380  007382  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  5381  007386  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  5382  00738A  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  5383  00738E  D095               	goto	l650
  5384  007390                     l1901:
  5385  007390  0E06               	movlw	6
  5386  007392  6E25               	movwf	___ftadd@sign,c
  5387  007394  BE1E               	btfsc	___ftadd@f1+2,7,c
  5388  007396  8E25               	bsf	___ftadd@sign,7,c
  5389  007398  BE21               	btfsc	___ftadd@f2+2,7,c
  5390  00739A  8C25               	bsf	___ftadd@sign,6,c
  5391  00739C  8E1D               	bsf	___ftadd@f1+1,7,c
  5392  00739E  0EFF               	movlw	255
  5393  0073A0  161C               	andwf	___ftadd@f1,f,c
  5394  0073A2  0EFF               	movlw	255
  5395  0073A4  161D               	andwf	___ftadd@f1+1,f,c
  5396  0073A6  0E00               	movlw	0
  5397  0073A8  161E               	andwf	___ftadd@f1+2,f,c
  5398  0073AA  8E20               	bsf	___ftadd@f2+1,7,c
  5399  0073AC  0EFF               	movlw	255
  5400  0073AE  161F               	andwf	___ftadd@f2,f,c
  5401  0073B0  0EFF               	movlw	255
  5402  0073B2  1620               	andwf	___ftadd@f2+1,f,c
  5403  0073B4  0E00               	movlw	0
  5404  0073B6  1621               	andwf	___ftadd@f2+2,f,c
  5405  0073B8  5026               	movf	___ftadd@exp2,w,c
  5406  0073BA  5C27               	subwf	___ftadd@exp1,w,c
  5407  0073BC  B0D8               	btfsc	status,0,c
  5408  0073BE  D01A               	goto	l1927
  5409  0073C0                     l1917:
  5410  0073C0  90D8               	bcf	status,0,c
  5411  0073C2  361F               	rlcf	___ftadd@f2,f,c
  5412  0073C4  3620               	rlcf	___ftadd@f2+1,f,c
  5413  0073C6  3621               	rlcf	___ftadd@f2+2,f,c
  5414  0073C8  0626               	decf	___ftadd@exp2,f,c
  5415  0073CA  5026               	movf	___ftadd@exp2,w,c
  5416  0073CC  1827               	xorwf	___ftadd@exp1,w,c
  5417  0073CE  B4D8               	btfsc	status,2,c
  5418  0073D0  D00D               	goto	l1925
  5419  0073D2  0625               	decf	___ftadd@sign,f,c
  5420  0073D4  C025  F022         	movff	___ftadd@sign,??___ftadd
  5421  0073D8  0E07               	movlw	7
  5422  0073DA  1622               	andwf	??___ftadd,f,c
  5423  0073DC  B4D8               	btfsc	status,2,c
  5424  0073DE  D006               	goto	l1925
  5425  0073E0  D7EF               	goto	l1917
  5426  0073E2                     l1923:
  5427  0073E2  90D8               	bcf	status,0,c
  5428  0073E4  321E               	rrcf	___ftadd@f1+2,f,c
  5429  0073E6  321D               	rrcf	___ftadd@f1+1,f,c
  5430  0073E8  321C               	rrcf	___ftadd@f1,f,c
  5431  0073EA  2A27               	incf	___ftadd@exp1,f,c
  5432  0073EC                     l1925:
  5433  0073EC  5026               	movf	___ftadd@exp2,w,c
  5434  0073EE  6227               	cpfseq	___ftadd@exp1,c
  5435  0073F0  D7F8               	goto	l1923
  5436  0073F2  D01D               	goto	l664
  5437  0073F4                     l1927:
  5438  0073F4  5027               	movf	___ftadd@exp1,w,c
  5439  0073F6  5C26               	subwf	___ftadd@exp2,w,c
  5440  0073F8  B0D8               	btfsc	status,0,c
  5441  0073FA  D019               	goto	l664
  5442  0073FC                     l1929:
  5443  0073FC  90D8               	bcf	status,0,c
  5444  0073FE  361C               	rlcf	___ftadd@f1,f,c
  5445  007400  361D               	rlcf	___ftadd@f1+1,f,c
  5446  007402  361E               	rlcf	___ftadd@f1+2,f,c
  5447  007404  0627               	decf	___ftadd@exp1,f,c
  5448  007406  5026               	movf	___ftadd@exp2,w,c
  5449  007408  1827               	xorwf	___ftadd@exp1,w,c
  5450  00740A  B4D8               	btfsc	status,2,c
  5451  00740C  D00D               	goto	l1937
  5452  00740E  0625               	decf	___ftadd@sign,f,c
  5453  007410  C025  F022         	movff	___ftadd@sign,??___ftadd
  5454  007414  0E07               	movlw	7
  5455  007416  1622               	andwf	??___ftadd,f,c
  5456  007418  B4D8               	btfsc	status,2,c
  5457  00741A  D006               	goto	l1937
  5458  00741C  D7EF               	goto	l1929
  5459  00741E                     l1935:
  5460  00741E  90D8               	bcf	status,0,c
  5461  007420  3221               	rrcf	___ftadd@f2+2,f,c
  5462  007422  3220               	rrcf	___ftadd@f2+1,f,c
  5463  007424  321F               	rrcf	___ftadd@f2,f,c
  5464  007426  2A26               	incf	___ftadd@exp2,f,c
  5465  007428                     l1937:
  5466  007428  5026               	movf	___ftadd@exp2,w,c
  5467  00742A  6227               	cpfseq	___ftadd@exp1,c
  5468  00742C  D7F8               	goto	l1935
  5469  00742E                     l664:
  5470  00742E  AE25               	btfss	___ftadd@sign,7,c
  5471  007430  D00C               	goto	l673
  5472  007432  0EFF               	movlw	255
  5473  007434  1A1C               	xorwf	___ftadd@f1,f,c
  5474  007436  0EFF               	movlw	255
  5475  007438  1A1D               	xorwf	___ftadd@f1+1,f,c
  5476  00743A  0EFF               	movlw	255
  5477  00743C  1A1E               	xorwf	___ftadd@f1+2,f,c
  5478  00743E  0E01               	movlw	1
  5479  007440  261C               	addwf	___ftadd@f1,f,c
  5480  007442  0E00               	movlw	0
  5481  007444  221D               	addwfc	___ftadd@f1+1,f,c
  5482  007446  0E00               	movlw	0
  5483  007448  221E               	addwfc	___ftadd@f1+2,f,c
  5484  00744A                     l673:
  5485  00744A  AC25               	btfss	___ftadd@sign,6,c
  5486  00744C  D00C               	goto	l1943
  5487  00744E  0EFF               	movlw	255
  5488  007450  1A1F               	xorwf	___ftadd@f2,f,c
  5489  007452  0EFF               	movlw	255
  5490  007454  1A20               	xorwf	___ftadd@f2+1,f,c
  5491  007456  0EFF               	movlw	255
  5492  007458  1A21               	xorwf	___ftadd@f2+2,f,c
  5493  00745A  0E01               	movlw	1
  5494  00745C  261F               	addwf	___ftadd@f2,f,c
  5495  00745E  0E00               	movlw	0
  5496  007460  2220               	addwfc	___ftadd@f2+1,f,c
  5497  007462  0E00               	movlw	0
  5498  007464  2221               	addwfc	___ftadd@f2+2,f,c
  5499  007466                     l1943:
  5500  007466  0E00               	movlw	0
  5501  007468  6E25               	movwf	___ftadd@sign,c
  5502  00746A  501C               	movf	___ftadd@f1,w,c
  5503  00746C  261F               	addwf	___ftadd@f2,f,c
  5504  00746E  501D               	movf	___ftadd@f1+1,w,c
  5505  007470  2220               	addwfc	___ftadd@f2+1,f,c
  5506  007472  501E               	movf	___ftadd@f1+2,w,c
  5507  007474  2221               	addwfc	___ftadd@f2+2,f,c
  5508  007476  AE21               	btfss	___ftadd@f2+2,7,c
  5509  007478  D00E               	goto	l1953
  5510  00747A  0EFF               	movlw	255
  5511  00747C  1A1F               	xorwf	___ftadd@f2,f,c
  5512  00747E  0EFF               	movlw	255
  5513  007480  1A20               	xorwf	___ftadd@f2+1,f,c
  5514  007482  0EFF               	movlw	255
  5515  007484  1A21               	xorwf	___ftadd@f2+2,f,c
  5516  007486  0E01               	movlw	1
  5517  007488  261F               	addwf	___ftadd@f2,f,c
  5518  00748A  0E00               	movlw	0
  5519  00748C  2220               	addwfc	___ftadd@f2+1,f,c
  5520  00748E  0E00               	movlw	0
  5521  007490  2221               	addwfc	___ftadd@f2+2,f,c
  5522  007492  0E01               	movlw	1
  5523  007494  6E25               	movwf	___ftadd@sign,c
  5524  007496                     l1953:
  5525  007496  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  5526  00749A  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5527  00749E  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5528  0074A2  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  5529  0074A6  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  5530  0074AA  ECF4  F034         	call	___ftpack	;wreg free
  5531  0074AE  C001  F01C         	movff	?___ftpack,?___ftadd
  5532  0074B2  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  5533  0074B6  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  5534  0074BA                     l650:
  5535  0074BA  0012               	return	
  5536  0074BC                     __end_of___ftadd:
  5537                           	opt stack 0
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           prodh	equ	0xFF4
  5543                           prodl	equ	0xFF3
  5544                           wreg	equ	0xFE8
  5545                           postinc1	equ	0xFE6
  5546                           postdec1	equ	0xFE5
  5547                           fsr1h	equ	0xFE2
  5548                           fsr1l	equ	0xFE1
  5549                           postinc2	equ	0xFDE
  5550                           postdec2	equ	0xFDD
  5551                           fsr2h	equ	0xFDA
  5552                           fsr2l	equ	0xFD9
  5553                           status	equ	0xFD8
  5554                           
  5555 ;; *************** function ___ftpack *****************
  5556 ;; Defined at:
  5557 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  arg             3    0[COMRAM] unsigned um
  5560 ;;  exp             1    3[COMRAM] unsigned char 
  5561 ;;  sign            1    4[COMRAM] unsigned char 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  3    0[COMRAM] float 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5573 ;;      Params:         5       0       0       0       0       0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5575 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5576 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5577 ;;Total ram usage:        8 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		___awtoft
  5583 ;;		___ftadd
  5584 ;;		___ftdiv
  5585 ;;		___ftmul
  5586 ;;		___lbtoft
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text31
  5591  0069E8                     __ptext31:
  5592                           	opt stack 0
  5593  0069E8                     ___ftpack:
  5594                           	opt stack 27
  5595                           
  5596                           ;incstack = 0
  5597  0069E8  5004               	movf	___ftpack@exp,w,c
  5598  0069EA  B4D8               	btfsc	status,2,c
  5599  0069EC  D005               	goto	l1857
  5600  0069EE  5001               	movf	___ftpack@arg,w,c
  5601  0069F0  1002               	iorwf	___ftpack@arg+1,w,c
  5602  0069F2  1003               	iorwf	___ftpack@arg+2,w,c
  5603  0069F4  A4D8               	btfss	status,2,c
  5604  0069F6  D00C               	goto	l1863
  5605  0069F8                     l1857:
  5606  0069F8  0E00               	movlw	0
  5607  0069FA  6E01               	movwf	?___ftpack,c
  5608  0069FC  0E00               	movlw	0
  5609  0069FE  6E02               	movwf	?___ftpack+1,c
  5610  006A00  0E00               	movlw	0
  5611  006A02  6E03               	movwf	?___ftpack+2,c
  5612  006A04  D044               	goto	l612
  5613  006A06                     l1861:
  5614  006A06  2A04               	incf	___ftpack@exp,f,c
  5615  006A08  90D8               	bcf	status,0,c
  5616  006A0A  3203               	rrcf	___ftpack@arg+2,f,c
  5617  006A0C  3202               	rrcf	___ftpack@arg+1,f,c
  5618  006A0E  3201               	rrcf	___ftpack@arg,f,c
  5619  006A10                     l1863:
  5620  006A10  0E00               	movlw	0
  5621  006A12  1401               	andwf	___ftpack@arg,w,c
  5622  006A14  6E06               	movwf	??___ftpack& (0+255),c
  5623  006A16  0E00               	movlw	0
  5624  006A18  1402               	andwf	___ftpack@arg+1,w,c
  5625  006A1A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5626  006A1C  0EFE               	movlw	254
  5627  006A1E  1403               	andwf	___ftpack@arg+2,w,c
  5628  006A20  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5629  006A22  5006               	movf	??___ftpack,w,c
  5630  006A24  1007               	iorwf	??___ftpack+1,w,c
  5631  006A26  1008               	iorwf	??___ftpack+2,w,c
  5632  006A28  B4D8               	btfsc	status,2,c
  5633  006A2A  D00C               	goto	l1869
  5634  006A2C  D7EC               	goto	l1861
  5635  006A2E                     l1865:
  5636  006A2E  2A04               	incf	___ftpack@exp,f,c
  5637  006A30  0E01               	movlw	1
  5638  006A32  2601               	addwf	___ftpack@arg,f,c
  5639  006A34  0E00               	movlw	0
  5640  006A36  2202               	addwfc	___ftpack@arg+1,f,c
  5641  006A38  0E00               	movlw	0
  5642  006A3A  2203               	addwfc	___ftpack@arg+2,f,c
  5643  006A3C  90D8               	bcf	status,0,c
  5644  006A3E  3203               	rrcf	___ftpack@arg+2,f,c
  5645  006A40  3202               	rrcf	___ftpack@arg+1,f,c
  5646  006A42  3201               	rrcf	___ftpack@arg,f,c
  5647  006A44                     l1869:
  5648  006A44  0E00               	movlw	0
  5649  006A46  1401               	andwf	___ftpack@arg,w,c
  5650  006A48  6E06               	movwf	??___ftpack& (0+255),c
  5651  006A4A  0E00               	movlw	0
  5652  006A4C  1402               	andwf	___ftpack@arg+1,w,c
  5653  006A4E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5654  006A50  0EFF               	movlw	255
  5655  006A52  1403               	andwf	___ftpack@arg+2,w,c
  5656  006A54  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5657  006A56  5006               	movf	??___ftpack,w,c
  5658  006A58  1007               	iorwf	??___ftpack+1,w,c
  5659  006A5A  1008               	iorwf	??___ftpack+2,w,c
  5660  006A5C  B4D8               	btfsc	status,2,c
  5661  006A5E  D006               	goto	l1873
  5662  006A60  D7E6               	goto	l1865
  5663  006A62                     l1871:
  5664  006A62  0604               	decf	___ftpack@exp,f,c
  5665  006A64  90D8               	bcf	status,0,c
  5666  006A66  3601               	rlcf	___ftpack@arg,f,c
  5667  006A68  3602               	rlcf	___ftpack@arg+1,f,c
  5668  006A6A  3603               	rlcf	___ftpack@arg+2,f,c
  5669  006A6C                     l1873:
  5670  006A6C  AE02               	btfss	___ftpack@arg+1,7,c
  5671  006A6E  D7F9               	goto	l1871
  5672  006A70  A004               	btfss	___ftpack@exp,0,c
  5673  006A72  9E02               	bcf	___ftpack@arg+1,7,c
  5674  006A74  90D8               	bcf	status,0,c
  5675  006A76  3204               	rrcf	___ftpack@exp,f,c
  5676  006A78  5004               	movf	___ftpack@exp,w,c
  5677  006A7A  1203               	iorwf	___ftpack@arg+2,f,c
  5678  006A7C  5005               	movf	___ftpack@sign,w,c
  5679  006A7E  A4D8               	btfss	status,2,c
  5680  006A80  8E03               	bsf	___ftpack@arg+2,7,c
  5681  006A82  C001  F001         	movff	___ftpack@arg,?___ftpack
  5682  006A86  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5683  006A8A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5684  006A8E                     l612:
  5685  006A8E  0012               	return	
  5686  006A90                     __end_of___ftpack:
  5687                           	opt stack 0
  5688  0000                     tblptru	equ	0xFF8
  5689                           tblptrh	equ	0xFF7
  5690                           tblptrl	equ	0xFF6
  5691                           tablat	equ	0xFF5
  5692                           prodh	equ	0xFF4
  5693                           prodl	equ	0xFF3
  5694                           wreg	equ	0xFE8
  5695                           postinc1	equ	0xFE6
  5696                           postdec1	equ	0xFE5
  5697                           fsr1h	equ	0xFE2
  5698                           fsr1l	equ	0xFE1
  5699                           postinc2	equ	0xFDE
  5700                           postdec2	equ	0xFDD
  5701                           fsr2h	equ	0xFDA
  5702                           fsr2l	equ	0xFD9
  5703                           status	equ	0xFD8
  5704                           tblptru	equ	0xFF8
  5705                           tblptrh	equ	0xFF7
  5706                           tblptrl	equ	0xFF6
  5707                           tablat	equ	0xFF5
  5708                           prodh	equ	0xFF4
  5709                           prodl	equ	0xFF3
  5710                           wreg	equ	0xFE8
  5711                           postinc1	equ	0xFE6
  5712                           postdec1	equ	0xFE5
  5713                           fsr1h	equ	0xFE2
  5714                           fsr1l	equ	0xFE1
  5715                           postinc2	equ	0xFDE
  5716                           postdec2	equ	0xFDD
  5717                           fsr2h	equ	0xFDA
  5718                           fsr2l	equ	0xFD9
  5719                           status	equ	0xFD8
  5720                           
  5721                           	psect	rparam
  5722  0000                     tblptru	equ	0xFF8
  5723                           tblptrh	equ	0xFF7
  5724                           tblptrl	equ	0xFF6
  5725                           tablat	equ	0xFF5
  5726                           prodh	equ	0xFF4
  5727                           prodl	equ	0xFF3
  5728                           wreg	equ	0xFE8
  5729                           postinc1	equ	0xFE6
  5730                           postdec1	equ	0xFE5
  5731                           fsr1h	equ	0xFE2
  5732                           fsr1l	equ	0xFE1
  5733                           postinc2	equ	0xFDE
  5734                           postdec2	equ	0xFDD
  5735                           fsr2h	equ	0xFDA
  5736                           fsr2l	equ	0xFD9
  5737                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    138     144
    BANK1           256    240     240
    BANK2           256    240     240
    BANK3           256    240     240
    BANK4           256    240     240
    BANK5           256    240     240
    BANK6           256    240     240
    BANK7           256      0       0

Pointer List with Targets:

    defuzzy@mf	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@overall_out_mf(BANK5[120]), fuzzy_system_single2@overall_out_mf(BANK5[120]), fuzzy_system_single@overall_out_mf(BANK0[120]), fuzzy_system@overall_out_mf(BANK0[120]), 

    defuzzy@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@y(BANK6[120]), fuzzy_system_single2@y(BANK6[120]), fuzzy_system_single@y(BANK0[120]), fuzzy_system@y(BANK0[120]), 

    out_mf@result	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@overall_out_mf(BANK5[120]), fuzzy_system_single2@overall_out_mf(BANK5[120]), fuzzy_system_single@overall_out_mf(BANK0[120]), fuzzy_system@overall_out_mf(BANK0[120]), 

    out_mf@z	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf3(BANK4[120]), fuzzy_system_single2@qualified_cons_mf3(BANK4[120]), fuzzy_system_single@qualified_cons_mf3(BANK0[120]), fuzzy_system@qualified_cons_mf3(BANK0[120]), 

    out_mf@y	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf2(BANK4[120]), fuzzy_system_single2@qualified_cons_mf2(BANK4[120]), fuzzy_system_single@qualified_cons_mf2(BANK0[120]), fuzzy_system@qualified_cons_mf2(BANK0[120]), 

    out_mf@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf1(BANK3[120]), fuzzy_system_single2@qualified_cons_mf1(BANK3[120]), fuzzy_system_single@qualified_cons_mf1(BANK0[120]), fuzzy_system@qualified_cons_mf1(BANK0[120]), 

    qualified@y	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf3(BANK4[120]), fuzzy_system_single1@qualified_cons_mf2(BANK4[120]), fuzzy_system_single1@qualified_cons_mf1(BANK3[120]), fuzzy_system_single2@qualified_cons_mf3(BANK4[120]), 
		 -> fuzzy_system_single2@qualified_cons_mf2(BANK4[120]), fuzzy_system_single2@qualified_cons_mf1(BANK3[120]), fuzzy_system_single@qualified_cons_mf3(BANK0[120]), fuzzy_system_single@qualified_cons_mf2(BANK0[120]), 
		 -> fuzzy_system_single@qualified_cons_mf1(BANK0[120]), fuzzy_system@qualified_cons_mf3(BANK0[120]), fuzzy_system@qualified_cons_mf2(BANK0[120]), fuzzy_system@qualified_cons_mf1(BANK0[120]), 

    qualified@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@cons_mf3(BANK5[120]), fuzzy_system_single1@cons_mf1(BANK3[120]), fuzzy_system_single2@cons_mf3(BANK5[120]), fuzzy_system_single2@cons_mf1(BANK3[120]), 
		 -> fuzzy_system_single@cons_mf3(BANK0[120]), fuzzy_system_single@cons_mf2(BANK0[120]), fuzzy_system_single@cons_mf1(BANK0[120]), fuzzy_system@cons_mf3(BANK0[120]), 
		 -> fuzzy_system@cons_mf2(BANK0[120]), fuzzy_system@cons_mf1(BANK0[120]), 

    tri_mf@t_value	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@cons_mf3(BANK5[120]), fuzzy_system_single1@cons_mf2(BANK2[120]), fuzzy_system_single1@cons_mf1(BANK3[120]), fuzzy_system_single1@ante_mf3(BANK2[120]), 
		 -> fuzzy_system_single1@ante_mf2(BANK1[120]), fuzzy_system_single1@ante_mf1(BANK1[120]), fuzzy_system_single2@cons_mf3(BANK5[120]), fuzzy_system_single2@cons_mf2(BANK2[120]), 
		 -> fuzzy_system_single2@cons_mf1(BANK3[120]), fuzzy_system_single2@ante_mf3(BANK2[120]), fuzzy_system_single2@ante_mf2(BANK1[120]), fuzzy_system_single2@ante_mf1(BANK1[120]), 

    tri_mf@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@y(BANK6[120]), fuzzy_system_single1@x(BANK6[120]), fuzzy_system_single2@y(BANK6[120]), fuzzy_system_single2@x(BANK6[120]), 

    linspace@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@y(BANK6[120]), fuzzy_system_single1@x(BANK6[120]), fuzzy_system_single2@y(BANK6[120]), fuzzy_system_single2@x(BANK6[120]), 
		 -> fuzzy_system_single@y(BANK0[120]), fuzzy_system_single@x(BANK0[120]), fuzzy_system@y(BANK0[120]), fuzzy_system@x(BANK0[120]), 


Critical Paths under _main in COMRAM

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2
    _mcu_init->_PWM_DutyCycle1
    _mcu_init->_PWM_DutyCycle2
    _PWM_init2->_OpenPWM2
    _PWM_init1->_OpenPWM1
    _go_back->_PWM_DutyCycle1
    _go_back->_PWM_DutyCycle2
    _PWM_DutyCycle2->___fttol
    _PWM_DutyCycle1->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    _fuzzy_system_single2->_tri_mf
    _fuzzy_system_single1->_tri_mf
    _tri_mf->_triangular
    _triangular->___ftdiv
    _qualified->___ftge
    _out_mf->___ftge
    ___ftge->___wmul
    _linspace->___ftdiv
    ___awtoft->___ftpack
    _defuzzy->___ftdiv
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2
    _fuzzy_system_single2->_tri_mf
    _fuzzy_system_single1->_tri_mf

Critical Paths under _main in BANK1

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK2

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK3

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK4

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK5

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK6

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  183308
                                            125 BANK0     13    13      0
                     _PWM_DutyCycle1
                           ___awtoft
                            ___fttol
               _fuzzy_system_single1
               _fuzzy_system_single2
                      _getCNY70Value
                            _go_back
                           _mcu_init
                      _motor_forward
 ---------------------------------------------------------------------------------
 (1) _motor_forward                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             3     3      0   10113
                                             51 COMRAM     3     3      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                          _PWM_init1
                          _PWM_init2
 ---------------------------------------------------------------------------------
 (2) _PWM_init2                                            1     1      0      68
                                              3 COMRAM     1     1      0
                           _OpenPWM2
 ---------------------------------------------------------------------------------
 (3) _OpenPWM2                                             4     4      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _PWM_init1                                            1     1      0      44
                                              1 COMRAM     1     1      0
                           _OpenPWM1
 ---------------------------------------------------------------------------------
 (3) _OpenPWM1                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _go_back                                              2     1      1   10097
                                             51 COMRAM     2     1      1
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                  _motor_Backforward
 ---------------------------------------------------------------------------------
 (2) _motor_Backforward                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle2                                       9     9      0    5000
                                             42 COMRAM     9     9      0
                          _SetDCPWM2
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM2                                            6     4      2     121
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle1                                       9     9      0    5000
                                             42 COMRAM     9     9      0
                          _SetDCPWM1
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             4     1      3    1746
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     464
                                             27 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM1                                            6     4      2     121
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getCNY70Value                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fuzzy_system_single2                              1457  1454      3   77758
                                             82 COMRAM    12     9      3
                                            122 BANK0      3     3      0
                                              0 BANK1    240   240      0
                                              0 BANK2    240   240      0
                                              0 BANK3    240   240      0
                                              0 BANK4    240   240      0
                                              0 BANK5    240   240      0
                                              0 BANK6    240   240      0
                            _defuzzy
                           _linspace
                             _out_mf
                          _qualified
                             _tri_mf
                         _triangular
 ---------------------------------------------------------------------------------
 (1) _fuzzy_system_single1                              1457  1454      3   77758
                                             82 COMRAM    12     9      3
                                            122 BANK0      3     3      0
                                              0 BANK1    240   240      0
                                              0 BANK2    240   240      0
                                              0 BANK3    240   240      0
                                              0 BANK4    240   240      0
                                              0 BANK5    240   240      0
                                              0 BANK6    240   240      0
                            _defuzzy
                      _getCNY70Value (ARG)
                           _linspace
                             _out_mf
                          _qualified
                             _tri_mf
                         _triangular
 ---------------------------------------------------------------------------------
 (2) _tri_mf                                             135   122     13   18615
                                             69 COMRAM    13     0     13
                                              0 BANK0    122   122      0
                             ___wmul
                         _triangular
 ---------------------------------------------------------------------------------
 (2) _triangular                                          15     3     12   10912
                                             54 COMRAM    15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     469
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _qualified                                           12     5      7    8342
                                             15 COMRAM    12     5      7
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _out_mf                                              10     2      8    7655
                                             15 COMRAM    10     2      8
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1958
                                              6 COMRAM     9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _linspace                                            14     4     10   17288
                                             54 COMRAM    14     4     10
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2027
                                              8 COMRAM     4     1      3
                           ___ftpack
                      _getCNY70Value (ARG)
 ---------------------------------------------------------------------------------
 (2) _defuzzy                                             15    11      4   14107
                                             54 COMRAM    15    11      4
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4187
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2622
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2720
                                             39 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3814
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_DutyCycle1
     _SetDCPWM1
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _getCNY70Value (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   ___awtoft
     ___ftpack
     _getCNY70Value (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
         _getCNY70Value (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___lbtoft (ARG)
       ___ftpack
   _fuzzy_system_single1
     _defuzzy
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _getCNY70Value (ARG)
     _linspace (ARG)
       ___awtoft
         ___ftpack
         _getCNY70Value (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _out_mf (ARG)
       ___ftge
         ___wmul (ARG)
       ___wmul
     _qualified (ARG)
       ___ftge
         ___wmul (ARG)
       ___wmul
     _tri_mf (ARG)
       ___wmul
       _triangular
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _getCNY70Value (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
           ___wmul (ARG)
         ___ftneg
         ___wmul (ARG)
     _triangular (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
         ___wmul (ARG)
       ___ftneg
       ___wmul (ARG)
   _fuzzy_system_single2
     _defuzzy
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _linspace
       ___awtoft
         ___ftpack
         _getCNY70Value (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _out_mf
       ___ftge
         ___wmul (ARG)
       ___wmul
     _qualified
       ___ftge
         ___wmul (ARG)
       ___wmul
     _tri_mf
       ___wmul
       _triangular
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _getCNY70Value (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
           ___wmul (ARG)
         ___ftneg
         ___wmul (ARG)
     _triangular
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
         ___wmul (ARG)
       ___ftneg
       ___wmul (ARG)
   _getCNY70Value
   _go_back
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _motor_Backforward
   _mcu_init
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_init1
       _OpenPWM1
     _PWM_init2
       _OpenPWM2
   _motor_forward

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100     F0      F0      17       93.8%
BITBANK5           100      0       0      14        0.0%
BANK5              100     F0      F0      15       93.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100     F0      F0      13       93.8%
BITBANK3           100      0       0      10        0.0%
BANK3              100     F0      F0      11       93.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100     F0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     F0      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8A      90       5       90.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     68F      20        0.0%
DATA                 0      0     68F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Oct 25 18:41:24 2017

                       ??_motor_forward 0001                                       _i 00EC  
               __size_of_PWM_DutyCycle1 006A                 __size_of_PWM_DutyCycle2 006A  
                                    l97 71AC                     ___wmul@multiplicand 0003  
                           __CFG_BORV$3 000000                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 0027  
                          ___ftadd@exp2 0026                            ___ftadd@sign 0025  
                                   l211 6AB0                                     l221 6B10  
                                   l213 6AC8                                     l119 6F88  
                                   l223 6B26                                     l215 6AD8  
                                   l128 78FA                                     l208 6AA0  
                                   l217 6AE8                                     l209 6B46  
                                   l219 6B00                                     l612 6A8E  
                                   l293 6788                                     l294 6792  
                                   l295 6794                                     l650 74BA  
                                   l706 66B8                                     l716 6CE6  
                                   l653 7382                                     l664 742E  
                                   l673 744A                                     l649 7356  
                                   l681 6DBC                                     l690 6948  
                                   l684 6D8C                                     l696 6EA0  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                          __CFG_CPD$OFF 000000                            __CFG_BOR$OFF 000000  
                                   wreg 000FE8                            __CFG_LVP$OFF 000000  
                          ___ftdiv@cntr 0031                            ___ftdiv@sign 0036  
                          qualified@min 0017                            __CFG_WDT$OFF 000000  
                                  l2011 691A                                    l2111 6E30  
                                  l2007 68EA                                    l2031 74F4  
                                  l2121 6E58                                    l2017 6946  
                                  l2041 75D4                                    l2115 6E40  
                                  l2125 6E68                                    l2141 67C2  
                                  l2037 75B4                                    l2047 7694  
                                  l2151 6C2E                                    l2071 6784  
                                  l2091 6DD8                                    l2315 6F56  
                                  l2245 6F94                                    l2333 77B0  
                                  l2317 6F82                                    l2181 6CBC  
                                  l2173 6C98                                    l2263 7104  
                                  l2183 6CC0                                    l2097 6DFE  
                                  l2249 7076                                    l2169 6C88  
                                  l2339 78A6                                    l2187 6CD6  
                                  l2179 6CB0                                    l1901 7390  
                                  l2357 7274                                    l2369 72DA  
                                  l1923 73E2                                    l2539 6B3E  
                                  l1861 6A06                                    l1925 73EC  
                                  l1917 73C0                                    l1871 6A62  
                                  l1863 6A10                                    l1943 7466  
                                  l1935 741E                                    l1927 73F4  
                                  l1873 6A6C                                    l1865 6A2E  
                                  l1857 69F8                                    l1953 7496  
                                  l1937 7428                                    l1929 73FC  
                                  l2649 6B4E                                    l1963 6D02  
                                  l2667 6BBE                                    l1869 6A44  
                                  l1895 7364                                    l1969 6D28  
                                  l1989 6D66                                    u2001 6DE8  
                                  u2010 6DF0                                    u2100 6C9E  
                                  u2051 6C24                                    u2070 6C4C  
                                  u3017 6980                                    u2075 6C44  
                                  u1811 6D12                                    u1820 6D1A  
                                  u1581 7320                                    u1591 7334  
                                  u1915 75C4                                    u2830 6B36  
                                  u1791 6CF8                                    u2680 6AF8  
                                  u1945 66FA                                    u2780 6B20  
                                  u1981 6DCE                                    u1975 6734  
                                  _TMR2 000FCC                                    _main 6B48  
                          ___ftpack@arg 0001                            ___ftpack@exp 0004  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0000                           __CFG_IESO$OFF 000000  
                         __CFG_MCLRE$ON 000000                            ___ftmul@cntr 001A  
                          ___ftmul@sign 001B                            ___fttol@exp1 002A  
                          ___fttol@lval 0026                           __CFG_PLLDIV$1 000000  
                        __CFG_CCP2MX$ON 000000                                   ?_main 0001  
                       __end_of___ftadd 74BC                         __end_of___ftdiv 6DBE  
                       __end_of___ftneg 66C6                         __end_of___ftmul 6EA2  
                       __end_of___fttol 6CE8                                   _T2CON 000FCA  
                        __CFG_DEBUG$OFF 000000                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                                 _PORTD 000F83                                   _PORTE 000F84  
                         __CFG_USBDIV$2 000000                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                         __CFG_PWRT$OFF 000000                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
               PWM_DutyCycle1@DutyCycle 002F                           __CFG_WRT3$OFF 000000  
                       __end_of_defuzzy 7310                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                       __end_of_go_back 661A                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                        __CFG_EBTRB$OFF 000000                           ___awtoft@sign 000C  
                ??_fuzzy_system_single1 0056                  ??_fuzzy_system_single2 0056  
                          out_mf@result 0010                           ___ftpack@sign 0005  
                                 main@a 00E7                                   main@b 00E1  
                                 tablat 000FF5                 PWM_DutyCycle2@DutyCycle 002F  
                                 status 000FD8                          __CFG_ICPRT$OFF 000000  
                    __size_of_PWM_init1 001E                      __size_of_PWM_init2 001E  
                       __initialization 66C6                            __end_of_main 6C14  
                      __end_of_OpenPWM1 6606                        __end_of_OpenPWM2 679E  
                                ??_main 00DD                           ___fttol@sign1 0025  
                         __activetblptr 000003                           linspace@start 0039  
                                _CCPR1L 000FBE                                  _CCPR2L 000FBB  
                      __end_of___awtoft 67E6                        __end_of___ftpack 6A90  
                      __end_of___lbtoft 667A  fuzzy_system_single2@qualified_cons_mf1 0378  
fuzzy_system_single2@qualified_cons_mf2 0478  fuzzy_system_single2@qualified_cons_mf3 0400  
    fuzzy_system_single2@overall_out_mf 0578                      __size_of_SetDCPWM1 003A  
                    __size_of_SetDCPWM2 003A                          __CFG_XINST$OFF 000000  
                                ___ftge 68BA                                  ___wmul 667A  
                             ??___ftadd 0022                          _PWM_DutyCycle1 67E6  
                        _PWM_DutyCycle2 6850                          __CFG_STVREN$ON 000000  
                             ??___ftdiv 002E                               ??___ftneg 0004  
                             ??___ftmul 0013                               ??___fttol 0020  
                      __end_of_mcu_init 69E8                               ??_defuzzy 003B  
                      __end_of_linspace 708C                                  _out_mf 76A2  
                                _tri_mf 708C                               ??_go_back 0035  
                 ___ftmul@f3_as_product 0017              fuzzy_system_single1@output 00DA  
            fuzzy_system_single2@output 00DA                            triangular@ux 0043  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                       __end_of_PWM_init1 6638  
                     __end_of_PWM_init2 6656                       _motor_Backforward 65E0  
                            __accesstop 0060                 __end_of__initialization 66EA  
                       __CFG_PBADEN$OFF 000000                              ___ftadd@f1 001C  
                            ___ftadd@f2 001F                      ?_motor_Backforward 0001  
                            ___ftge@ff1 0007                              ___ftge@ff2 000A  
          PWM_DutyCycle2@percentageDuty 0031                              ___ftdiv@f1 0028  
                            ___ftdiv@f2 002B                              ___ftdiv@f3 0032  
                            ___ftneg@f1 0001                              ___awtoft@c 0009  
                            ___lbtoft@c 000C                  __end_of_PWM_DutyCycle1 6850  
                __end_of_PWM_DutyCycle2 68BA                              ___ftmul@f1 000D  
                            ___ftmul@f2 0010                              ___fttol@f1 001C  
                        __pcstackCOMRAM 0001                     ??_motor_Backforward 0001  
                          __pidataBANK0 65DE                       __end_of_SetDCPWM1 672A  
                     __end_of_SetDCPWM2 6764                             linspace@end 003C  
             __end_of_motor_Backforward 65EA                           tri_mf@t_value 0046  
                            __pbssBANK0 00EA               fuzzy_system_single1@input 0053  
             fuzzy_system_single2@input 0053                               ?_OpenPWM1 0001  
                             ?_OpenPWM2 0001                         ?_PWM_DutyCycle1 0001  
                       ?_PWM_DutyCycle2 0001                                 ?___ftge 0007  
                               ?___wmul 0001                  __size_of_getCNY70Value 00B8  
                               _CCP1CON 000FBD                                 _CCP2CON 000FBA  
                 __end_of_motor_forward 65F4                               ?___awtoft 0009  
                             ?___ftpack 0001                               ?___lbtoft 0009  
                               ?_out_mf 0010                                 ?_tri_mf 0046  
                    __size_of_qualified 00E8                         __CFG_VREGEN$OFF 000000  
                             ?_mcu_init 0001                              ??_OpenPWM1 0001  
                            ??_OpenPWM2 0001                               ?_linspace 0037  
                               __Hparam 0000                                 __Lparam 0000  
                       __size_of___ftge 0090                                 ___ftadd 7310  
                               ___ftdiv 6CE8                                 ___ftneg 66A0  
                       __size_of___wmul 0026                                 ___ftmul 6DBE  
                               ___fttol 6C14                                 __pcinit 66C6  
                            ??___awtoft 000C                              ??___ftpack 0006  
                            ??___lbtoft 000C                                 __ramtop 0800  
                               _defuzzy 71AE                                 __ptext0 6B48  
                               __ptext1 65EA                                 __ptext2 694A  
                               __ptext3 6638                                 __ptext4 6764  
                               __ptext5 661A                                 __ptext6 65F4  
                               __ptext7 6606                                 __ptext8 65E0  
                               __ptext9 6850                                 _go_back 6606  
                       __size_of_out_mf 025A                         __size_of_tri_mf 0122  
                               _countup 00EE                               _T2CONbits 000FCA  
            __size_of_motor_Backforward 000A                           _getCNY70Value 6A90  
                  end_of_initialization 66EA            fuzzy_system_single1@ante_mf1 0100  
          fuzzy_system_single1@ante_mf2 0178            fuzzy_system_single1@ante_mf3 0278  
         __size_of_fuzzy_system_single1 0382           __size_of_fuzzy_system_single2 0382  
          fuzzy_system_single1@cons_mf1 0300            fuzzy_system_single1@cons_mf2 0200  
          fuzzy_system_single1@cons_mf3 0500                              ??_mcu_init 0034  
          fuzzy_system_single2@ante_mf1 0100            fuzzy_system_single2@ante_mf2 0178  
          fuzzy_system_single2@ante_mf3 0278                              ??_linspace 0041  
          fuzzy_system_single2@cons_mf1 0300            fuzzy_system_single2@cons_mf2 0200  
          fuzzy_system_single2@cons_mf3 0500                       __end_of_qualified 6F8A  
                               postdec1 000FE5                                 postdec2 000FDD  
                               out_mf@i 0018                                 out_mf@x 0012  
                               out_mf@y 0014                                 out_mf@z 0016  
                               postinc1 000FE6                                 postinc2 000FDE  
                               tri_mf@a 004A                                 tri_mf@b 004D  
                               tri_mf@c 0050                                 tri_mf@i 00D8  
                               tri_mf@x 0048                              defuzzy@out 003B  
                             _PORTAbits 000F80                               _PORTBbits 000F81  
                             _PORTDbits 000F83                               _TRISBbits 000F93  
                             _TRISCbits 000F94                          ?_getCNY70Value 0001  
                            _triangular 74BC                               _PWM_init1 661A  
                             _PWM_init2 6638  fuzzy_system_single1@qualified_cons_mf1 0378  
fuzzy_system_single1@qualified_cons_mf2 0478  fuzzy_system_single1@qualified_cons_mf3 0400  
                           ___ftdiv@exp 0035                             ___ftmul@exp 0016  
                        __end_of___ftge 694A                          __end_of___wmul 66A0  
                        __end_of_out_mf 78FC                          __end_of_tri_mf 71AE  
                   start_initialization 66C6                               _SetDCPWM1 66F0  
                             _SetDCPWM2 672A                         SetDCPWM1@DCycle 0005  
                       SetDCPWM2@DCycle 0005                               _DutyCycle 00EA  
                            ?_PWM_init1 0001                              ?_PWM_init2 0001  
                      ??_PWM_DutyCycle1 002B                        ??_PWM_DutyCycle2 002B  
                          linspace@size 003F                  fuzzy_system_single1@w1 0056  
                fuzzy_system_single1@w2 0059                  fuzzy_system_single1@w3 005C  
                fuzzy_system_single2@w1 0056                  fuzzy_system_single2@w2 0059  
                fuzzy_system_single2@w3 005C                       __size_of_OpenPWM1 0012  
                     __size_of_OpenPWM2 003A                                ??___ftge 000D  
                              ??___wmul 0005                             __pdataBANK0 00EE  
                      __CFG_LPT1OSC$OFF 000000                             triangular@a 0037  
                           triangular@b 003A                             triangular@c 003D  
                           triangular@x 0040                                ??_out_mf 0018  
                              ??_tri_mf 0053                       __size_of___awtoft 0048  
                     __size_of___ftpack 00A8                       __size_of___lbtoft 0024  
                           __pbssCOMRAM 005F                         ??_getCNY70Value 0003  
                         __pcstackBANK0 0060                           __pcstackBANK1 0100  
                         __pcstackBANK2 0200                           __pcstackBANK3 0300  
                         __pcstackBANK4 0400                           __pcstackBANK5 0500  
                         __pcstackBANK6 0600                              ?_SetDCPWM1 0001  
                            ?_SetDCPWM2 0001      fuzzy_system_single1@overall_out_mf 0578  
                           ?_triangular 0037                       __size_of_mcu_init 009E  
                             _main$1474 00E4                       __size_of_linspace 0102  
                              ?___ftadd 001C                                ?___ftdiv 0028  
                              ?___ftneg 0001                                ?___ftmul 000D  
                              ?___fttol 001C                                ?_defuzzy 0037  
                              ?_go_back 0034                             ??_PWM_init1 0002  
                           ??_PWM_init2 0004            PWM_DutyCycle1@percentageDuty 0031  
                __size_of_motor_forward 000A                          ___wmul@product 0005  
                              _PIE1bits 000F9D                                _PIR1bits 000F9E  
                      __CFG_WDTPS$32768 000000                               defuzzy@mf 0039  
          __end_of_fuzzy_system_single1 7C7E            __end_of_fuzzy_system_single2 8000  
                             _qualified 6EA2                     __size_of_triangular 01E6  
                     ___wmul@multiplier 0001                              qualified@i 001A  
                            qualified@w 0014                              qualified@x 0012  
                            qualified@y 0010                             ??_SetDCPWM1 0003  
                           ??_SetDCPWM2 0003                      SetDCPWM1@dutycycle 0001  
                            tri_mf@temp 0060                            _Timer2Config 005F  
                              _OpenPWM1 65F4                                _OpenPWM2 6764  
                 fuzzy_system_single1@x 0600                   fuzzy_system_single1@y 0678  
                 fuzzy_system_single2@x 0600                   fuzzy_system_single2@y 0678  
                              __Hrparam 0000                                __Lrparam 0000  
                    SetDCPWM2@dutycycle 0001                               mcu_init@i 0035  
                            ?_qualified 0010                        __size_of___ftadd 01AC  
                      PWM_DutyCycle1@DC 0032                        PWM_DutyCycle2@DC 0032  
                      __size_of___ftdiv 00D6                        __size_of___ftneg 0026  
                      __size_of___ftmul 00E4                        __size_of___fttol 00D4  
                         _motor_forward 65EA                                ___awtoft 679E  
                              ___ftpack 69E8                                ___lbtoft 6656  
                        OpenPWM2@ccp2mx 0003                   __CFG_FOSC$INTOSCIO_EC 000000  
                             linspace@i 0043                        __size_of_defuzzy 0162  
                             linspace@x 0037                        __size_of_go_back 0014  
                        OpenPWM1@period 0001                          OpenPWM2@period 0002  
                              __ptext10 672A                                __ptext11 67E6  
                              __ptext20 66A0                                __ptext12 6656  
                              __ptext21 6EA2                                __ptext13 6C14  
                              __ptext30 7310                                __ptext22 76A2  
                              __ptext14 66F0                                __ptext31 69E8  
                              __ptext23 68BA                                __ptext15 6A90  
                              __ptext24 6F8A                                __ptext16 7C7E  
                              __ptext25 679E                                __ptext17 78FC  
                              __ptext26 71AE                                __ptext18 708C  
                              __ptext27 667A                                __ptext19 74BC  
                              __ptext28 6DBE                                __ptext29 6CE8  
                       PWM_init1@period 0002                         PWM_init2@period 0004  
                              _mcu_init 694A                           __size_of_main 00CC  
                              _linspace 6F8A                                defuzzy@i 0044  
                              defuzzy@x 0037                          ?_motor_forward 0001  
                 __CFG_CPUDIV$OSC1_PLL2 000000                            ??_triangular 0043  
                  _fuzzy_system_single1 78FC                    _fuzzy_system_single2 7C7E  
                            _OSCCONbits 000FD3                             ??_qualified 0017  
                           defuzzy@sum1 003E                             defuzzy@sum2 0041  
                    __end_of_triangular 76A2                          go_back@m_right 0035  
                 __end_of_getCNY70Value 6B48                   ?_fuzzy_system_single1 0053  
                 ?_fuzzy_system_single2 0053                           go_back@m_left 0034  
