

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Oct 25 18:21:38 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1
    11                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    12                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataBANK0
    54  0065E0                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _countup
    58  0065E0  0001               	dw	1
    59  0000                     _CCP1CON	set	4029
    60  0000                     _CCP2CON	set	4026
    61  0000                     _CCPR1L	set	4030
    62  0000                     _CCPR2L	set	4027
    63  0000                     _OSCCONbits	set	4051
    64  0000                     _PIE1bits	set	3997
    65  0000                     _PIR1bits	set	3998
    66  0000                     _PORTA	set	3968
    67  0000                     _PORTB	set	3969
    68  0000                     _PORTBbits	set	3969
    69  0000                     _PORTC	set	3970
    70  0000                     _PORTD	set	3971
    71  0000                     _PORTDbits	set	3971
    72  0000                     _PORTE	set	3972
    73  0000                     _PR2	set	4043
    74  0000                     _T2CON	set	4042
    75  0000                     _T2CONbits	set	4042
    76  0000                     _TMR2	set	4044
    77  0000                     _TRISA	set	3986
    78  0000                     _TRISB	set	3987
    79  0000                     _TRISBbits	set	3987
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISCbits	set	3988
    82  0000                     _TRISD	set	3989
    83  0000                     _TRISE	set	3990
    84                           
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  0066C8                     __pcinit:
    89                           	opt stack 0
    90  0066C8                     start_initialization:
    91                           	opt stack 0
    92  0066C8                     __initialization:
    93                           	opt stack 0
    94                           
    95                           ; Clear objects allocated to BANK0 (4 bytes)
    96  0066C8  0100               	movlb	0
    97  0066CA  6BED               	clrf	(__pbssBANK0+3)& (0+255),b
    98  0066CC  6BEC               	clrf	(__pbssBANK0+2)& (0+255),b
    99  0066CE  6BEB               	clrf	(__pbssBANK0+1)& (0+255),b
   100  0066D0  6BEA               	clrf	__pbssBANK0& (0+255),b
   101                           
   102                           ; Clear objects allocated to COMRAM (1 bytes)
   103  0066D2  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   104                           
   105                           ; Initialize objects allocated to BANK0 (2 bytes)
   106                           ; load TBLPTR registers with __pidataBANK0
   107  0066D4  0EE0               	movlw	low __pidataBANK0
   108  0066D6  6EF6               	movwf	tblptrl,c
   109  0066D8  0E65               	movlw	high __pidataBANK0
   110  0066DA  6EF7               	movwf	tblptrh,c
   111  0066DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   112  0066DE  6EF8               	movwf	tblptru,c
   113  0066E0  0009               	tblrd		*+	;fetch initializer
   114  0066E2  CFF5 F0EE          	movff	tablat,__pdataBANK0
   115  0066E6  0009               	tblrd		*+	;fetch initializer
   116  0066E8  CFF5 F0EF          	movff	tablat,__pdataBANK0+1
   117  0066EC                     end_of_initialization:
   118                           	opt stack 0
   119  0066EC                     __end_of__initialization:
   120                           	opt stack 0
   121  0066EC  0100               	movlb	0
   122  0066EE  EFA5  F035         	goto	_main	;jump to C main() function
   123                           tblptru	equ	0xFF8
   124                           tblptrh	equ	0xFF7
   125                           tblptrl	equ	0xFF6
   126                           tablat	equ	0xFF5
   127                           
   128                           	psect	bssCOMRAM
   129  00005F                     __pbssCOMRAM:
   130                           	opt stack 0
   131  00005F                     _Timer2Config:
   132                           	opt stack 0
   133  00005F                     	ds	1
   134                           tblptru	equ	0xFF8
   135                           tblptrh	equ	0xFF7
   136                           tblptrl	equ	0xFF6
   137                           tablat	equ	0xFF5
   138                           
   139                           	psect	bssBANK0
   140  0000EA                     __pbssBANK0:
   141                           	opt stack 0
   142  0000EA                     _DutyCycle:
   143                           	opt stack 0
   144  0000EA                     	ds	2
   145  0000EC                     _i:
   146                           	opt stack 0
   147  0000EC                     	ds	2
   148                           tblptru	equ	0xFF8
   149                           tblptrh	equ	0xFF7
   150                           tblptrl	equ	0xFF6
   151                           tablat	equ	0xFF5
   152                           
   153                           	psect	dataBANK0
   154  0000EE                     __pdataBANK0:
   155                           	opt stack 0
   156  0000EE                     _countup:
   157                           	opt stack 0
   158  0000EE                     	ds	2
   159                           tblptru	equ	0xFF8
   160                           tblptrh	equ	0xFF7
   161                           tblptrl	equ	0xFF6
   162                           tablat	equ	0xFF5
   163                           
   164                           	psect	cstackBANK6
   165  000600                     __pcstackBANK6:
   166                           	opt stack 0
   167  000600                     fuzzy_system_single2@x:
   168                           	opt stack 0
   169  000600                     fuzzy_system_single1@x:
   170                           	opt stack 0
   171                           
   172                           ; 120 bytes @ 0x0
   173  000600                     	ds	120
   174  000678                     fuzzy_system_single2@y:
   175                           	opt stack 0
   176  000678                     fuzzy_system_single1@y:
   177                           	opt stack 0
   178                           
   179                           ; 120 bytes @ 0x78
   180  000678                     	ds	120
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           
   186                           	psect	cstackBANK5
   187  000500                     __pcstackBANK5:
   188                           	opt stack 0
   189  000500                     fuzzy_system_single2@cons_mf3:
   190                           	opt stack 0
   191  000500                     fuzzy_system_single1@cons_mf3:
   192                           	opt stack 0
   193                           
   194                           ; 120 bytes @ 0x0
   195  000500                     	ds	120
   196  000578                     fuzzy_system_single2@overall_out_mf:
   197                           	opt stack 0
   198  000578                     fuzzy_system_single1@overall_out_mf:
   199                           	opt stack 0
   200                           
   201                           ; 120 bytes @ 0x78
   202  000578                     	ds	120
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           
   208                           	psect	cstackBANK4
   209  000400                     __pcstackBANK4:
   210                           	opt stack 0
   211  000400                     fuzzy_system_single2@qualified_cons_mf3:
   212                           	opt stack 0
   213  000400                     fuzzy_system_single1@qualified_cons_mf3:
   214                           	opt stack 0
   215                           
   216                           ; 120 bytes @ 0x0
   217  000400                     	ds	120
   218  000478                     fuzzy_system_single2@qualified_cons_mf2:
   219                           	opt stack 0
   220  000478                     fuzzy_system_single1@qualified_cons_mf2:
   221                           	opt stack 0
   222                           
   223                           ; 120 bytes @ 0x78
   224  000478                     	ds	120
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           tblptrl	equ	0xFF6
   228                           tablat	equ	0xFF5
   229                           
   230                           	psect	cstackBANK3
   231  000300                     __pcstackBANK3:
   232                           	opt stack 0
   233  000300                     fuzzy_system_single2@cons_mf1:
   234                           	opt stack 0
   235  000300                     fuzzy_system_single1@cons_mf1:
   236                           	opt stack 0
   237                           
   238                           ; 120 bytes @ 0x0
   239  000300                     	ds	120
   240  000378                     fuzzy_system_single2@qualified_cons_mf1:
   241                           	opt stack 0
   242  000378                     fuzzy_system_single1@qualified_cons_mf1:
   243                           	opt stack 0
   244                           
   245                           ; 120 bytes @ 0x78
   246  000378                     	ds	120
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           
   252                           	psect	cstackBANK2
   253  000200                     __pcstackBANK2:
   254                           	opt stack 0
   255  000200                     fuzzy_system_single2@cons_mf2:
   256                           	opt stack 0
   257  000200                     fuzzy_system_single1@cons_mf2:
   258                           	opt stack 0
   259                           
   260                           ; 120 bytes @ 0x0
   261  000200                     	ds	120
   262  000278                     fuzzy_system_single2@ante_mf3:
   263                           	opt stack 0
   264  000278                     fuzzy_system_single1@ante_mf3:
   265                           	opt stack 0
   266                           
   267                           ; 120 bytes @ 0x78
   268  000278                     	ds	120
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           
   274                           	psect	cstackBANK1
   275  000100                     __pcstackBANK1:
   276                           	opt stack 0
   277  000100                     fuzzy_system_single2@ante_mf1:
   278                           	opt stack 0
   279  000100                     fuzzy_system_single1@ante_mf1:
   280                           	opt stack 0
   281                           
   282                           ; 120 bytes @ 0x0
   283  000100                     	ds	120
   284  000178                     fuzzy_system_single2@ante_mf2:
   285                           	opt stack 0
   286  000178                     fuzzy_system_single1@ante_mf2:
   287                           	opt stack 0
   288                           
   289                           ; 120 bytes @ 0x78
   290  000178                     	ds	120
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           
   296                           	psect	cstackBANK0
   297  000060                     __pcstackBANK0:
   298                           	opt stack 0
   299  000060                     tri_mf@temp:
   300                           	opt stack 0
   301                           
   302                           ; 120 bytes @ 0x0
   303  000060                     	ds	120
   304  0000D8                     tri_mf@i:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x78
   308  0000D8                     	ds	2
   309  0000DA                     fuzzy_system_single2@output:
   310                           	opt stack 0
   311  0000DA                     fuzzy_system_single1@output:
   312                           	opt stack 0
   313                           
   314                           ; 3 bytes @ 0x7A
   315  0000DA                     	ds	3
   316  0000DD                     ??_main:
   317                           
   318                           ; 0 bytes @ 0x7D
   319  0000DD                     	ds	4
   320  0000E1                     main@b:
   321                           	opt stack 0
   322                           
   323                           ; 3 bytes @ 0x81
   324  0000E1                     	ds	3
   325  0000E4                     _main$1392:
   326                           	opt stack 0
   327                           
   328                           ; 3 bytes @ 0x84
   329  0000E4                     	ds	3
   330  0000E7                     main@a:
   331                           	opt stack 0
   332                           
   333                           ; 3 bytes @ 0x87
   334  0000E7                     	ds	3
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           
   340                           	psect	cstackCOMRAM
   341  000001                     __pcstackCOMRAM:
   342                           	opt stack 0
   343  000001                     ??_OpenPWM2:
   344  000001                     ?_getCNY70Value:
   345                           	opt stack 0
   346  000001                     ?___wmul:
   347                           	opt stack 0
   348  000001                     ?___ftpack:
   349                           	opt stack 0
   350  000001                     ?___ftneg:
   351                           	opt stack 0
   352  000001                     OpenPWM1@period:
   353                           	opt stack 0
   354  000001                     SetDCPWM1@dutycycle:
   355                           	opt stack 0
   356  000001                     SetDCPWM2@dutycycle:
   357                           	opt stack 0
   358  000001                     ___wmul@multiplier:
   359                           	opt stack 0
   360  000001                     ___ftpack@arg:
   361                           	opt stack 0
   362  000001                     ___ftneg@f1:
   363                           	opt stack 0
   364                           
   365                           ; 3 bytes @ 0x0
   366  000001                     	ds	1
   367  000002                     PWM_init1@period:
   368                           	opt stack 0
   369  000002                     OpenPWM2@period:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x1
   373  000002                     	ds	1
   374  000003                     ??_SetDCPWM1:
   375  000003                     ??_SetDCPWM2:
   376  000003                     OpenPWM2@ccp2mx:
   377                           	opt stack 0
   378  000003                     ___wmul@multiplicand:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x2
   382  000003                     	ds	1
   383  000004                     PWM_init2@period:
   384                           	opt stack 0
   385  000004                     ___ftpack@exp:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x3
   389  000004                     	ds	1
   390  000005                     ___ftpack@sign:
   391                           	opt stack 0
   392  000005                     SetDCPWM1@DCycle:
   393                           	opt stack 0
   394  000005                     SetDCPWM2@DCycle:
   395                           	opt stack 0
   396  000005                     ___wmul@product:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x4
   400  000005                     	ds	1
   401  000006                     ??___ftpack:
   402                           
   403                           ; 0 bytes @ 0x5
   404  000006                     	ds	1
   405  000007                     ___ftge@ff1:
   406                           	opt stack 0
   407                           
   408                           ; 3 bytes @ 0x6
   409  000007                     	ds	2
   410  000009                     ?___awtoft:
   411                           	opt stack 0
   412  000009                     ?___lbtoft:
   413                           	opt stack 0
   414  000009                     ___awtoft@c:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x8
   418  000009                     	ds	1
   419  00000A                     ___ftge@ff2:
   420                           	opt stack 0
   421                           
   422                           ; 3 bytes @ 0x9
   423  00000A                     	ds	2
   424  00000C                     ___awtoft@sign:
   425                           	opt stack 0
   426  00000C                     ___lbtoft@c:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0xB
   430  00000C                     	ds	1
   431  00000D                     ??___ftge:
   432  00000D                     ?___ftmul:
   433                           	opt stack 0
   434  00000D                     ___ftmul@f1:
   435                           	opt stack 0
   436                           
   437                           ; 3 bytes @ 0xC
   438  00000D                     	ds	3
   439  000010                     qualified@y:
   440                           	opt stack 0
   441  000010                     out_mf@result:
   442                           	opt stack 0
   443  000010                     ___ftmul@f2:
   444                           	opt stack 0
   445                           
   446                           ; 3 bytes @ 0xF
   447  000010                     	ds	2
   448  000012                     qualified@x:
   449                           	opt stack 0
   450  000012                     out_mf@x:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x11
   454  000012                     	ds	1
   455  000013                     ??___ftmul:
   456                           
   457                           ; 0 bytes @ 0x12
   458  000013                     	ds	1
   459  000014                     out_mf@y:
   460                           	opt stack 0
   461  000014                     qualified@w:
   462                           	opt stack 0
   463                           
   464                           ; 3 bytes @ 0x13
   465  000014                     	ds	2
   466  000016                     ___ftmul@exp:
   467                           	opt stack 0
   468  000016                     out_mf@z:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x15
   472  000016                     	ds	1
   473  000017                     qualified@min:
   474                           	opt stack 0
   475  000017                     ___ftmul@f3_as_product:
   476                           	opt stack 0
   477                           
   478                           ; 3 bytes @ 0x16
   479  000017                     	ds	1
   480  000018                     out_mf@i:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x17
   484  000018                     	ds	2
   485  00001A                     ___ftmul@cntr:
   486                           	opt stack 0
   487  00001A                     qualified@i:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x19
   491  00001A                     	ds	1
   492  00001B                     ___ftmul@sign:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x1A
   496  00001B                     	ds	1
   497  00001C                     ?___ftadd:
   498                           	opt stack 0
   499  00001C                     ?___fttol:
   500                           	opt stack 0
   501  00001C                     ___ftadd@f1:
   502                           	opt stack 0
   503  00001C                     ___fttol@f1:
   504                           	opt stack 0
   505                           
   506                           ; 3 bytes @ 0x1B
   507  00001C                     	ds	3
   508  00001F                     ___ftadd@f2:
   509                           	opt stack 0
   510                           
   511                           ; 3 bytes @ 0x1E
   512  00001F                     	ds	1
   513  000020                     ??___fttol:
   514                           
   515                           ; 0 bytes @ 0x1F
   516  000020                     	ds	2
   517  000022                     ??___ftadd:
   518                           
   519                           ; 0 bytes @ 0x21
   520  000022                     	ds	3
   521  000025                     ___ftadd@sign:
   522                           	opt stack 0
   523  000025                     ___fttol@sign1:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x24
   527  000025                     	ds	1
   528  000026                     ___ftadd@exp2:
   529                           	opt stack 0
   530  000026                     ___fttol@lval:
   531                           	opt stack 0
   532                           
   533                           ; 4 bytes @ 0x25
   534  000026                     	ds	1
   535  000027                     ___ftadd@exp1:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x26
   539  000027                     	ds	1
   540  000028                     ?___ftdiv:
   541                           	opt stack 0
   542  000028                     ___ftdiv@f1:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0x27
   546  000028                     	ds	2
   547  00002A                     ___fttol@exp1:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x29
   551  00002A                     	ds	1
   552  00002B                     ??_PWM_DutyCycle1:
   553  00002B                     ??_PWM_DutyCycle2:
   554  00002B                     ___ftdiv@f2:
   555                           	opt stack 0
   556                           
   557                           ; 3 bytes @ 0x2A
   558  00002B                     	ds	3
   559  00002E                     ??___ftdiv:
   560                           
   561                           ; 0 bytes @ 0x2D
   562  00002E                     	ds	1
   563  00002F                     PWM_DutyCycle1@DutyCycle:
   564                           	opt stack 0
   565  00002F                     PWM_DutyCycle2@DutyCycle:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x2E
   569  00002F                     	ds	2
   570  000031                     PWM_DutyCycle1@percentageDuty:
   571                           	opt stack 0
   572  000031                     PWM_DutyCycle2@percentageDuty:
   573                           	opt stack 0
   574  000031                     ___ftdiv@cntr:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x30
   578  000031                     	ds	1
   579  000032                     PWM_DutyCycle1@DC:
   580                           	opt stack 0
   581  000032                     PWM_DutyCycle2@DC:
   582                           	opt stack 0
   583  000032                     ___ftdiv@f3:
   584                           	opt stack 0
   585                           
   586                           ; 3 bytes @ 0x31
   587  000032                     	ds	2
   588  000034                     ??_mcu_init:
   589  000034                     go_back@m_left:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x33
   593  000034                     	ds	1
   594  000035                     go_back@m_right:
   595                           	opt stack 0
   596  000035                     ___ftdiv@exp:
   597                           	opt stack 0
   598  000035                     mcu_init@i:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x34
   602  000035                     	ds	1
   603  000036                     ___ftdiv@sign:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x35
   607  000036                     	ds	1
   608  000037                     ?_triangular:
   609                           	opt stack 0
   610  000037                     ?_defuzzy:
   611                           	opt stack 0
   612  000037                     linspace@x:
   613                           	opt stack 0
   614  000037                     defuzzy@x:
   615                           	opt stack 0
   616  000037                     triangular@a:
   617                           	opt stack 0
   618                           
   619                           ; 3 bytes @ 0x36
   620  000037                     	ds	2
   621  000039                     defuzzy@mf:
   622                           	opt stack 0
   623  000039                     linspace@start:
   624                           	opt stack 0
   625                           
   626                           ; 3 bytes @ 0x38
   627  000039                     	ds	1
   628  00003A                     triangular@b:
   629                           	opt stack 0
   630                           
   631                           ; 3 bytes @ 0x39
   632  00003A                     	ds	1
   633  00003B                     defuzzy@out:
   634                           	opt stack 0
   635                           
   636                           ; 3 bytes @ 0x3A
   637  00003B                     	ds	1
   638  00003C                     linspace@end:
   639                           	opt stack 0
   640                           
   641                           ; 3 bytes @ 0x3B
   642  00003C                     	ds	1
   643  00003D                     triangular@c:
   644                           	opt stack 0
   645                           
   646                           ; 3 bytes @ 0x3C
   647  00003D                     	ds	1
   648  00003E                     defuzzy@sum1:
   649                           	opt stack 0
   650                           
   651                           ; 3 bytes @ 0x3D
   652  00003E                     	ds	1
   653  00003F                     linspace@size:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x3E
   657  00003F                     	ds	1
   658  000040                     triangular@x:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0x3F
   662  000040                     	ds	1
   663  000041                     ??_linspace:
   664  000041                     defuzzy@sum2:
   665                           	opt stack 0
   666                           
   667                           ; 3 bytes @ 0x40
   668  000041                     	ds	2
   669  000043                     linspace@i:
   670                           	opt stack 0
   671  000043                     triangular@ux:
   672                           	opt stack 0
   673                           
   674                           ; 3 bytes @ 0x42
   675  000043                     	ds	1
   676  000044                     defuzzy@i:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x43
   680  000044                     	ds	2
   681  000046                     tri_mf@t_value:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x45
   685  000046                     	ds	2
   686  000048                     tri_mf@x:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x47
   690  000048                     	ds	2
   691  00004A                     tri_mf@a:
   692                           	opt stack 0
   693                           
   694                           ; 3 bytes @ 0x49
   695  00004A                     	ds	3
   696  00004D                     tri_mf@b:
   697                           	opt stack 0
   698                           
   699                           ; 3 bytes @ 0x4C
   700  00004D                     	ds	3
   701  000050                     tri_mf@c:
   702                           	opt stack 0
   703                           
   704                           ; 3 bytes @ 0x4F
   705  000050                     	ds	3
   706  000053                     ?_fuzzy_system_single1:
   707                           	opt stack 0
   708  000053                     ?_fuzzy_system_single2:
   709                           	opt stack 0
   710  000053                     fuzzy_system_single2@input:
   711                           	opt stack 0
   712  000053                     fuzzy_system_single1@input:
   713                           	opt stack 0
   714                           
   715                           ; 3 bytes @ 0x52
   716  000053                     	ds	3
   717  000056                     fuzzy_system_single2@w1:
   718                           	opt stack 0
   719  000056                     fuzzy_system_single1@w1:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x55
   723  000056                     	ds	3
   724  000059                     fuzzy_system_single2@w2:
   725                           	opt stack 0
   726  000059                     fuzzy_system_single1@w2:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x58
   730  000059                     	ds	3
   731  00005C                     fuzzy_system_single2@w3:
   732                           	opt stack 0
   733  00005C                     fuzzy_system_single1@w3:
   734                           	opt stack 0
   735                           
   736                           ; 3 bytes @ 0x5B
   737  00005C                     	ds	3
   738                           tblptru	equ	0xFF8
   739                           tblptrh	equ	0xFF7
   740                           tblptrl	equ	0xFF6
   741                           tablat	equ	0xFF5
   742                           
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   745 ;;
   746 ;; *************** function _main *****************
   747 ;; Defined at:
   748 ;;		line 25 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  a               3  135[BANK0 ] PTR 
   753 ;;  b               3  129[BANK0 ] PTR 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  2   18[COMRAM] int 
   756 ;; Registers used:
   757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   763 ;;      Params:         0       0       0       0       0       0       0       0       0
   764 ;;      Locals:         0       9       0       0       0       0       0       0       0
   765 ;;      Temps:          0       4       0       0       0       0       0       0       0
   766 ;;      Totals:         0      13       0       0       0       0       0       0       0
   767 ;;Total ram usage:       13 bytes
   768 ;; Hardware stack levels required when called:    5
   769 ;; This function calls:
   770 ;;		_PWM_DutyCycle1
   771 ;;		___awtoft
   772 ;;		___fttol
   773 ;;		_fuzzy_system_single1
   774 ;;		_fuzzy_system_single2
   775 ;;		_getCNY70Value
   776 ;;		_go_back
   777 ;;		_mcu_init
   778 ;;		_motor_forward
   779 ;; This function is called by:
   780 ;;		Startup code after reset
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text0
   785  006B4A                     __ptext0:
   786                           	opt stack 0
   787  006B4A                     _main:
   788                           	opt stack 26
   789                           
   790                           ;main.c: 28: mcu_init();
   791                           
   792                           ;incstack = 0
   793  006B4A  ECA6  F034         	call	_mcu_init	;wreg free
   794  006B4E                     l2643:
   795                           
   796                           ;main.c: 32: double a, b;
   797                           ;main.c: 41: a = fuzzy_system_single1(getCNY70Value());
   798  006B4E  EC49  F035         	call	_getCNY70Value	;wreg free
   799  006B52  C001  F009         	movff	?_getCNY70Value,___awtoft@c
   800  006B56  C002  F00A         	movff	?_getCNY70Value+1,___awtoft@c+1
   801  006B5A  ECD0  F033         	call	___awtoft	;wreg free
   802  006B5E  C009  F0E4         	movff	?___awtoft,_main$1392
   803  006B62  C00A  F0E5         	movff	?___awtoft+1,_main$1392+1
   804  006B66  C00B  F0E6         	movff	?___awtoft+2,_main$1392+2
   805                           
   806                           ;main.c: 32: double a, b;
   807                           ;main.c: 41: a = fuzzy_system_single1(getCNY70Value());
   808  006B6A  C0E4  F053         	movff	_main$1392,fuzzy_system_single1@input
   809  006B6E  C0E5  F054         	movff	_main$1392+1,fuzzy_system_single1@input+1
   810  006B72  C0E6  F055         	movff	_main$1392+2,fuzzy_system_single1@input+2
   811  006B76  EC7E  F03C         	call	_fuzzy_system_single1	;wreg free
   812  006B7A  C053  F0E7         	movff	?_fuzzy_system_single1,main@a
   813  006B7E  C054  F0E8         	movff	?_fuzzy_system_single1+1,main@a+1
   814  006B82  C055  F0E9         	movff	?_fuzzy_system_single1+2,main@a+2
   815                           
   816                           ;main.c: 42: b = fuzzy_system_single2(a);
   817  006B86  C0E7  F053         	movff	main@a,fuzzy_system_single2@input
   818  006B8A  C0E8  F054         	movff	main@a+1,fuzzy_system_single2@input+1
   819  006B8E  C0E9  F055         	movff	main@a+2,fuzzy_system_single2@input+2
   820  006B92  EC3F  F03E         	call	_fuzzy_system_single2	;wreg free
   821  006B96  C053  F0E1         	movff	?_fuzzy_system_single2,main@b
   822  006B9A  C054  F0E2         	movff	?_fuzzy_system_single2+1,main@b+1
   823  006B9E  C055  F0E3         	movff	?_fuzzy_system_single2+2,main@b+2
   824                           
   825                           ;main.c: 44: if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && PORTBb
      +                          its.RB4 == 1 && PORTBbits.RB1 == 1){
   826  006BA2  B481               	btfsc	3969,2,c	;volatile
   827  006BA4  A681               	btfss	3969,3,c	;volatile
   828  006BA6  D00B               	goto	l2661
   829  006BA8  B081               	btfsc	3969,0,c	;volatile
   830  006BAA  A881               	btfss	3969,4,c	;volatile
   831  006BAC  D008               	goto	l2661
   832  006BAE  A281               	btfss	3969,1,c	;volatile
   833  006BB0  D006               	goto	l2661
   834                           
   835                           ;main.c: 45: go_back(100,100);
   836  006BB2  0E64               	movlw	100
   837  006BB4  6E34               	movwf	go_back@m_left,c
   838  006BB6  0E64               	movlw	100
   839  006BB8  EC04  F033         	call	_go_back
   840                           
   841                           ;main.c: 46: }
   842  006BBC  D7C8               	goto	l2643
   843  006BBE                     l2661:
   844                           
   845                           ;main.c: 47: else{
   846                           ;main.c: 48: motor_forward();
   847  006BBE  ECF6  F032         	call	_motor_forward	;wreg free
   848                           
   849                           ;main.c: 49: PWM_DutyCycle1(a);
   850  006BC2  C0E7  F01C         	movff	main@a,___fttol@f1
   851  006BC6  C0E8  F01D         	movff	main@a+1,___fttol@f1+1
   852  006BCA  C0E9  F01E         	movff	main@a+2,___fttol@f1+2
   853  006BCE  EC0A  F036         	call	___fttol	;wreg free
   854  006BD2  C01C  F0DD         	movff	?___fttol,??_main
   855  006BD6  C01D  F0DE         	movff	?___fttol+1,??_main+1
   856  006BDA  C01E  F0DF         	movff	?___fttol+2,??_main+2
   857  006BDE  C01F  F0E0         	movff	?___fttol+3,??_main+3
   858  006BE2  0100               	movlb	0	; () banked
   859  006BE4  51DD               	movf	??_main& (0+255),w,b
   860  006BE6  ECF4  F033         	call	_PWM_DutyCycle1
   861                           
   862                           ;main.c: 50: PWM_DutyCycle1(b);
   863  006BEA  C0E1  F01C         	movff	main@b,___fttol@f1
   864  006BEE  C0E2  F01D         	movff	main@b+1,___fttol@f1+1
   865  006BF2  C0E3  F01E         	movff	main@b+2,___fttol@f1+2
   866  006BF6  EC0A  F036         	call	___fttol	;wreg free
   867  006BFA  C01C  F0DD         	movff	?___fttol,??_main
   868  006BFE  C01D  F0DE         	movff	?___fttol+1,??_main+1
   869  006C02  C01E  F0DF         	movff	?___fttol+2,??_main+2
   870  006C06  C01F  F0E0         	movff	?___fttol+3,??_main+3
   871  006C0A  0100               	movlb	0	; () banked
   872  006C0C  51DD               	movf	??_main& (0+255),w,b
   873  006C0E  ECF4  F033         	call	_PWM_DutyCycle1
   874  006C12  D79D               	goto	l2643
   875  006C14                     __end_of_main:
   876                           	opt stack 0
   877                           tblptru	equ	0xFF8
   878                           tblptrh	equ	0xFF7
   879                           tblptrl	equ	0xFF6
   880                           tablat	equ	0xFF5
   881                           
   882 ;; *************** function _motor_forward *****************
   883 ;; Defined at:
   884 ;;		line 47 in file "motor.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;		None               void
   891 ;; Registers used:
   892 ;;		None
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   898 ;;      Params:         0       0       0       0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_main
   908 ;;		_go_straight
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text1
   913  0065EC                     __ptext1:
   914                           	opt stack 0
   915  0065EC                     _motor_forward:
   916                           	opt stack 30
   917                           
   918                           ;motor.c: 49: PORTDbits.RD7 = 1;
   919                           
   920                           ;incstack = 0
   921  0065EC  8E83               	bsf	3971,7,c	;volatile
   922                           
   923                           ;motor.c: 50: PORTDbits.RD4 = 0;
   924  0065EE  9883               	bcf	3971,4,c	;volatile
   925                           
   926                           ;motor.c: 51: PORTDbits.RD2 = 1;
   927  0065F0  8483               	bsf	3971,2,c	;volatile
   928                           
   929                           ;motor.c: 52: PORTDbits.RD3 = 0;
   930  0065F2  9683               	bcf	3971,3,c	;volatile
   931                           
   932                           ;motor.c: 54: return;
   933  0065F4  0012               	return	
   934  0065F6                     __end_of_motor_forward:
   935                           	opt stack 0
   936                           tblptru	equ	0xFF8
   937                           tblptrh	equ	0xFF7
   938                           tblptrl	equ	0xFF6
   939                           tablat	equ	0xFF5
   940                           
   941 ;; *************** function _mcu_init *****************
   942 ;; Defined at:
   943 ;;		line 14 in file "funciones.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  i               2   52[COMRAM] int 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  2    2[COMRAM] int 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   957 ;;      Params:         0       0       0       0       0       0       0       0       0
   958 ;;      Locals:         2       0       0       0       0       0       0       0       0
   959 ;;      Temps:          1       0       0       0       0       0       0       0       0
   960 ;;      Totals:         3       0       0       0       0       0       0       0       0
   961 ;;Total ram usage:        3 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    3
   964 ;; This function calls:
   965 ;;		_PWM_DutyCycle1
   966 ;;		_PWM_DutyCycle2
   967 ;;		_PWM_init1
   968 ;;		_PWM_init2
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text2
   975  00694C                     __ptext2:
   976                           	opt stack 0
   977  00694C                     _mcu_init:
   978                           	opt stack 27
   979                           
   980                           ;funciones.c: 16: TRISA=TRISB=TRISC=TRISD=TRISE=0;
   981                           
   982                           ;incstack = 0
   983  00694C  0E00               	movlw	0
   984  00694E  6E96               	movwf	3990,c	;volatile
   985  006950  CF96 FF95          	movff	3990,3989	;volatile
   986  006954  CF95 FF94          	movff	3989,3988	;volatile
   987  006958  CF94 FF93          	movff	3988,3987	;volatile
   988  00695C  CF93 FF92          	movff	3987,3986	;volatile
   989                           
   990                           ;funciones.c: 17: PORTA=PORTB=PORTC=PORTD=PORTE=0;
   991  006960  0E00               	movlw	0
   992  006962  6E84               	movwf	3972,c	;volatile
   993  006964  CF84 FF83          	movff	3972,3971	;volatile
   994  006968  CF83 FF82          	movff	3971,3970	;volatile
   995  00696C  CF82 FF81          	movff	3970,3969	;volatile
   996  006970  CF81 FF80          	movff	3969,3968	;volatile
   997                           
   998                           ;funciones.c: 21: int i = 0;
   999  006974  0E00               	movlw	0
  1000  006976  6E36               	movwf	mcu_init@i+1,c
  1001  006978  0E00               	movlw	0
  1002  00697A  6E35               	movwf	mcu_init@i,c
  1003                           
  1004                           ;funciones.c: 22: _delay((unsigned long)((40)*(8000000/4000.0)));
  1005  00697C  0E68               	movlw	104
  1006  00697E  6E34               	movwf	??_mcu_init& (0+255),c
  1007  006980  0EE4               	movlw	228
  1008  006982                     u3017:
  1009  006982  2EE8               	decfsz	wreg,f,c
  1010  006984  D7FE               	goto	u3017
  1011  006986  2E34               	decfsz	??_mcu_init& (0+255),f,c
  1012  006988  D7FC               	goto	u3017
  1013  00698A  D000               	nop2	
  1014                           
  1015                           ;funciones.c: 23: OSCCONbits.IRCF = 0b111;
  1016  00698C  88D3               	bsf	4051,4,c	;volatile
  1017  00698E  8AD3               	bsf	4051,5,c	;volatile
  1018  006990  8CD3               	bsf	4051,6,c	;volatile
  1019                           
  1020                           ;funciones.c: 28: TRISA = TRISB = TRISC = TRISD = TRISE = 0;
  1021  006992  0E00               	movlw	0
  1022  006994  6E96               	movwf	3990,c	;volatile
  1023  006996  CF96 FF95          	movff	3990,3989	;volatile
  1024  00699A  CF95 FF94          	movff	3989,3988	;volatile
  1025  00699E  CF94 FF93          	movff	3988,3987	;volatile
  1026  0069A2  CF93 FF92          	movff	3987,3986	;volatile
  1027                           
  1028                           ;funciones.c: 29: PORTA = PORTB = PORTC = PORTD = PORTE = 0;
  1029  0069A6  0E00               	movlw	0
  1030  0069A8  6E84               	movwf	3972,c	;volatile
  1031  0069AA  CF84 FF83          	movff	3972,3971	;volatile
  1032  0069AE  CF83 FF82          	movff	3971,3970	;volatile
  1033  0069B2  CF82 FF81          	movff	3970,3969	;volatile
  1034  0069B6  CF81 FF80          	movff	3969,3968	;volatile
  1035                           
  1036                           ;funciones.c: 30: TRISCbits.TRISC7 = 1;
  1037  0069BA  8E94               	bsf	3988,7,c	;volatile
  1038                           
  1039                           ;funciones.c: 31: TRISCbits.TRISC6 = 0;
  1040  0069BC  9C94               	bcf	3988,6,c	;volatile
  1041                           
  1042                           ;funciones.c: 34: PORTE = 0;
  1043  0069BE  0E00               	movlw	0
  1044  0069C0  6E84               	movwf	3972,c	;volatile
  1045                           
  1046                           ;funciones.c: 35: PORTB = 0;
  1047  0069C2  0E00               	movlw	0
  1048  0069C4  6E81               	movwf	3969,c	;volatile
  1049                           
  1050                           ;funciones.c: 36: TRISBbits.TRISB0 = 1;
  1051  0069C6  8093               	bsf	3987,0,c	;volatile
  1052                           
  1053                           ;funciones.c: 37: TRISBbits.TRISB1 = 1;
  1054  0069C8  8293               	bsf	3987,1,c	;volatile
  1055                           
  1056                           ;funciones.c: 38: TRISBbits.TRISB2 = 1;
  1057  0069CA  8493               	bsf	3987,2,c	;volatile
  1058                           
  1059                           ;funciones.c: 39: TRISBbits.TRISB3 = 1;
  1060  0069CC  8693               	bsf	3987,3,c	;volatile
  1061                           
  1062                           ;funciones.c: 40: TRISBbits.TRISB4 = 1;
  1063  0069CE  8893               	bsf	3987,4,c	;volatile
  1064                           
  1065                           ;funciones.c: 46: PWM_init1(0xff);
  1066  0069D0  0EFF               	movlw	255
  1067  0069D2  EC0E  F033         	call	_PWM_init1
  1068                           
  1069                           ;funciones.c: 47: PWM_init2(0xff);
  1070  0069D6  0EFF               	movlw	255
  1071  0069D8  EC1D  F033         	call	_PWM_init2
  1072                           
  1073                           ;funciones.c: 48: PWM_DutyCycle1(0);
  1074  0069DC  0E00               	movlw	0
  1075  0069DE  ECF4  F033         	call	_PWM_DutyCycle1
  1076                           
  1077                           ;funciones.c: 49: PWM_DutyCycle2(0);
  1078  0069E2  0E00               	movlw	0
  1079  0069E4  EC29  F034         	call	_PWM_DutyCycle2
  1080                           
  1081                           ;funciones.c: 52: return;
  1082  0069E8  0012               	return	
  1083  0069EA                     __end_of_mcu_init:
  1084                           	opt stack 0
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           wreg	equ	0xFE8
  1090                           
  1091 ;; *************** function _PWM_init2 *****************
  1092 ;; Defined at:
  1093 ;;		line 42 in file "pwm.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  period          1    wreg     unsigned char 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  period          1    3[COMRAM] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;		None               void
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        1 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    1
  1114 ;; This function calls:
  1115 ;;		_OpenPWM2
  1116 ;; This function is called by:
  1117 ;;		_mcu_init
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text3
  1122  00663A                     __ptext3:
  1123                           	opt stack 0
  1124  00663A                     _PWM_init2:
  1125                           	opt stack 28
  1126                           
  1127                           ;incstack = 0
  1128                           ;PWM_init2@period stored from wreg
  1129  00663A  6E04               	movwf	PWM_init2@period,c
  1130                           
  1131                           ;pwm.c: 43: Timer2Config = 0b11111110;
  1132  00663C  0EFE               	movlw	254
  1133  00663E  6E5F               	movwf	_Timer2Config,c
  1134                           
  1135                           ;pwm.c: 44: T2CON = (0xfb & Timer2Config);
  1136  006640  505F               	movf	_Timer2Config,w,c
  1137  006642  0BFB               	andlw	251
  1138  006644  6ECA               	movwf	4042,c	;volatile
  1139                           
  1140                           ;pwm.c: 47: TMR2 = 0;
  1141  006646  0E00               	movlw	0
  1142  006648  6ECC               	movwf	4044,c	;volatile
  1143                           
  1144                           ;pwm.c: 48: PIR1bits.TMR2IF = 0;
  1145  00664A  929E               	bcf	3998,1,c	;volatile
  1146                           
  1147                           ;pwm.c: 49: PIE1bits.TMR2IE = 0;
  1148  00664C  929D               	bcf	3997,1,c	;volatile
  1149                           
  1150                           ;pwm.c: 50: T2CONbits.TMR2ON = 1;
  1151  00664E  84CA               	bsf	4042,2,c	;volatile
  1152                           
  1153                           ;pwm.c: 51: OpenPWM2(period);
  1154  006650  5004               	movf	PWM_init2@period,w,c
  1155  006652  ECB3  F033         	call	_OpenPWM2
  1156                           
  1157                           ;pwm.c: 53: return;
  1158  006656  0012               	return	
  1159  006658                     __end_of_PWM_init2:
  1160                           	opt stack 0
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           wreg	equ	0xFE8
  1166                           
  1167 ;; *************** function _OpenPWM2 *****************
  1168 ;; Defined at:
  1169 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  period          1    wreg     unsigned char 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  period          1    1[COMRAM] unsigned char 
  1174 ;;  ccp2mx          1    2[COMRAM] unsigned char 
  1175 ;;  pmmode          1    0        unsigned char 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;		None               void
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1185 ;;      Params:         0       0       0       0       0       0       0       0       0
  1186 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1187 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1188 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1189 ;;Total ram usage:        3 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_PWM_init2
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text4
  1199  006766                     __ptext4:
  1200                           	opt stack 0
  1201  006766                     _OpenPWM2:
  1202                           	opt stack 28
  1203                           
  1204                           ;incstack = 0
  1205                           ;OpenPWM2@period stored from wreg
  1206  006766  6E02               	movwf	OpenPWM2@period,c
  1207  006768  0E0C               	movlw	12
  1208  00676A  6EBA               	movwf	4026,c	;volatile
  1209  00676C  0E05               	movlw	5
  1210  00676E  6EF6               	movwf	tblptrl,c
  1211  006770                     	if	1	;There is more than 1 active tblptr byte
  1212  006770  0E00               	movlw	0
  1213  006772  6EF7               	movwf	tblptrh,c
  1214  006774                     	endif
  1215  006774                     	if	1	;There are 3 active tblptr bytes
  1216  006774  0E30               	movlw	48
  1217  006776  6EF8               	movwf	tblptru,c
  1218  006778                     	endif
  1219  006778  0008               	tblrd		*
  1220  00677A  CFF5 F001          	movff	tablat,??_OpenPWM2
  1221  00677E  A001               	btfss	??_OpenPWM2,0,c
  1222  006780  D002               	goto	l2067
  1223  006782  6803               	setf	OpenPWM2@ccp2mx,c
  1224  006784  D002               	goto	l291
  1225  006786                     l2067:
  1226  006786  0E00               	movlw	0
  1227  006788  6E03               	movwf	OpenPWM2@ccp2mx,c
  1228  00678A                     l291:
  1229  00678A  5003               	movf	OpenPWM2@ccp2mx,w,c
  1230  00678C  B4D8               	btfsc	status,2,c
  1231  00678E  D002               	goto	l292
  1232  006790  9294               	bcf	3988,1,c	;volatile
  1233  006792  D001               	goto	l293
  1234  006794                     l292:
  1235  006794  9693               	bcf	3987,3,c	;volatile
  1236  006796                     l293:
  1237  006796  94CA               	bcf	4042,2,c	;volatile
  1238  006798  C002  FFCB         	movff	OpenPWM2@period,4043	;volatile
  1239  00679C  84CA               	bsf	4042,2,c	;volatile
  1240  00679E  0012               	return	
  1241  0067A0                     __end_of_OpenPWM2:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           wreg	equ	0xFE8
  1248                           status	equ	0xFD8
  1249                           
  1250 ;; *************** function _PWM_init1 *****************
  1251 ;; Defined at:
  1252 ;;		line 20 in file "pwm.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  period          1    wreg     unsigned char 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  period          1    1[COMRAM] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;		None               void
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0
  1267 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1269 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1270 ;;Total ram usage:        1 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    1
  1273 ;; This function calls:
  1274 ;;		_OpenPWM1
  1275 ;; This function is called by:
  1276 ;;		_mcu_init
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text5
  1281  00661C                     __ptext5:
  1282                           	opt stack 0
  1283  00661C                     _PWM_init1:
  1284                           	opt stack 28
  1285                           
  1286                           ;incstack = 0
  1287                           ;PWM_init1@period stored from wreg
  1288  00661C  6E02               	movwf	PWM_init1@period,c
  1289                           
  1290                           ;pwm.c: 21: Timer2Config = 0b11111110;
  1291  00661E  0EFE               	movlw	254
  1292  006620  6E5F               	movwf	_Timer2Config,c
  1293                           
  1294                           ;pwm.c: 22: T2CON = (0xfb & Timer2Config);
  1295  006622  505F               	movf	_Timer2Config,w,c
  1296  006624  0BFB               	andlw	251
  1297  006626  6ECA               	movwf	4042,c	;volatile
  1298                           
  1299                           ;pwm.c: 25: TMR2 = 0;
  1300  006628  0E00               	movlw	0
  1301  00662A  6ECC               	movwf	4044,c	;volatile
  1302                           
  1303                           ;pwm.c: 26: PIR1bits.TMR2IF = 0;
  1304  00662C  929E               	bcf	3998,1,c	;volatile
  1305                           
  1306                           ;pwm.c: 27: PIE1bits.TMR2IE = 0;
  1307  00662E  929D               	bcf	3997,1,c	;volatile
  1308                           
  1309                           ;pwm.c: 28: T2CONbits.TMR2ON = 1;
  1310  006630  84CA               	bsf	4042,2,c	;volatile
  1311                           
  1312                           ;pwm.c: 29: OpenPWM1(period);
  1313  006632  5002               	movf	PWM_init1@period,w,c
  1314  006634  ECFB  F032         	call	_OpenPWM1
  1315                           
  1316                           ;pwm.c: 31: return;
  1317  006638  0012               	return	
  1318  00663A                     __end_of_PWM_init1:
  1319                           	opt stack 0
  1320                           tblptru	equ	0xFF8
  1321                           tblptrh	equ	0xFF7
  1322                           tblptrl	equ	0xFF6
  1323                           tablat	equ	0xFF5
  1324                           wreg	equ	0xFE8
  1325                           status	equ	0xFD8
  1326                           
  1327 ;; *************** function _OpenPWM1 *****************
  1328 ;; Defined at:
  1329 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  period          1    wreg     unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  period          1    0[COMRAM] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;		None               void
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1343 ;;      Params:         0       0       0       0       0       0       0       0       0
  1344 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1346 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1347 ;;Total ram usage:        1 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_PWM_init1
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text6
  1357  0065F6                     __ptext6:
  1358                           	opt stack 0
  1359  0065F6                     _OpenPWM1:
  1360                           	opt stack 28
  1361                           
  1362                           ;incstack = 0
  1363                           ;OpenPWM1@period stored from wreg
  1364  0065F6  6E01               	movwf	OpenPWM1@period,c
  1365  0065F8  0E0C               	movlw	12
  1366  0065FA  12BD               	iorwf	4029,f,c	;volatile
  1367  0065FC  9494               	bcf	3988,2,c	;volatile
  1368  0065FE  94CA               	bcf	4042,2,c	;volatile
  1369  006600  C001  FFCB         	movff	OpenPWM1@period,4043	;volatile
  1370  006604  84CA               	bsf	4042,2,c	;volatile
  1371  006606  0012               	return	
  1372  006608                     __end_of_OpenPWM1:
  1373                           	opt stack 0
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           wreg	equ	0xFE8
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function _go_back *****************
  1382 ;; Defined at:
  1383 ;;		line 125 in file "cny70.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  m_right         1    wreg     unsigned char 
  1386 ;;  m_left          1   51[COMRAM] unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  m_right         1   52[COMRAM] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;		None               void
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         1       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        2 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    3
  1405 ;; This function calls:
  1406 ;;		_PWM_DutyCycle1
  1407 ;;		_PWM_DutyCycle2
  1408 ;;		_motor_Backforward
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text7
  1415  006608                     __ptext7:
  1416                           	opt stack 0
  1417  006608                     _go_back:
  1418                           	opt stack 27
  1419                           
  1420                           ;incstack = 0
  1421                           ;go_back@m_right stored from wreg
  1422  006608  6E35               	movwf	go_back@m_right,c
  1423                           
  1424                           ;cny70.c: 127: motor_Backforward();
  1425  00660A  ECF1  F032         	call	_motor_Backforward	;wreg free
  1426                           
  1427                           ;cny70.c: 128: PWM_DutyCycle1(m_right);
  1428  00660E  5035               	movf	go_back@m_right,w,c
  1429  006610  ECF4  F033         	call	_PWM_DutyCycle1
  1430                           
  1431                           ;cny70.c: 129: PWM_DutyCycle2(m_left);
  1432  006614  5034               	movf	go_back@m_left,w,c
  1433  006616  EC29  F034         	call	_PWM_DutyCycle2
  1434                           
  1435                           ;cny70.c: 130: return;
  1436  00661A  0012               	return	
  1437  00661C                     __end_of_go_back:
  1438                           	opt stack 0
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           wreg	equ	0xFE8
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _motor_Backforward *****************
  1447 ;; Defined at:
  1448 ;;		line 57 in file "motor.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  2  203[COMRAM] int 
  1455 ;; Registers used:
  1456 ;;		None
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1462 ;;      Params:         0       0       0       0       0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1465 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_go_back
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text8
  1476  0065E2                     __ptext8:
  1477                           	opt stack 0
  1478  0065E2                     _motor_Backforward:
  1479                           	opt stack 29
  1480                           
  1481                           ;motor.c: 59: PORTDbits.RD7 = 0;
  1482                           
  1483                           ;incstack = 0
  1484  0065E2  9E83               	bcf	3971,7,c	;volatile
  1485                           
  1486                           ;motor.c: 60: PORTDbits.RD4 = 1;
  1487  0065E4  8883               	bsf	3971,4,c	;volatile
  1488                           
  1489                           ;motor.c: 61: PORTDbits.RD2 = 0;
  1490  0065E6  9483               	bcf	3971,2,c	;volatile
  1491                           
  1492                           ;motor.c: 62: PORTDbits.RD3 = 1;
  1493  0065E8  8683               	bsf	3971,3,c	;volatile
  1494                           
  1495                           ;motor.c: 64: return;
  1496  0065EA  0012               	return	
  1497  0065EC                     __end_of_motor_Backforward:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           wreg	equ	0xFE8
  1504                           status	equ	0xFD8
  1505                           
  1506 ;; *************** function _PWM_DutyCycle2 *****************
  1507 ;; Defined at:
  1508 ;;		line 55 in file "pwm.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  percentageDu    1    wreg     unsigned char 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  percentageDu    1   48[COMRAM] unsigned char 
  1513 ;;  DC              2   49[COMRAM] unsigned int 
  1514 ;;  DutyCycle       2   46[COMRAM] unsigned int 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;		None               void
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0
  1525 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1526 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1527 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1528 ;;Total ram usage:        9 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    2
  1531 ;; This function calls:
  1532 ;;		_SetDCPWM2
  1533 ;;		___ftmul
  1534 ;;		___fttol
  1535 ;;		___lbtoft
  1536 ;; This function is called by:
  1537 ;;		_mcu_init
  1538 ;;		_go_back
  1539 ;;		_right
  1540 ;;		_left
  1541 ;;		_go_straight
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text9
  1546  006852                     __ptext9:
  1547                           	opt stack 0
  1548  006852                     _PWM_DutyCycle2:
  1549                           	opt stack 27
  1550                           
  1551                           ;incstack = 0
  1552                           ;PWM_DutyCycle2@percentageDuty stored from wreg
  1553  006852  6E31               	movwf	PWM_DutyCycle2@percentageDuty,c
  1554                           
  1555                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  1556  006854  0E00               	movlw	0
  1557  006856  6E33               	movwf	PWM_DutyCycle2@DC+1,c
  1558  006858  0E00               	movlw	0
  1559  00685A  6E32               	movwf	PWM_DutyCycle2@DC,c
  1560  00685C  0E00               	movlw	0
  1561  00685E  6E30               	movwf	PWM_DutyCycle2@DutyCycle+1,c
  1562  006860  0E00               	movlw	0
  1563  006862  6E2F               	movwf	PWM_DutyCycle2@DutyCycle,c
  1564                           
  1565                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  1566  006864  0EAE               	movlw	174
  1567  006866  6E10               	movwf	___ftmul@f2,c
  1568  006868  0E23               	movlw	35
  1569  00686A  6E11               	movwf	___ftmul@f2+1,c
  1570  00686C  0E41               	movlw	65
  1571  00686E  6E12               	movwf	___ftmul@f2+2,c
  1572  006870  5031               	movf	PWM_DutyCycle2@percentageDuty,w,c
  1573  006872  EC2C  F033         	call	___lbtoft
  1574  006876  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1575  00687A  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1576  00687E  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1577  006882  ECDF  F036         	call	___ftmul	;wreg free
  1578  006886  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1579  00688A  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1580  00688E  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1581  006892  EC0A  F036         	call	___fttol	;wreg free
  1582  006896  C01C  F02B         	movff	?___fttol,??_PWM_DutyCycle2
  1583  00689A  C01D  F02C         	movff	?___fttol+1,??_PWM_DutyCycle2+1
  1584  00689E  C01E  F02D         	movff	?___fttol+2,??_PWM_DutyCycle2+2
  1585  0068A2  C01F  F02E         	movff	?___fttol+3,??_PWM_DutyCycle2+3
  1586  0068A6  C02B  F032         	movff	??_PWM_DutyCycle2,PWM_DutyCycle2@DC
  1587  0068AA  C02C  F033         	movff	??_PWM_DutyCycle2+1,PWM_DutyCycle2@DC+1
  1588                           
  1589                           ;pwm.c: 60: SetDCPWM2(DC);
  1590  0068AE  C032  F001         	movff	PWM_DutyCycle2@DC,SetDCPWM2@dutycycle
  1591  0068B2  C033  F002         	movff	PWM_DutyCycle2@DC+1,SetDCPWM2@dutycycle+1
  1592  0068B6  EC96  F033         	call	_SetDCPWM2	;wreg free
  1593                           
  1594                           ;pwm.c: 61: return;
  1595  0068BA  0012               	return	
  1596  0068BC                     __end_of_PWM_DutyCycle2:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           wreg	equ	0xFE8
  1603                           status	equ	0xFD8
  1604                           
  1605 ;; *************** function _SetDCPWM2 *****************
  1606 ;; Defined at:
  1607 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  dutycycle       2    0[COMRAM] unsigned int 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  DCycle          2    4[COMRAM] struct PWMDC
  1612 ;; Return value:  Size  Location     Type
  1613 ;;		None               void
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1621 ;;      Params:         2       0       0       0       0       0       0       0       0
  1622 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1623 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1624 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1625 ;;Total ram usage:        6 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_PWM_DutyCycle2
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text10
  1635  00672C                     __ptext10:
  1636                           	opt stack 0
  1637  00672C                     _SetDCPWM2:
  1638                           	opt stack 28
  1639                           
  1640                           ;incstack = 0
  1641  00672C  C001  F003         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  1642  006730  C002  F004         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  1643  006734  0E06               	movlw	6
  1644  006736                     u1975:
  1645  006736  90D8               	bcf	status,0,c
  1646  006738  3603               	rlcf	??_SetDCPWM2,f,c
  1647  00673A  3604               	rlcf	??_SetDCPWM2+1,f,c
  1648  00673C  2EE8               	decfsz	wreg,f,c
  1649  00673E  D7FB               	goto	u1975
  1650  006740  C003  F005         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  1651  006744  C004  F006         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  1652  006748  C006  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  1653  00674C  C005  F003         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  1654  006750  90D8               	bcf	status,0,c
  1655  006752  3203               	rrcf	??_SetDCPWM2,f,c
  1656  006754  90D8               	bcf	status,0,c
  1657  006756  3203               	rrcf	??_SetDCPWM2,f,c
  1658  006758  0E30               	movlw	48
  1659  00675A  1603               	andwf	??_SetDCPWM2,f,c
  1660  00675C  50BA               	movf	4026,w,c	;volatile
  1661  00675E  0BCF               	andlw	207
  1662  006760  1003               	iorwf	??_SetDCPWM2,w,c
  1663  006762  6EBA               	movwf	4026,c	;volatile
  1664  006764  0012               	return	
  1665  006766                     __end_of_SetDCPWM2:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           tblptrh	equ	0xFF7
  1669                           tblptrl	equ	0xFF6
  1670                           tablat	equ	0xFF5
  1671                           wreg	equ	0xFE8
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function _PWM_DutyCycle1 *****************
  1675 ;; Defined at:
  1676 ;;		line 33 in file "pwm.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  percentageDu    1    wreg     unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  percentageDu    1   48[COMRAM] unsigned char 
  1681 ;;  DC              2   49[COMRAM] unsigned int 
  1682 ;;  DutyCycle       2   46[COMRAM] unsigned int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;		None               void
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        9 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    2
  1699 ;; This function calls:
  1700 ;;		_SetDCPWM1
  1701 ;;		___ftmul
  1702 ;;		___fttol
  1703 ;;		___lbtoft
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;;		_mcu_init
  1707 ;;		_go_back
  1708 ;;		_right
  1709 ;;		_left
  1710 ;;		_go_straight
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text11
  1715  0067E8                     __ptext11:
  1716                           	opt stack 0
  1717  0067E8                     _PWM_DutyCycle1:
  1718                           	opt stack 27
  1719                           
  1720                           ;incstack = 0
  1721                           ;PWM_DutyCycle1@percentageDuty stored from wreg
  1722  0067E8  6E31               	movwf	PWM_DutyCycle1@percentageDuty,c
  1723                           
  1724                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  1725  0067EA  0E00               	movlw	0
  1726  0067EC  6E33               	movwf	PWM_DutyCycle1@DC+1,c
  1727  0067EE  0E00               	movlw	0
  1728  0067F0  6E32               	movwf	PWM_DutyCycle1@DC,c
  1729  0067F2  0E00               	movlw	0
  1730  0067F4  6E30               	movwf	PWM_DutyCycle1@DutyCycle+1,c
  1731  0067F6  0E00               	movlw	0
  1732  0067F8  6E2F               	movwf	PWM_DutyCycle1@DutyCycle,c
  1733                           
  1734                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  1735  0067FA  0EAE               	movlw	174
  1736  0067FC  6E10               	movwf	___ftmul@f2,c
  1737  0067FE  0E23               	movlw	35
  1738  006800  6E11               	movwf	___ftmul@f2+1,c
  1739  006802  0E41               	movlw	65
  1740  006804  6E12               	movwf	___ftmul@f2+2,c
  1741  006806  5031               	movf	PWM_DutyCycle1@percentageDuty,w,c
  1742  006808  EC2C  F033         	call	___lbtoft
  1743  00680C  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1744  006810  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1745  006814  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1746  006818  ECDF  F036         	call	___ftmul	;wreg free
  1747  00681C  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1748  006820  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1749  006824  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1750  006828  EC0A  F036         	call	___fttol	;wreg free
  1751  00682C  C01C  F02B         	movff	?___fttol,??_PWM_DutyCycle1
  1752  006830  C01D  F02C         	movff	?___fttol+1,??_PWM_DutyCycle1+1
  1753  006834  C01E  F02D         	movff	?___fttol+2,??_PWM_DutyCycle1+2
  1754  006838  C01F  F02E         	movff	?___fttol+3,??_PWM_DutyCycle1+3
  1755  00683C  C02B  F032         	movff	??_PWM_DutyCycle1,PWM_DutyCycle1@DC
  1756  006840  C02C  F033         	movff	??_PWM_DutyCycle1+1,PWM_DutyCycle1@DC+1
  1757                           
  1758                           ;pwm.c: 38: SetDCPWM1(DC);
  1759  006844  C032  F001         	movff	PWM_DutyCycle1@DC,SetDCPWM1@dutycycle
  1760  006848  C033  F002         	movff	PWM_DutyCycle1@DC+1,SetDCPWM1@dutycycle+1
  1761  00684C  EC79  F033         	call	_SetDCPWM1	;wreg free
  1762                           
  1763                           ;pwm.c: 39: return;
  1764  006850  0012               	return	
  1765  006852                     __end_of_PWM_DutyCycle1:
  1766                           	opt stack 0
  1767                           tblptru	equ	0xFF8
  1768                           tblptrh	equ	0xFF7
  1769                           tblptrl	equ	0xFF6
  1770                           tablat	equ	0xFF5
  1771                           wreg	equ	0xFE8
  1772                           status	equ	0xFD8
  1773                           
  1774 ;; *************** function ___lbtoft *****************
  1775 ;; Defined at:
  1776 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  c               1    wreg     unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  c               1   11[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  3    8[COMRAM] float 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1790 ;;      Params:         3       0       0       0       0       0       0       0       0
  1791 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1793 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1794 ;;Total ram usage:        4 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    1
  1797 ;; This function calls:
  1798 ;;		___ftpack
  1799 ;; This function is called by:
  1800 ;;		_PWM_DutyCycle1
  1801 ;;		_PWM_DutyCycle2
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text12
  1806  006658                     __ptext12:
  1807                           	opt stack 0
  1808  006658                     ___lbtoft:
  1809                           	opt stack 27
  1810                           
  1811                           ;incstack = 0
  1812                           ;___lbtoft@c stored from wreg
  1813  006658  6E0C               	movwf	___lbtoft@c,c
  1814  00665A  500C               	movf	___lbtoft@c,w,c
  1815  00665C  6E01               	movwf	___ftpack@arg,c
  1816  00665E  6A02               	clrf	___ftpack@arg+1,c
  1817  006660  6A03               	clrf	___ftpack@arg+2,c
  1818  006662  0E8E               	movlw	142
  1819  006664  6E04               	movwf	___ftpack@exp,c
  1820  006666  0E00               	movlw	0
  1821  006668  6E05               	movwf	___ftpack@sign,c
  1822  00666A  ECF5  F034         	call	___ftpack	;wreg free
  1823  00666E  C001  F009         	movff	?___ftpack,?___lbtoft
  1824  006672  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1825  006676  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1826  00667A  0012               	return	
  1827  00667C                     __end_of___lbtoft:
  1828                           	opt stack 0
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           wreg	equ	0xFE8
  1834                           status	equ	0xFD8
  1835                           
  1836 ;; *************** function ___fttol *****************
  1837 ;; Defined at:
  1838 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  f1              3   27[COMRAM] float 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  lval            4   37[COMRAM] unsigned long 
  1843 ;;  exp1            1   41[COMRAM] unsigned char 
  1844 ;;  sign1           1   36[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  4   27[COMRAM] long 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1854 ;;      Params:         4       0       0       0       0       0       0       0       0
  1855 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1856 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1857 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1858 ;;Total ram usage:       15 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;;		_PWM_DutyCycle1
  1865 ;;		_PWM_DutyCycle2
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text13
  1870  006C14                     __ptext13:
  1871                           	opt stack 0
  1872  006C14                     ___fttol:
  1873                           	opt stack 28
  1874                           
  1875                           ;incstack = 0
  1876  006C14  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1877  006C18  6A21               	clrf	(??___fttol+1)& (0+255),c
  1878  006C1A  6A22               	clrf	(??___fttol+2)& (0+255),c
  1879  006C1C  341D               	rlcf	___fttol@f1+1,w,c
  1880  006C1E  3620               	rlcf	??___fttol& (0+255),f,c
  1881  006C20  E301               	bnc	u2051
  1882  006C22  8021               	bsf	(??___fttol+1)& (0+255),0,c
  1883  006C24                     u2051:
  1884  006C24  5020               	movf	??___fttol,w,c
  1885  006C26  6E2A               	movwf	___fttol@exp1,c
  1886  006C28  662A               	tstfsz	___fttol@exp1& (0+255),c
  1887  006C2A  D001               	goto	l2147
  1888  006C2C  D038               	goto	u2100
  1889  006C2E                     l2147:
  1890  006C2E  0E17               	movlw	23
  1891  006C30  6E20               	movwf	??___fttol& (0+255),c
  1892  006C32  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1893  006C36  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1894  006C3A  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1895  006C3E  2820               	incf	??___fttol,w,c
  1896  006C40  6E24               	movwf	(??___fttol+4)& (0+255),c
  1897  006C42  D004               	goto	u2070
  1898  006C44                     u2075:
  1899  006C44  90D8               	bcf	status,0,c
  1900  006C46  3223               	rrcf	??___fttol+3,f,c
  1901  006C48  3222               	rrcf	??___fttol+2,f,c
  1902  006C4A  3221               	rrcf	??___fttol+1,f,c
  1903  006C4C                     u2070:
  1904  006C4C  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  1905  006C4E  D7FA               	goto	u2075
  1906  006C50  5021               	movf	??___fttol+1,w,c
  1907  006C52  6E25               	movwf	___fttol@sign1,c
  1908  006C54  8E1D               	bsf	___fttol@f1+1,7,c
  1909  006C56  0EFF               	movlw	255
  1910  006C58  161C               	andwf	___fttol@f1,f,c
  1911  006C5A  0EFF               	movlw	255
  1912  006C5C  161D               	andwf	___fttol@f1+1,f,c
  1913  006C5E  0E00               	movlw	0
  1914  006C60  161E               	andwf	___fttol@f1+2,f,c
  1915  006C62  501C               	movf	___fttol@f1,w,c
  1916  006C64  6E26               	movwf	___fttol@lval,c
  1917  006C66  501D               	movf	___fttol@f1+1,w,c
  1918  006C68  6E27               	movwf	___fttol@lval+1,c
  1919  006C6A  501E               	movf	___fttol@f1+2,w,c
  1920  006C6C  6E28               	movwf	___fttol@lval+2,c
  1921  006C6E  6A29               	clrf	___fttol@lval+3,c
  1922  006C70  0E8E               	movlw	142
  1923  006C72  5E2A               	subwf	___fttol@exp1,f,c
  1924  006C74  AE2A               	btfss	___fttol@exp1,7,c
  1925  006C76  D010               	goto	l2169
  1926  006C78  502A               	movf	___fttol@exp1,w,c
  1927  006C7A  0A80               	xorlw	128
  1928  006C7C  6E20               	movwf	??___fttol& (0+255),c
  1929  006C7E  0EF1               	movlw	241
  1930  006C80  0A80               	xorlw	128
  1931  006C82  5C20               	subwf	??___fttol,w,c
  1932  006C84  A0D8               	btfss	status,0,c
  1933  006C86  D00B               	goto	u2100
  1934  006C88                     l2165:
  1935  006C88  90D8               	bcf	status,0,c
  1936  006C8A  3229               	rrcf	___fttol@lval+3,f,c
  1937  006C8C  3228               	rrcf	___fttol@lval+2,f,c
  1938  006C8E  3227               	rrcf	___fttol@lval+1,f,c
  1939  006C90  3226               	rrcf	___fttol@lval,f,c
  1940  006C92  3E2A               	incfsz	___fttol@exp1,f,c
  1941  006C94  D7F9               	goto	l2165
  1942  006C96  D014               	goto	l2179
  1943  006C98                     l2169:
  1944  006C98  0E17               	movlw	23
  1945  006C9A  642A               	cpfsgt	___fttol@exp1,c
  1946  006C9C  D00F               	goto	l2177
  1947  006C9E                     u2100:
  1948  006C9E  0E00               	movlw	0
  1949  006CA0  6E1C               	movwf	?___fttol,c
  1950  006CA2  0E00               	movlw	0
  1951  006CA4  6E1D               	movwf	?___fttol+1,c
  1952  006CA6  0E00               	movlw	0
  1953  006CA8  6E1E               	movwf	?___fttol+2,c
  1954  006CAA  0E00               	movlw	0
  1955  006CAC  6E1F               	movwf	?___fttol+3,c
  1956  006CAE  D01B               	goto	l714
  1957  006CB0                     l2175:
  1958  006CB0  90D8               	bcf	status,0,c
  1959  006CB2  3626               	rlcf	___fttol@lval,f,c
  1960  006CB4  3627               	rlcf	___fttol@lval+1,f,c
  1961  006CB6  3628               	rlcf	___fttol@lval+2,f,c
  1962  006CB8  3629               	rlcf	___fttol@lval+3,f,c
  1963  006CBA  062A               	decf	___fttol@exp1,f,c
  1964  006CBC                     l2177:
  1965  006CBC  662A               	tstfsz	___fttol@exp1,c
  1966  006CBE  D7F8               	goto	l2175
  1967  006CC0                     l2179:
  1968  006CC0  5025               	movf	___fttol@sign1,w,c
  1969  006CC2  B4D8               	btfsc	status,2,c
  1970  006CC4  D008               	goto	l2183
  1971  006CC6  1E29               	comf	___fttol@lval+3,f,c
  1972  006CC8  1E28               	comf	___fttol@lval+2,f,c
  1973  006CCA  1E27               	comf	___fttol@lval+1,f,c
  1974  006CCC  6C26               	negf	___fttol@lval,c
  1975  006CCE  0E00               	movlw	0
  1976  006CD0  2227               	addwfc	___fttol@lval+1,f,c
  1977  006CD2  2228               	addwfc	___fttol@lval+2,f,c
  1978  006CD4  2229               	addwfc	___fttol@lval+3,f,c
  1979  006CD6                     l2183:
  1980  006CD6  C026  F01C         	movff	___fttol@lval,?___fttol
  1981  006CDA  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1982  006CDE  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1983  006CE2  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1984  006CE6                     l714:
  1985  006CE6  0012               	return	
  1986  006CE8                     __end_of___fttol:
  1987                           	opt stack 0
  1988                           tblptru	equ	0xFF8
  1989                           tblptrh	equ	0xFF7
  1990                           tblptrl	equ	0xFF6
  1991                           tablat	equ	0xFF5
  1992                           wreg	equ	0xFE8
  1993                           status	equ	0xFD8
  1994                           
  1995 ;; *************** function _SetDCPWM1 *****************
  1996 ;; Defined at:
  1997 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  dutycycle       2    0[COMRAM] unsigned int 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  DCycle          2    4[COMRAM] struct PWMDC
  2002 ;; Return value:  Size  Location     Type
  2003 ;;		None               void
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2011 ;;      Params:         2       0       0       0       0       0       0       0       0
  2012 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2013 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2014 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2015 ;;Total ram usage:        6 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_PWM_DutyCycle1
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text14
  2025  0066F2                     __ptext14:
  2026                           	opt stack 0
  2027  0066F2                     _SetDCPWM1:
  2028                           	opt stack 28
  2029                           
  2030                           ;incstack = 0
  2031  0066F2  C001  F003         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  2032  0066F6  C002  F004         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  2033  0066FA  0E06               	movlw	6
  2034  0066FC                     u1945:
  2035  0066FC  90D8               	bcf	status,0,c
  2036  0066FE  3603               	rlcf	??_SetDCPWM1,f,c
  2037  006700  3604               	rlcf	??_SetDCPWM1+1,f,c
  2038  006702  2EE8               	decfsz	wreg,f,c
  2039  006704  D7FB               	goto	u1945
  2040  006706  C003  F005         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  2041  00670A  C004  F006         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  2042  00670E  C006  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  2043  006712  C005  F003         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  2044  006716  90D8               	bcf	status,0,c
  2045  006718  3203               	rrcf	??_SetDCPWM1,f,c
  2046  00671A  90D8               	bcf	status,0,c
  2047  00671C  3203               	rrcf	??_SetDCPWM1,f,c
  2048  00671E  0E30               	movlw	48
  2049  006720  1603               	andwf	??_SetDCPWM1,f,c
  2050  006722  50BD               	movf	4029,w,c	;volatile
  2051  006724  0BCF               	andlw	207
  2052  006726  1003               	iorwf	??_SetDCPWM1,w,c
  2053  006728  6EBD               	movwf	4029,c	;volatile
  2054  00672A  0012               	return	
  2055  00672C                     __end_of_SetDCPWM1:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           wreg	equ	0xFE8
  2062                           status	equ	0xFD8
  2063                           
  2064 ;; *************** function _getCNY70Value *****************
  2065 ;; Defined at:
  2066 ;;		line 4 in file "cny70.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  2    0[COMRAM] int 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2080 ;;      Params:         2       0       0       0       0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2083 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2084 ;;Total ram usage:        2 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text15
  2094  006A92                     __ptext15:
  2095                           	opt stack 0
  2096  006A92                     _getCNY70Value:
  2097                           	opt stack 30
  2098                           
  2099                           ;cny70.c: 24: if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && PORTB
      +                          bits.RB4 == 1 && PORTBbits.RB1 == 1){
  2100                           
  2101                           ;incstack = 0
  2102  006A92  B481               	btfsc	3969,2,c	;volatile
  2103  006A94  A681               	btfss	3969,3,c	;volatile
  2104  006A96  D005               	goto	l206
  2105  006A98  A081               	btfss	3969,0,c	;volatile
  2106  006A9A  A881               	btfss	3969,4,c	;volatile
  2107  006A9C  D002               	goto	l206
  2108  006A9E  B281               	btfsc	3969,1,c	;volatile
  2109  006AA0  D04F               	goto	l2535
  2110  006AA2                     l206:
  2111                           
  2112                           ;cny70.c: 29: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2113  006AA2  B481               	btfsc	3969,2,c	;volatile
  2114  006AA4  B681               	btfsc	3969,3,c	;volatile
  2115  006AA6  D005               	goto	l209
  2116  006AA8  B081               	btfsc	3969,0,c	;volatile
  2117  006AAA  A881               	btfss	3969,4,c	;volatile
  2118  006AAC  D002               	goto	l209
  2119  006AAE  B281               	btfsc	3969,1,c	;volatile
  2120  006AB0  D038               	goto	u2780
  2121  006AB2                     l209:
  2122                           
  2123                           ;cny70.c: 34: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2124  006AB2  A481               	btfss	3969,2,c	;volatile
  2125  006AB4  A681               	btfss	3969,3,c	;volatile
  2126  006AB6  D009               	goto	l211
  2127  006AB8  B081               	btfsc	3969,0,c	;volatile
  2128  006ABA  A881               	btfss	3969,4,c	;volatile
  2129  006ABC  D006               	goto	l211
  2130  006ABE  A281               	btfss	3969,1,c	;volatile
  2131  006AC0  D004               	goto	l211
  2132  006AC2                     
  2133                           ;cny70.c: 36: return -2;
  2134  006AC2  0EFF               	movlw	255
  2135  006AC4  6E02               	movwf	?_getCNY70Value+1,c
  2136  006AC6  0EFE               	movlw	254
  2137  006AC8  D03E               	goto	L4
  2138  006ACA                     l211:
  2139                           
  2140                           ;cny70.c: 39: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  2141  006ACA  B481               	btfsc	3969,2,c	;volatile
  2142  006ACC  A681               	btfss	3969,3,c	;volatile
  2143  006ACE  D005               	goto	l213
  2144  006AD0  B081               	btfsc	3969,0,c	;volatile
  2145  006AD2  B881               	btfsc	3969,4,c	;volatile
  2146  006AD4  D002               	goto	l213
  2147  006AD6  B281               	btfsc	3969,1,c	;volatile
  2148  006AD8  D02F               	goto	u2830
  2149  006ADA                     l213:
  2150                           
  2151                           ;cny70.c: 44: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 0){
  2152  006ADA  B481               	btfsc	3969,2,c	;volatile
  2153  006ADC  A681               	btfss	3969,3,c	;volatile
  2154  006ADE  D005               	goto	l215
  2155  006AE0  B081               	btfsc	3969,0,c	;volatile
  2156  006AE2  A881               	btfss	3969,4,c	;volatile
  2157  006AE4  D002               	goto	l215
  2158  006AE6  A281               	btfss	3969,1,c	;volatile
  2159  006AE8  D008               	goto	u2680
  2160  006AEA                     l215:
  2161                           
  2162                           ;cny70.c: 50: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 0){
  2163  006AEA  B481               	btfsc	3969,2,c	;volatile
  2164  006AEC  A681               	btfss	3969,3,c	;volatile
  2165  006AEE  D009               	goto	l217
  2166  006AF0  B081               	btfsc	3969,0,c	;volatile
  2167  006AF2  B881               	btfsc	3969,4,c	;volatile
  2168  006AF4  D006               	goto	l217
  2169  006AF6  B281               	btfsc	3969,1,c	;volatile
  2170  006AF8  D004               	goto	l217
  2171  006AFA                     u2680:
  2172                           
  2173                           ;cny70.c: 52: return 2;
  2174  006AFA  0E00               	movlw	0
  2175  006AFC  6E02               	movwf	?_getCNY70Value+1,c
  2176  006AFE  0E02               	movlw	2
  2177  006B00  D022               	goto	L4
  2178  006B02                     l217:
  2179                           
  2180                           ;cny70.c: 55: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2181  006B02  A481               	btfss	3969,2,c	;volatile
  2182  006B04  B681               	btfsc	3969,3,c	;volatile
  2183  006B06  D005               	goto	l219
  2184  006B08  B081               	btfsc	3969,0,c	;volatile
  2185  006B0A  A881               	btfss	3969,4,c	;volatile
  2186  006B0C  D002               	goto	l219
  2187  006B0E  B281               	btfsc	3969,1,c	;volatile
  2188  006B10  D7D8               	goto	L5
  2189  006B12                     l219:
  2190                           
  2191                           ;cny70.c: 60: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2192  006B12  B481               	btfsc	3969,2,c	;volatile
  2193  006B14  B681               	btfsc	3969,3,c	;volatile
  2194  006B16  D008               	goto	l221
  2195  006B18  A081               	btfss	3969,0,c	;volatile
  2196  006B1A  A881               	btfss	3969,4,c	;volatile
  2197  006B1C  D005               	goto	l221
  2198  006B1E  A281               	btfss	3969,1,c	;volatile
  2199  006B20  D003               	goto	l221
  2200  006B22                     u2780:
  2201                           
  2202                           ;cny70.c: 62: return -1;
  2203  006B22  6801               	setf	?_getCNY70Value,c
  2204  006B24  6802               	setf	?_getCNY70Value+1,c
  2205  006B26  D010               	goto	l207
  2206  006B28                     l221:
  2207                           
  2208                           ;cny70.c: 65: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  2209  006B28  B481               	btfsc	3969,2,c	;volatile
  2210  006B2A  A681               	btfss	3969,3,c	;volatile
  2211  006B2C  D009               	goto	l2535
  2212  006B2E  A081               	btfss	3969,0,c	;volatile
  2213  006B30  B881               	btfsc	3969,4,c	;volatile
  2214  006B32  D006               	goto	l2535
  2215  006B34  A281               	btfss	3969,1,c	;volatile
  2216  006B36  D004               	goto	l2535
  2217  006B38                     u2830:
  2218                           
  2219                           ;cny70.c: 67: return 1;
  2220  006B38  0E00               	movlw	0
  2221  006B3A  6E02               	movwf	?_getCNY70Value+1,c
  2222  006B3C  0E01               	movlw	1
  2223  006B3E  D003               	goto	L4
  2224  006B40                     l2535:
  2225                           
  2226                           ;cny70.c: 75: else
  2227                           ;cny70.c: 76: return 0;
  2228  006B40  0E00               	movlw	0
  2229  006B42  6E02               	movwf	?_getCNY70Value+1,c
  2230  006B44  0E00               	movlw	0
  2231  006B46                     L4:
  2232  006B46  6E01               	movwf	?_getCNY70Value,c
  2233  006B48                     l207:
  2234  006B48  0012               	return	
  2235  006B4A                     __end_of_getCNY70Value:
  2236                           	opt stack 0
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           wreg	equ	0xFE8
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _fuzzy_system_single2 *****************
  2245 ;; Defined at:
  2246 ;;		line 234 in file "fuzzy.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  input           3   82[COMRAM] int 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  y             120  120[BANK6 ] [40]
  2251 ;;  x             120    0[BANK6 ] [40]
  2252 ;;  overall_out_  120  120[BANK5 ] [40]
  2253 ;;  qualified_co  120  120[BANK4 ] [40]
  2254 ;;  qualified_co  120  120[BANK3 ] [40]
  2255 ;;  cons_mf3      120    0[BANK5 ] [40]
  2256 ;;  qualified_co  120    0[BANK4 ] [40]
  2257 ;;  cons_mf1      120    0[BANK3 ] [40]
  2258 ;;  ante_mf3      120  120[BANK2 ] [40]
  2259 ;;  cons_mf2      120    0[BANK2 ] [40]
  2260 ;;  ante_mf2      120  120[BANK1 ] [40]
  2261 ;;  ante_mf1      120    0[BANK1 ] [40]
  2262 ;;  output          3  122[BANK0 ] [40]
  2263 ;;  w3              3   91[COMRAM] [40]
  2264 ;;  w2              3   88[COMRAM] [40]
  2265 ;;  w1              3   85[COMRAM] [40]
  2266 ;;  i               2    0        int 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  3   82[COMRAM] int 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2276 ;;      Params:         3       0       0       0       0       0       0       0       0
  2277 ;;      Locals:         9       3     240     240     240     240     240     240       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2279 ;;      Totals:        12       3     240     240     240     240     240     240       0
  2280 ;;Total ram usage:     1455 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    4
  2283 ;; This function calls:
  2284 ;;		_defuzzy
  2285 ;;		_linspace
  2286 ;;		_out_mf
  2287 ;;		_qualified
  2288 ;;		_tri_mf
  2289 ;;		_triangular
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text16
  2296  007C7E                     __ptext16:
  2297                           	opt stack 0
  2298  007C7E                     _fuzzy_system_single2:
  2299                           	opt stack 26
  2300                           
  2301                           ;fuzzy.c: 236: double ante_mf1[40],cons_mf1[40];
  2302                           ;fuzzy.c: 237: double ante_mf2[40],cons_mf2[40];
  2303                           ;fuzzy.c: 238: double ante_mf3[40],cons_mf3[40];
  2304                           ;fuzzy.c: 239: double x[40],y[40];
  2305                           ;fuzzy.c: 240: double qualified_cons_mf1[40],qualified_cons_mf2[40],qualified_cons_mf3[4
      +                          0];
  2306                           ;fuzzy.c: 241: double overall_out_mf[40];
  2307                           ;fuzzy.c: 242: double w1,w2,w3;
  2308                           ;fuzzy.c: 243: double output;
  2309                           ;fuzzy.c: 244: int i;
  2310                           ;fuzzy.c: 245: linspace(x,-2,2,40);
  2311                           
  2312                           ;incstack = 0
  2313  007C7E  0106               	movlb	6	; () banked
  2314  007C80  0E06               	movlw	high fuzzy_system_single2@x
  2315  007C82  6E38               	movwf	linspace@x+1,c
  2316  007C84  0106               	movlb	6	; () banked
  2317  007C86  0E00               	movlw	low fuzzy_system_single2@x
  2318  007C88  6E37               	movwf	linspace@x,c
  2319  007C8A  0E00               	movlw	0
  2320  007C8C  6E39               	movwf	linspace@start,c
  2321  007C8E  0E00               	movlw	0
  2322  007C90  6E3A               	movwf	linspace@start+1,c
  2323  007C92  0EC0               	movlw	192
  2324  007C94  6E3B               	movwf	linspace@start+2,c
  2325  007C96  0E00               	movlw	0
  2326  007C98  6E3C               	movwf	linspace@end,c
  2327  007C9A  0E00               	movlw	0
  2328  007C9C  6E3D               	movwf	linspace@end+1,c
  2329  007C9E  0E40               	movlw	64
  2330  007CA0  6E3E               	movwf	linspace@end+2,c
  2331  007CA2  0E00               	movlw	0
  2332  007CA4  6E40               	movwf	linspace@size+1,c
  2333  007CA6  0E28               	movlw	40
  2334  007CA8  6E3F               	movwf	linspace@size,c
  2335  007CAA  ECC5  F037         	call	_linspace	;wreg free
  2336                           
  2337                           ;fuzzy.c: 246: linspace(y,0,100,40);
  2338  007CAE  0106               	movlb	6	; () banked
  2339  007CB0  0E06               	movlw	high fuzzy_system_single2@y
  2340  007CB2  6E38               	movwf	linspace@x+1,c
  2341  007CB4  0106               	movlb	6	; () banked
  2342  007CB6  0E78               	movlw	low fuzzy_system_single2@y
  2343  007CB8  6E37               	movwf	linspace@x,c
  2344  007CBA  0E00               	movlw	0
  2345  007CBC  6E39               	movwf	linspace@start,c
  2346  007CBE  0E00               	movlw	0
  2347  007CC0  6E3A               	movwf	linspace@start+1,c
  2348  007CC2  0E00               	movlw	0
  2349  007CC4  6E3B               	movwf	linspace@start+2,c
  2350  007CC6  0E00               	movlw	0
  2351  007CC8  6E3C               	movwf	linspace@end,c
  2352  007CCA  0EC8               	movlw	200
  2353  007CCC  6E3D               	movwf	linspace@end+1,c
  2354  007CCE  0E42               	movlw	66
  2355  007CD0  6E3E               	movwf	linspace@end+2,c
  2356  007CD2  0E00               	movlw	0
  2357  007CD4  6E40               	movwf	linspace@size+1,c
  2358  007CD6  0E28               	movlw	40
  2359  007CD8  6E3F               	movwf	linspace@size,c
  2360  007CDA  ECC5  F037         	call	_linspace	;wreg free
  2361                           
  2362                           ;fuzzy.c: 249: tri_mf(ante_mf1,x,-3.6, -2, -0.4);
  2363  007CDE  0101               	movlb	1	; () banked
  2364  007CE0  0E01               	movlw	high fuzzy_system_single2@ante_mf1
  2365  007CE2  6E47               	movwf	tri_mf@t_value+1,c
  2366  007CE4  0101               	movlb	1	; () banked
  2367  007CE6  0E00               	movlw	low fuzzy_system_single2@ante_mf1
  2368  007CE8  6E46               	movwf	tri_mf@t_value,c
  2369  007CEA  0106               	movlb	6	; () banked
  2370  007CEC  0E06               	movlw	high fuzzy_system_single2@x
  2371  007CEE  6E49               	movwf	tri_mf@x+1,c
  2372  007CF0  0106               	movlb	6	; () banked
  2373  007CF2  0E00               	movlw	low fuzzy_system_single2@x
  2374  007CF4  6E48               	movwf	tri_mf@x,c
  2375  007CF6  0E66               	movlw	102
  2376  007CF8  6E4A               	movwf	tri_mf@a,c
  2377  007CFA  0E66               	movlw	102
  2378  007CFC  6E4B               	movwf	tri_mf@a+1,c
  2379  007CFE  0EC0               	movlw	192
  2380  007D00  6E4C               	movwf	tri_mf@a+2,c
  2381  007D02  0E00               	movlw	0
  2382  007D04  6E4D               	movwf	tri_mf@b,c
  2383  007D06  0E00               	movlw	0
  2384  007D08  6E4E               	movwf	tri_mf@b+1,c
  2385  007D0A  0EC0               	movlw	192
  2386  007D0C  6E4F               	movwf	tri_mf@b+2,c
  2387  007D0E  0ECD               	movlw	205
  2388  007D10  6E50               	movwf	tri_mf@c,c
  2389  007D12  0ECC               	movlw	204
  2390  007D14  6E51               	movwf	tri_mf@c+1,c
  2391  007D16  0EBE               	movlw	190
  2392  007D18  6E52               	movwf	tri_mf@c+2,c
  2393  007D1A  EC46  F038         	call	_tri_mf	;wreg free
  2394                           
  2395                           ;fuzzy.c: 250: tri_mf(ante_mf2,x,-1.6, 0, 1.6);
  2396  007D1E  0101               	movlb	1	; () banked
  2397  007D20  0E01               	movlw	high fuzzy_system_single2@ante_mf2
  2398  007D22  6E47               	movwf	tri_mf@t_value+1,c
  2399  007D24  0101               	movlb	1	; () banked
  2400  007D26  0E78               	movlw	low fuzzy_system_single2@ante_mf2
  2401  007D28  6E46               	movwf	tri_mf@t_value,c
  2402  007D2A  0106               	movlb	6	; () banked
  2403  007D2C  0E06               	movlw	high fuzzy_system_single2@x
  2404  007D2E  6E49               	movwf	tri_mf@x+1,c
  2405  007D30  0106               	movlb	6	; () banked
  2406  007D32  0E00               	movlw	low fuzzy_system_single2@x
  2407  007D34  6E48               	movwf	tri_mf@x,c
  2408  007D36  0ECD               	movlw	205
  2409  007D38  6E4A               	movwf	tri_mf@a,c
  2410  007D3A  0ECC               	movlw	204
  2411  007D3C  6E4B               	movwf	tri_mf@a+1,c
  2412  007D3E  0EBF               	movlw	191
  2413  007D40  6E4C               	movwf	tri_mf@a+2,c
  2414  007D42  0E00               	movlw	0
  2415  007D44  6E4D               	movwf	tri_mf@b,c
  2416  007D46  0E00               	movlw	0
  2417  007D48  6E4E               	movwf	tri_mf@b+1,c
  2418  007D4A  0E00               	movlw	0
  2419  007D4C  6E4F               	movwf	tri_mf@b+2,c
  2420  007D4E  0ECD               	movlw	205
  2421  007D50  6E50               	movwf	tri_mf@c,c
  2422  007D52  0ECC               	movlw	204
  2423  007D54  6E51               	movwf	tri_mf@c+1,c
  2424  007D56  0E3F               	movlw	63
  2425  007D58  6E52               	movwf	tri_mf@c+2,c
  2426  007D5A  EC46  F038         	call	_tri_mf	;wreg free
  2427                           
  2428                           ;fuzzy.c: 251: tri_mf(ante_mf3,x,0.4, 2, 3.6);
  2429  007D5E  0102               	movlb	2	; () banked
  2430  007D60  0E02               	movlw	high fuzzy_system_single2@ante_mf3
  2431  007D62  6E47               	movwf	tri_mf@t_value+1,c
  2432  007D64  0102               	movlb	2	; () banked
  2433  007D66  0E78               	movlw	low fuzzy_system_single2@ante_mf3
  2434  007D68  6E46               	movwf	tri_mf@t_value,c
  2435  007D6A  0106               	movlb	6	; () banked
  2436  007D6C  0E06               	movlw	high fuzzy_system_single2@x
  2437  007D6E  6E49               	movwf	tri_mf@x+1,c
  2438  007D70  0106               	movlb	6	; () banked
  2439  007D72  0E00               	movlw	low fuzzy_system_single2@x
  2440  007D74  6E48               	movwf	tri_mf@x,c
  2441  007D76  0ECD               	movlw	205
  2442  007D78  6E4A               	movwf	tri_mf@a,c
  2443  007D7A  0ECC               	movlw	204
  2444  007D7C  6E4B               	movwf	tri_mf@a+1,c
  2445  007D7E  0E3E               	movlw	62
  2446  007D80  6E4C               	movwf	tri_mf@a+2,c
  2447  007D82  0E00               	movlw	0
  2448  007D84  6E4D               	movwf	tri_mf@b,c
  2449  007D86  0E00               	movlw	0
  2450  007D88  6E4E               	movwf	tri_mf@b+1,c
  2451  007D8A  0E40               	movlw	64
  2452  007D8C  6E4F               	movwf	tri_mf@b+2,c
  2453  007D8E  0E66               	movlw	102
  2454  007D90  6E50               	movwf	tri_mf@c,c
  2455  007D92  0E66               	movlw	102
  2456  007D94  6E51               	movwf	tri_mf@c+1,c
  2457  007D96  0E40               	movlw	64
  2458  007D98  6E52               	movwf	tri_mf@c+2,c
  2459  007D9A  EC46  F038         	call	_tri_mf	;wreg free
  2460                           
  2461                           ;fuzzy.c: 254: tri_mf(cons_mf1,y,-40, 0, 40);
  2462  007D9E  0103               	movlb	3	; () banked
  2463  007DA0  0E03               	movlw	high fuzzy_system_single2@cons_mf1
  2464  007DA2  6E47               	movwf	tri_mf@t_value+1,c
  2465  007DA4  0103               	movlb	3	; () banked
  2466  007DA6  0E00               	movlw	low fuzzy_system_single2@cons_mf1
  2467  007DA8  6E46               	movwf	tri_mf@t_value,c
  2468  007DAA  0106               	movlb	6	; () banked
  2469  007DAC  0E06               	movlw	high fuzzy_system_single2@y
  2470  007DAE  6E49               	movwf	tri_mf@x+1,c
  2471  007DB0  0106               	movlb	6	; () banked
  2472  007DB2  0E78               	movlw	low fuzzy_system_single2@y
  2473  007DB4  6E48               	movwf	tri_mf@x,c
  2474  007DB6  0E00               	movlw	0
  2475  007DB8  6E4A               	movwf	tri_mf@a,c
  2476  007DBA  0E20               	movlw	32
  2477  007DBC  6E4B               	movwf	tri_mf@a+1,c
  2478  007DBE  0EC2               	movlw	194
  2479  007DC0  6E4C               	movwf	tri_mf@a+2,c
  2480  007DC2  0E00               	movlw	0
  2481  007DC4  6E4D               	movwf	tri_mf@b,c
  2482  007DC6  0E00               	movlw	0
  2483  007DC8  6E4E               	movwf	tri_mf@b+1,c
  2484  007DCA  0E00               	movlw	0
  2485  007DCC  6E4F               	movwf	tri_mf@b+2,c
  2486  007DCE  0E00               	movlw	0
  2487  007DD0  6E50               	movwf	tri_mf@c,c
  2488  007DD2  0E20               	movlw	32
  2489  007DD4  6E51               	movwf	tri_mf@c+1,c
  2490  007DD6  0E42               	movlw	66
  2491  007DD8  6E52               	movwf	tri_mf@c+2,c
  2492  007DDA  EC46  F038         	call	_tri_mf	;wreg free
  2493                           
  2494                           ;fuzzy.c: 255: tri_mf(cons_mf2,y,10, 50, 90);
  2495  007DDE  0102               	movlb	2	; () banked
  2496  007DE0  0E02               	movlw	high fuzzy_system_single2@cons_mf2
  2497  007DE2  6E47               	movwf	tri_mf@t_value+1,c
  2498  007DE4  0102               	movlb	2	; () banked
  2499  007DE6  0E00               	movlw	low fuzzy_system_single2@cons_mf2
  2500  007DE8  6E46               	movwf	tri_mf@t_value,c
  2501  007DEA  0106               	movlb	6	; () banked
  2502  007DEC  0E06               	movlw	high fuzzy_system_single2@y
  2503  007DEE  6E49               	movwf	tri_mf@x+1,c
  2504  007DF0  0106               	movlb	6	; () banked
  2505  007DF2  0E78               	movlw	low fuzzy_system_single2@y
  2506  007DF4  6E48               	movwf	tri_mf@x,c
  2507  007DF6  0E00               	movlw	0
  2508  007DF8  6E4A               	movwf	tri_mf@a,c
  2509  007DFA  0E20               	movlw	32
  2510  007DFC  6E4B               	movwf	tri_mf@a+1,c
  2511  007DFE  0E41               	movlw	65
  2512  007E00  6E4C               	movwf	tri_mf@a+2,c
  2513  007E02  0E00               	movlw	0
  2514  007E04  6E4D               	movwf	tri_mf@b,c
  2515  007E06  0E48               	movlw	72
  2516  007E08  6E4E               	movwf	tri_mf@b+1,c
  2517  007E0A  0E42               	movlw	66
  2518  007E0C  6E4F               	movwf	tri_mf@b+2,c
  2519  007E0E  0E00               	movlw	0
  2520  007E10  6E50               	movwf	tri_mf@c,c
  2521  007E12  0EB4               	movlw	180
  2522  007E14  6E51               	movwf	tri_mf@c+1,c
  2523  007E16  0E42               	movlw	66
  2524  007E18  6E52               	movwf	tri_mf@c+2,c
  2525  007E1A  EC46  F038         	call	_tri_mf	;wreg free
  2526                           
  2527                           ;fuzzy.c: 256: tri_mf(cons_mf3,y,60, 100, 140);
  2528  007E1E  0105               	movlb	5	; () banked
  2529  007E20  0E05               	movlw	high fuzzy_system_single2@cons_mf3
  2530  007E22  6E47               	movwf	tri_mf@t_value+1,c
  2531  007E24  0105               	movlb	5	; () banked
  2532  007E26  0E00               	movlw	low fuzzy_system_single2@cons_mf3
  2533  007E28  6E46               	movwf	tri_mf@t_value,c
  2534  007E2A  0106               	movlb	6	; () banked
  2535  007E2C  0E06               	movlw	high fuzzy_system_single2@y
  2536  007E2E  6E49               	movwf	tri_mf@x+1,c
  2537  007E30  0106               	movlb	6	; () banked
  2538  007E32  0E78               	movlw	low fuzzy_system_single2@y
  2539  007E34  6E48               	movwf	tri_mf@x,c
  2540  007E36  0E00               	movlw	0
  2541  007E38  6E4A               	movwf	tri_mf@a,c
  2542  007E3A  0E70               	movlw	112
  2543  007E3C  6E4B               	movwf	tri_mf@a+1,c
  2544  007E3E  0E42               	movlw	66
  2545  007E40  6E4C               	movwf	tri_mf@a+2,c
  2546  007E42  0E00               	movlw	0
  2547  007E44  6E4D               	movwf	tri_mf@b,c
  2548  007E46  0EC8               	movlw	200
  2549  007E48  6E4E               	movwf	tri_mf@b+1,c
  2550  007E4A  0E42               	movlw	66
  2551  007E4C  6E4F               	movwf	tri_mf@b+2,c
  2552  007E4E  0E00               	movlw	0
  2553  007E50  6E50               	movwf	tri_mf@c,c
  2554  007E52  0E0C               	movlw	12
  2555  007E54  6E51               	movwf	tri_mf@c+1,c
  2556  007E56  0E43               	movlw	67
  2557  007E58  6E52               	movwf	tri_mf@c+2,c
  2558  007E5A  EC46  F038         	call	_tri_mf	;wreg free
  2559                           
  2560                           ;fuzzy.c: 260: w1=triangular(-3.6, -2, -0.4,input);
  2561  007E5E  0E66               	movlw	102
  2562  007E60  6E37               	movwf	triangular@a,c
  2563  007E62  0E66               	movlw	102
  2564  007E64  6E38               	movwf	triangular@a+1,c
  2565  007E66  0EC0               	movlw	192
  2566  007E68  6E39               	movwf	triangular@a+2,c
  2567  007E6A  0E00               	movlw	0
  2568  007E6C  6E3A               	movwf	triangular@b,c
  2569  007E6E  0E00               	movlw	0
  2570  007E70  6E3B               	movwf	triangular@b+1,c
  2571  007E72  0EC0               	movlw	192
  2572  007E74  6E3C               	movwf	triangular@b+2,c
  2573  007E76  0ECD               	movlw	205
  2574  007E78  6E3D               	movwf	triangular@c,c
  2575  007E7A  0ECC               	movlw	204
  2576  007E7C  6E3E               	movwf	triangular@c+1,c
  2577  007E7E  0EBE               	movlw	190
  2578  007E80  6E3F               	movwf	triangular@c+2,c
  2579  007E82  C053  F040         	movff	fuzzy_system_single2@input,triangular@x
  2580  007E86  C054  F041         	movff	fuzzy_system_single2@input+1,triangular@x+1
  2581  007E8A  C055  F042         	movff	fuzzy_system_single2@input+2,triangular@x+2
  2582  007E8E  EC5E  F03A         	call	_triangular	;wreg free
  2583  007E92  C037  F056         	movff	?_triangular,fuzzy_system_single2@w1
  2584  007E96  C038  F057         	movff	?_triangular+1,fuzzy_system_single2@w1+1
  2585  007E9A  C039  F058         	movff	?_triangular+2,fuzzy_system_single2@w1+2
  2586                           
  2587                           ;fuzzy.c: 261: w2=triangular(-1.6, 0, 1.6,input);
  2588  007E9E  0ECD               	movlw	205
  2589  007EA0  6E37               	movwf	triangular@a,c
  2590  007EA2  0ECC               	movlw	204
  2591  007EA4  6E38               	movwf	triangular@a+1,c
  2592  007EA6  0EBF               	movlw	191
  2593  007EA8  6E39               	movwf	triangular@a+2,c
  2594  007EAA  0E00               	movlw	0
  2595  007EAC  6E3A               	movwf	triangular@b,c
  2596  007EAE  0E00               	movlw	0
  2597  007EB0  6E3B               	movwf	triangular@b+1,c
  2598  007EB2  0E00               	movlw	0
  2599  007EB4  6E3C               	movwf	triangular@b+2,c
  2600  007EB6  0ECD               	movlw	205
  2601  007EB8  6E3D               	movwf	triangular@c,c
  2602  007EBA  0ECC               	movlw	204
  2603  007EBC  6E3E               	movwf	triangular@c+1,c
  2604  007EBE  0E3F               	movlw	63
  2605  007EC0  6E3F               	movwf	triangular@c+2,c
  2606  007EC2  C053  F040         	movff	fuzzy_system_single2@input,triangular@x
  2607  007EC6  C054  F041         	movff	fuzzy_system_single2@input+1,triangular@x+1
  2608  007ECA  C055  F042         	movff	fuzzy_system_single2@input+2,triangular@x+2
  2609  007ECE  EC5E  F03A         	call	_triangular	;wreg free
  2610  007ED2  C037  F059         	movff	?_triangular,fuzzy_system_single2@w2
  2611  007ED6  C038  F05A         	movff	?_triangular+1,fuzzy_system_single2@w2+1
  2612  007EDA  C039  F05B         	movff	?_triangular+2,fuzzy_system_single2@w2+2
  2613                           
  2614                           ;fuzzy.c: 262: w3=triangular(0.4, 2, 3.6,input);
  2615  007EDE  0ECD               	movlw	205
  2616  007EE0  6E37               	movwf	triangular@a,c
  2617  007EE2  0ECC               	movlw	204
  2618  007EE4  6E38               	movwf	triangular@a+1,c
  2619  007EE6  0E3E               	movlw	62
  2620  007EE8  6E39               	movwf	triangular@a+2,c
  2621  007EEA  0E00               	movlw	0
  2622  007EEC  6E3A               	movwf	triangular@b,c
  2623  007EEE  0E00               	movlw	0
  2624  007EF0  6E3B               	movwf	triangular@b+1,c
  2625  007EF2  0E40               	movlw	64
  2626  007EF4  6E3C               	movwf	triangular@b+2,c
  2627  007EF6  0E66               	movlw	102
  2628  007EF8  6E3D               	movwf	triangular@c,c
  2629  007EFA  0E66               	movlw	102
  2630  007EFC  6E3E               	movwf	triangular@c+1,c
  2631  007EFE  0E40               	movlw	64
  2632  007F00  6E3F               	movwf	triangular@c+2,c
  2633  007F02  C053  F040         	movff	fuzzy_system_single2@input,triangular@x
  2634  007F06  C054  F041         	movff	fuzzy_system_single2@input+1,triangular@x+1
  2635  007F0A  C055  F042         	movff	fuzzy_system_single2@input+2,triangular@x+2
  2636  007F0E  EC5E  F03A         	call	_triangular	;wreg free
  2637  007F12  C037  F05C         	movff	?_triangular,fuzzy_system_single2@w3
  2638  007F16  C038  F05D         	movff	?_triangular+1,fuzzy_system_single2@w3+1
  2639  007F1A  C039  F05E         	movff	?_triangular+2,fuzzy_system_single2@w3+2
  2640                           
  2641                           ;fuzzy.c: 263: qualified(qualified_cons_mf1,cons_mf1,w1);
  2642  007F1E  0103               	movlb	3	; () banked
  2643  007F20  0E03               	movlw	high fuzzy_system_single2@qualified_cons_mf1
  2644  007F22  6E11               	movwf	qualified@y+1,c
  2645  007F24  0103               	movlb	3	; () banked
  2646  007F26  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf1
  2647  007F28  6E10               	movwf	qualified@y,c
  2648  007F2A  0103               	movlb	3	; () banked
  2649  007F2C  0E03               	movlw	high fuzzy_system_single2@cons_mf1
  2650  007F2E  6E13               	movwf	qualified@x+1,c
  2651  007F30  0103               	movlb	3	; () banked
  2652  007F32  0E00               	movlw	low fuzzy_system_single2@cons_mf1
  2653  007F34  6E12               	movwf	qualified@x,c
  2654  007F36  C056  F014         	movff	fuzzy_system_single2@w1,qualified@w
  2655  007F3A  C057  F015         	movff	fuzzy_system_single2@w1+1,qualified@w+1
  2656  007F3E  C058  F016         	movff	fuzzy_system_single2@w1+2,qualified@w+2
  2657  007F42  EC51  F037         	call	_qualified	;wreg free
  2658                           
  2659                           ;fuzzy.c: 264: qualified(qualified_cons_mf2,cons_mf3,w2);
  2660  007F46  0104               	movlb	4	; () banked
  2661  007F48  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf2
  2662  007F4A  6E11               	movwf	qualified@y+1,c
  2663  007F4C  0104               	movlb	4	; () banked
  2664  007F4E  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf2
  2665  007F50  6E10               	movwf	qualified@y,c
  2666  007F52  0105               	movlb	5	; () banked
  2667  007F54  0E05               	movlw	high fuzzy_system_single2@cons_mf3
  2668  007F56  6E13               	movwf	qualified@x+1,c
  2669  007F58  0105               	movlb	5	; () banked
  2670  007F5A  0E00               	movlw	low fuzzy_system_single2@cons_mf3
  2671  007F5C  6E12               	movwf	qualified@x,c
  2672  007F5E  C059  F014         	movff	fuzzy_system_single2@w2,qualified@w
  2673  007F62  C05A  F015         	movff	fuzzy_system_single2@w2+1,qualified@w+1
  2674  007F66  C05B  F016         	movff	fuzzy_system_single2@w2+2,qualified@w+2
  2675  007F6A  EC51  F037         	call	_qualified	;wreg free
  2676                           
  2677                           ;fuzzy.c: 265: qualified(qualified_cons_mf3,cons_mf3,w3);
  2678  007F6E  0104               	movlb	4	; () banked
  2679  007F70  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf3
  2680  007F72  6E11               	movwf	qualified@y+1,c
  2681  007F74  0104               	movlb	4	; () banked
  2682  007F76  0E00               	movlw	low fuzzy_system_single2@qualified_cons_mf3
  2683  007F78  6E10               	movwf	qualified@y,c
  2684  007F7A  0105               	movlb	5	; () banked
  2685  007F7C  0E05               	movlw	high fuzzy_system_single2@cons_mf3
  2686  007F7E  6E13               	movwf	qualified@x+1,c
  2687  007F80  0105               	movlb	5	; () banked
  2688  007F82  0E00               	movlw	low fuzzy_system_single2@cons_mf3
  2689  007F84  6E12               	movwf	qualified@x,c
  2690  007F86  C05C  F014         	movff	fuzzy_system_single2@w3,qualified@w
  2691  007F8A  C05D  F015         	movff	fuzzy_system_single2@w3+1,qualified@w+1
  2692  007F8E  C05E  F016         	movff	fuzzy_system_single2@w3+2,qualified@w+2
  2693  007F92  EC51  F037         	call	_qualified	;wreg free
  2694                           
  2695                           ;fuzzy.c: 266: out_mf(overall_out_mf,qualified_cons_mf1,qualified_cons_mf2,qualified_con
      +                          s_mf3);
  2696  007F96  0105               	movlb	5	; () banked
  2697  007F98  0E05               	movlw	high fuzzy_system_single2@overall_out_mf
  2698  007F9A  6E11               	movwf	out_mf@result+1,c
  2699  007F9C  0105               	movlb	5	; () banked
  2700  007F9E  0E78               	movlw	low fuzzy_system_single2@overall_out_mf
  2701  007FA0  6E10               	movwf	out_mf@result,c
  2702  007FA2  0103               	movlb	3	; () banked
  2703  007FA4  0E03               	movlw	high fuzzy_system_single2@qualified_cons_mf1
  2704  007FA6  6E13               	movwf	out_mf@x+1,c
  2705  007FA8  0103               	movlb	3	; () banked
  2706  007FAA  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf1
  2707  007FAC  6E12               	movwf	out_mf@x,c
  2708  007FAE  0104               	movlb	4	; () banked
  2709  007FB0  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf2
  2710  007FB2  6E15               	movwf	out_mf@y+1,c
  2711  007FB4  0104               	movlb	4	; () banked
  2712  007FB6  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf2
  2713  007FB8  6E14               	movwf	out_mf@y,c
  2714  007FBA  0104               	movlb	4	; () banked
  2715  007FBC  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf3
  2716  007FBE  6E17               	movwf	out_mf@z+1,c
  2717  007FC0  0104               	movlb	4	; () banked
  2718  007FC2  0E00               	movlw	low fuzzy_system_single2@qualified_cons_mf3
  2719  007FC4  6E16               	movwf	out_mf@z,c
  2720  007FC6  EC51  F03B         	call	_out_mf	;wreg free
  2721                           
  2722                           ;fuzzy.c: 267: output= defuzzy(y,overall_out_mf);
  2723  007FCA  0106               	movlb	6	; () banked
  2724  007FCC  0E06               	movlw	high fuzzy_system_single2@y
  2725  007FCE  6E38               	movwf	defuzzy@x+1,c
  2726  007FD0  0106               	movlb	6	; () banked
  2727  007FD2  0E78               	movlw	low fuzzy_system_single2@y
  2728  007FD4  6E37               	movwf	defuzzy@x,c
  2729  007FD6  0105               	movlb	5	; () banked
  2730  007FD8  0E05               	movlw	high fuzzy_system_single2@overall_out_mf
  2731  007FDA  6E3A               	movwf	defuzzy@mf+1,c
  2732  007FDC  0105               	movlb	5	; () banked
  2733  007FDE  0E78               	movlw	low fuzzy_system_single2@overall_out_mf
  2734  007FE0  6E39               	movwf	defuzzy@mf,c
  2735  007FE2  ECD7  F038         	call	_defuzzy	;wreg free
  2736  007FE6  C037  F0DA         	movff	?_defuzzy,fuzzy_system_single2@output
  2737  007FEA  C038  F0DB         	movff	?_defuzzy+1,fuzzy_system_single2@output+1
  2738  007FEE  C039  F0DC         	movff	?_defuzzy+2,fuzzy_system_single2@output+2
  2739                           
  2740                           ;fuzzy.c: 268: return output;
  2741  007FF2  C0DA  F053         	movff	fuzzy_system_single2@output,?_fuzzy_system_single2
  2742  007FF6  C0DB  F054         	movff	fuzzy_system_single2@output+1,?_fuzzy_system_single2+1
  2743  007FFA  C0DC  F055         	movff	fuzzy_system_single2@output+2,?_fuzzy_system_single2+2
  2744  007FFE  0012               	return	
  2745  008000                     __end_of_fuzzy_system_single2:
  2746                           	opt stack 0
  2747                           tblptru	equ	0xFF8
  2748                           tblptrh	equ	0xFF7
  2749                           tblptrl	equ	0xFF6
  2750                           tablat	equ	0xFF5
  2751                           wreg	equ	0xFE8
  2752                           status	equ	0xFD8
  2753                           
  2754 ;; *************** function _fuzzy_system_single1 *****************
  2755 ;; Defined at:
  2756 ;;		line 275 in file "fuzzy.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  input           3   82[COMRAM] int 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  y             120  120[BANK6 ] [40]
  2761 ;;  x             120    0[BANK6 ] [40]
  2762 ;;  overall_out_  120  120[BANK5 ] [40]
  2763 ;;  qualified_co  120  120[BANK4 ] [40]
  2764 ;;  qualified_co  120  120[BANK3 ] [40]
  2765 ;;  cons_mf3      120    0[BANK5 ] [40]
  2766 ;;  qualified_co  120    0[BANK4 ] [40]
  2767 ;;  cons_mf1      120    0[BANK3 ] [40]
  2768 ;;  ante_mf3      120  120[BANK2 ] [40]
  2769 ;;  cons_mf2      120    0[BANK2 ] [40]
  2770 ;;  ante_mf2      120  120[BANK1 ] [40]
  2771 ;;  ante_mf1      120    0[BANK1 ] [40]
  2772 ;;  output          3  122[BANK0 ] [40]
  2773 ;;  w3              3   91[COMRAM] [40]
  2774 ;;  w2              3   88[COMRAM] [40]
  2775 ;;  w1              3   85[COMRAM] [40]
  2776 ;;  i               2    0        int 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  3   82[COMRAM] int 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2786 ;;      Params:         3       0       0       0       0       0       0       0       0
  2787 ;;      Locals:         9       3     240     240     240     240     240     240       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2789 ;;      Totals:        12       3     240     240     240     240     240     240       0
  2790 ;;Total ram usage:     1455 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    4
  2793 ;; This function calls:
  2794 ;;		_defuzzy
  2795 ;;		_linspace
  2796 ;;		_out_mf
  2797 ;;		_qualified
  2798 ;;		_tri_mf
  2799 ;;		_triangular
  2800 ;; This function is called by:
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text17
  2806  0078FC                     __ptext17:
  2807                           	opt stack 0
  2808  0078FC                     _fuzzy_system_single1:
  2809                           	opt stack 26
  2810                           
  2811                           ;fuzzy.c: 277: double ante_mf1[40],cons_mf1[40];
  2812                           ;fuzzy.c: 278: double ante_mf2[40],cons_mf2[40];
  2813                           ;fuzzy.c: 279: double ante_mf3[40],cons_mf3[40];
  2814                           ;fuzzy.c: 280: double x[40],y[40];
  2815                           ;fuzzy.c: 281: double qualified_cons_mf1[40],qualified_cons_mf2[40],qualified_cons_mf3[4
      +                          0];
  2816                           ;fuzzy.c: 282: double overall_out_mf[40];
  2817                           ;fuzzy.c: 283: double w1,w2,w3;
  2818                           ;fuzzy.c: 284: double output;
  2819                           ;fuzzy.c: 285: int i;
  2820                           ;fuzzy.c: 286: linspace(x,-2,2,40);
  2821                           
  2822                           ;incstack = 0
  2823  0078FC  0106               	movlb	6	; () banked
  2824  0078FE  0E06               	movlw	high fuzzy_system_single1@x
  2825  007900  6E38               	movwf	linspace@x+1,c
  2826  007902  0106               	movlb	6	; () banked
  2827  007904  0E00               	movlw	low fuzzy_system_single1@x
  2828  007906  6E37               	movwf	linspace@x,c
  2829  007908  0E00               	movlw	0
  2830  00790A  6E39               	movwf	linspace@start,c
  2831  00790C  0E00               	movlw	0
  2832  00790E  6E3A               	movwf	linspace@start+1,c
  2833  007910  0EC0               	movlw	192
  2834  007912  6E3B               	movwf	linspace@start+2,c
  2835  007914  0E00               	movlw	0
  2836  007916  6E3C               	movwf	linspace@end,c
  2837  007918  0E00               	movlw	0
  2838  00791A  6E3D               	movwf	linspace@end+1,c
  2839  00791C  0E40               	movlw	64
  2840  00791E  6E3E               	movwf	linspace@end+2,c
  2841  007920  0E00               	movlw	0
  2842  007922  6E40               	movwf	linspace@size+1,c
  2843  007924  0E28               	movlw	40
  2844  007926  6E3F               	movwf	linspace@size,c
  2845  007928  ECC5  F037         	call	_linspace	;wreg free
  2846                           
  2847                           ;fuzzy.c: 287: linspace(y,0,100,40);
  2848  00792C  0106               	movlb	6	; () banked
  2849  00792E  0E06               	movlw	high fuzzy_system_single1@y
  2850  007930  6E38               	movwf	linspace@x+1,c
  2851  007932  0106               	movlb	6	; () banked
  2852  007934  0E78               	movlw	low fuzzy_system_single1@y
  2853  007936  6E37               	movwf	linspace@x,c
  2854  007938  0E00               	movlw	0
  2855  00793A  6E39               	movwf	linspace@start,c
  2856  00793C  0E00               	movlw	0
  2857  00793E  6E3A               	movwf	linspace@start+1,c
  2858  007940  0E00               	movlw	0
  2859  007942  6E3B               	movwf	linspace@start+2,c
  2860  007944  0E00               	movlw	0
  2861  007946  6E3C               	movwf	linspace@end,c
  2862  007948  0EC8               	movlw	200
  2863  00794A  6E3D               	movwf	linspace@end+1,c
  2864  00794C  0E42               	movlw	66
  2865  00794E  6E3E               	movwf	linspace@end+2,c
  2866  007950  0E00               	movlw	0
  2867  007952  6E40               	movwf	linspace@size+1,c
  2868  007954  0E28               	movlw	40
  2869  007956  6E3F               	movwf	linspace@size,c
  2870  007958  ECC5  F037         	call	_linspace	;wreg free
  2871                           
  2872                           ;fuzzy.c: 290: tri_mf(ante_mf1,x,-3.6, -2, -0.4);
  2873  00795C  0101               	movlb	1	; () banked
  2874  00795E  0E01               	movlw	high fuzzy_system_single1@ante_mf1
  2875  007960  6E47               	movwf	tri_mf@t_value+1,c
  2876  007962  0101               	movlb	1	; () banked
  2877  007964  0E00               	movlw	low fuzzy_system_single1@ante_mf1
  2878  007966  6E46               	movwf	tri_mf@t_value,c
  2879  007968  0106               	movlb	6	; () banked
  2880  00796A  0E06               	movlw	high fuzzy_system_single1@x
  2881  00796C  6E49               	movwf	tri_mf@x+1,c
  2882  00796E  0106               	movlb	6	; () banked
  2883  007970  0E00               	movlw	low fuzzy_system_single1@x
  2884  007972  6E48               	movwf	tri_mf@x,c
  2885  007974  0E66               	movlw	102
  2886  007976  6E4A               	movwf	tri_mf@a,c
  2887  007978  0E66               	movlw	102
  2888  00797A  6E4B               	movwf	tri_mf@a+1,c
  2889  00797C  0EC0               	movlw	192
  2890  00797E  6E4C               	movwf	tri_mf@a+2,c
  2891  007980  0E00               	movlw	0
  2892  007982  6E4D               	movwf	tri_mf@b,c
  2893  007984  0E00               	movlw	0
  2894  007986  6E4E               	movwf	tri_mf@b+1,c
  2895  007988  0EC0               	movlw	192
  2896  00798A  6E4F               	movwf	tri_mf@b+2,c
  2897  00798C  0ECD               	movlw	205
  2898  00798E  6E50               	movwf	tri_mf@c,c
  2899  007990  0ECC               	movlw	204
  2900  007992  6E51               	movwf	tri_mf@c+1,c
  2901  007994  0EBE               	movlw	190
  2902  007996  6E52               	movwf	tri_mf@c+2,c
  2903  007998  EC46  F038         	call	_tri_mf	;wreg free
  2904                           
  2905                           ;fuzzy.c: 291: tri_mf(ante_mf2,x,-1.6, 0, 1.6);
  2906  00799C  0101               	movlb	1	; () banked
  2907  00799E  0E01               	movlw	high fuzzy_system_single1@ante_mf2
  2908  0079A0  6E47               	movwf	tri_mf@t_value+1,c
  2909  0079A2  0101               	movlb	1	; () banked
  2910  0079A4  0E78               	movlw	low fuzzy_system_single1@ante_mf2
  2911  0079A6  6E46               	movwf	tri_mf@t_value,c
  2912  0079A8  0106               	movlb	6	; () banked
  2913  0079AA  0E06               	movlw	high fuzzy_system_single1@x
  2914  0079AC  6E49               	movwf	tri_mf@x+1,c
  2915  0079AE  0106               	movlb	6	; () banked
  2916  0079B0  0E00               	movlw	low fuzzy_system_single1@x
  2917  0079B2  6E48               	movwf	tri_mf@x,c
  2918  0079B4  0ECD               	movlw	205
  2919  0079B6  6E4A               	movwf	tri_mf@a,c
  2920  0079B8  0ECC               	movlw	204
  2921  0079BA  6E4B               	movwf	tri_mf@a+1,c
  2922  0079BC  0EBF               	movlw	191
  2923  0079BE  6E4C               	movwf	tri_mf@a+2,c
  2924  0079C0  0E00               	movlw	0
  2925  0079C2  6E4D               	movwf	tri_mf@b,c
  2926  0079C4  0E00               	movlw	0
  2927  0079C6  6E4E               	movwf	tri_mf@b+1,c
  2928  0079C8  0E00               	movlw	0
  2929  0079CA  6E4F               	movwf	tri_mf@b+2,c
  2930  0079CC  0ECD               	movlw	205
  2931  0079CE  6E50               	movwf	tri_mf@c,c
  2932  0079D0  0ECC               	movlw	204
  2933  0079D2  6E51               	movwf	tri_mf@c+1,c
  2934  0079D4  0E3F               	movlw	63
  2935  0079D6  6E52               	movwf	tri_mf@c+2,c
  2936  0079D8  EC46  F038         	call	_tri_mf	;wreg free
  2937                           
  2938                           ;fuzzy.c: 292: tri_mf(ante_mf3,x,0.4, 2, 3.6);
  2939  0079DC  0102               	movlb	2	; () banked
  2940  0079DE  0E02               	movlw	high fuzzy_system_single1@ante_mf3
  2941  0079E0  6E47               	movwf	tri_mf@t_value+1,c
  2942  0079E2  0102               	movlb	2	; () banked
  2943  0079E4  0E78               	movlw	low fuzzy_system_single1@ante_mf3
  2944  0079E6  6E46               	movwf	tri_mf@t_value,c
  2945  0079E8  0106               	movlb	6	; () banked
  2946  0079EA  0E06               	movlw	high fuzzy_system_single1@x
  2947  0079EC  6E49               	movwf	tri_mf@x+1,c
  2948  0079EE  0106               	movlb	6	; () banked
  2949  0079F0  0E00               	movlw	low fuzzy_system_single1@x
  2950  0079F2  6E48               	movwf	tri_mf@x,c
  2951  0079F4  0ECD               	movlw	205
  2952  0079F6  6E4A               	movwf	tri_mf@a,c
  2953  0079F8  0ECC               	movlw	204
  2954  0079FA  6E4B               	movwf	tri_mf@a+1,c
  2955  0079FC  0E3E               	movlw	62
  2956  0079FE  6E4C               	movwf	tri_mf@a+2,c
  2957  007A00  0E00               	movlw	0
  2958  007A02  6E4D               	movwf	tri_mf@b,c
  2959  007A04  0E00               	movlw	0
  2960  007A06  6E4E               	movwf	tri_mf@b+1,c
  2961  007A08  0E40               	movlw	64
  2962  007A0A  6E4F               	movwf	tri_mf@b+2,c
  2963  007A0C  0E66               	movlw	102
  2964  007A0E  6E50               	movwf	tri_mf@c,c
  2965  007A10  0E66               	movlw	102
  2966  007A12  6E51               	movwf	tri_mf@c+1,c
  2967  007A14  0E40               	movlw	64
  2968  007A16  6E52               	movwf	tri_mf@c+2,c
  2969  007A18  EC46  F038         	call	_tri_mf	;wreg free
  2970                           
  2971                           ;fuzzy.c: 295: tri_mf(cons_mf1,y,-40, 0, 40);
  2972  007A1C  0103               	movlb	3	; () banked
  2973  007A1E  0E03               	movlw	high fuzzy_system_single1@cons_mf1
  2974  007A20  6E47               	movwf	tri_mf@t_value+1,c
  2975  007A22  0103               	movlb	3	; () banked
  2976  007A24  0E00               	movlw	low fuzzy_system_single1@cons_mf1
  2977  007A26  6E46               	movwf	tri_mf@t_value,c
  2978  007A28  0106               	movlb	6	; () banked
  2979  007A2A  0E06               	movlw	high fuzzy_system_single1@y
  2980  007A2C  6E49               	movwf	tri_mf@x+1,c
  2981  007A2E  0106               	movlb	6	; () banked
  2982  007A30  0E78               	movlw	low fuzzy_system_single1@y
  2983  007A32  6E48               	movwf	tri_mf@x,c
  2984  007A34  0E00               	movlw	0
  2985  007A36  6E4A               	movwf	tri_mf@a,c
  2986  007A38  0E20               	movlw	32
  2987  007A3A  6E4B               	movwf	tri_mf@a+1,c
  2988  007A3C  0EC2               	movlw	194
  2989  007A3E  6E4C               	movwf	tri_mf@a+2,c
  2990  007A40  0E00               	movlw	0
  2991  007A42  6E4D               	movwf	tri_mf@b,c
  2992  007A44  0E00               	movlw	0
  2993  007A46  6E4E               	movwf	tri_mf@b+1,c
  2994  007A48  0E00               	movlw	0
  2995  007A4A  6E4F               	movwf	tri_mf@b+2,c
  2996  007A4C  0E00               	movlw	0
  2997  007A4E  6E50               	movwf	tri_mf@c,c
  2998  007A50  0E20               	movlw	32
  2999  007A52  6E51               	movwf	tri_mf@c+1,c
  3000  007A54  0E42               	movlw	66
  3001  007A56  6E52               	movwf	tri_mf@c+2,c
  3002  007A58  EC46  F038         	call	_tri_mf	;wreg free
  3003                           
  3004                           ;fuzzy.c: 296: tri_mf(cons_mf2,y,10, 50, 90);
  3005  007A5C  0102               	movlb	2	; () banked
  3006  007A5E  0E02               	movlw	high fuzzy_system_single1@cons_mf2
  3007  007A60  6E47               	movwf	tri_mf@t_value+1,c
  3008  007A62  0102               	movlb	2	; () banked
  3009  007A64  0E00               	movlw	low fuzzy_system_single1@cons_mf2
  3010  007A66  6E46               	movwf	tri_mf@t_value,c
  3011  007A68  0106               	movlb	6	; () banked
  3012  007A6A  0E06               	movlw	high fuzzy_system_single1@y
  3013  007A6C  6E49               	movwf	tri_mf@x+1,c
  3014  007A6E  0106               	movlb	6	; () banked
  3015  007A70  0E78               	movlw	low fuzzy_system_single1@y
  3016  007A72  6E48               	movwf	tri_mf@x,c
  3017  007A74  0E00               	movlw	0
  3018  007A76  6E4A               	movwf	tri_mf@a,c
  3019  007A78  0E20               	movlw	32
  3020  007A7A  6E4B               	movwf	tri_mf@a+1,c
  3021  007A7C  0E41               	movlw	65
  3022  007A7E  6E4C               	movwf	tri_mf@a+2,c
  3023  007A80  0E00               	movlw	0
  3024  007A82  6E4D               	movwf	tri_mf@b,c
  3025  007A84  0E48               	movlw	72
  3026  007A86  6E4E               	movwf	tri_mf@b+1,c
  3027  007A88  0E42               	movlw	66
  3028  007A8A  6E4F               	movwf	tri_mf@b+2,c
  3029  007A8C  0E00               	movlw	0
  3030  007A8E  6E50               	movwf	tri_mf@c,c
  3031  007A90  0EB4               	movlw	180
  3032  007A92  6E51               	movwf	tri_mf@c+1,c
  3033  007A94  0E42               	movlw	66
  3034  007A96  6E52               	movwf	tri_mf@c+2,c
  3035  007A98  EC46  F038         	call	_tri_mf	;wreg free
  3036                           
  3037                           ;fuzzy.c: 297: tri_mf(cons_mf3,y,60, 100, 140);
  3038  007A9C  0105               	movlb	5	; () banked
  3039  007A9E  0E05               	movlw	high fuzzy_system_single1@cons_mf3
  3040  007AA0  6E47               	movwf	tri_mf@t_value+1,c
  3041  007AA2  0105               	movlb	5	; () banked
  3042  007AA4  0E00               	movlw	low fuzzy_system_single1@cons_mf3
  3043  007AA6  6E46               	movwf	tri_mf@t_value,c
  3044  007AA8  0106               	movlb	6	; () banked
  3045  007AAA  0E06               	movlw	high fuzzy_system_single1@y
  3046  007AAC  6E49               	movwf	tri_mf@x+1,c
  3047  007AAE  0106               	movlb	6	; () banked
  3048  007AB0  0E78               	movlw	low fuzzy_system_single1@y
  3049  007AB2  6E48               	movwf	tri_mf@x,c
  3050  007AB4  0E00               	movlw	0
  3051  007AB6  6E4A               	movwf	tri_mf@a,c
  3052  007AB8  0E70               	movlw	112
  3053  007ABA  6E4B               	movwf	tri_mf@a+1,c
  3054  007ABC  0E42               	movlw	66
  3055  007ABE  6E4C               	movwf	tri_mf@a+2,c
  3056  007AC0  0E00               	movlw	0
  3057  007AC2  6E4D               	movwf	tri_mf@b,c
  3058  007AC4  0EC8               	movlw	200
  3059  007AC6  6E4E               	movwf	tri_mf@b+1,c
  3060  007AC8  0E42               	movlw	66
  3061  007ACA  6E4F               	movwf	tri_mf@b+2,c
  3062  007ACC  0E00               	movlw	0
  3063  007ACE  6E50               	movwf	tri_mf@c,c
  3064  007AD0  0E0C               	movlw	12
  3065  007AD2  6E51               	movwf	tri_mf@c+1,c
  3066  007AD4  0E43               	movlw	67
  3067  007AD6  6E52               	movwf	tri_mf@c+2,c
  3068  007AD8  EC46  F038         	call	_tri_mf	;wreg free
  3069                           
  3070                           ;fuzzy.c: 301: w1=triangular(-3.6, -2, -0.4,input);
  3071  007ADC  0E66               	movlw	102
  3072  007ADE  6E37               	movwf	triangular@a,c
  3073  007AE0  0E66               	movlw	102
  3074  007AE2  6E38               	movwf	triangular@a+1,c
  3075  007AE4  0EC0               	movlw	192
  3076  007AE6  6E39               	movwf	triangular@a+2,c
  3077  007AE8  0E00               	movlw	0
  3078  007AEA  6E3A               	movwf	triangular@b,c
  3079  007AEC  0E00               	movlw	0
  3080  007AEE  6E3B               	movwf	triangular@b+1,c
  3081  007AF0  0EC0               	movlw	192
  3082  007AF2  6E3C               	movwf	triangular@b+2,c
  3083  007AF4  0ECD               	movlw	205
  3084  007AF6  6E3D               	movwf	triangular@c,c
  3085  007AF8  0ECC               	movlw	204
  3086  007AFA  6E3E               	movwf	triangular@c+1,c
  3087  007AFC  0EBE               	movlw	190
  3088  007AFE  6E3F               	movwf	triangular@c+2,c
  3089  007B00  C053  F040         	movff	fuzzy_system_single1@input,triangular@x
  3090  007B04  C054  F041         	movff	fuzzy_system_single1@input+1,triangular@x+1
  3091  007B08  C055  F042         	movff	fuzzy_system_single1@input+2,triangular@x+2
  3092  007B0C  EC5E  F03A         	call	_triangular	;wreg free
  3093  007B10  C037  F056         	movff	?_triangular,fuzzy_system_single1@w1
  3094  007B14  C038  F057         	movff	?_triangular+1,fuzzy_system_single1@w1+1
  3095  007B18  C039  F058         	movff	?_triangular+2,fuzzy_system_single1@w1+2
  3096                           
  3097                           ;fuzzy.c: 302: w2=triangular(-1.6, 0, 1.6,input);
  3098  007B1C  0ECD               	movlw	205
  3099  007B1E  6E37               	movwf	triangular@a,c
  3100  007B20  0ECC               	movlw	204
  3101  007B22  6E38               	movwf	triangular@a+1,c
  3102  007B24  0EBF               	movlw	191
  3103  007B26  6E39               	movwf	triangular@a+2,c
  3104  007B28  0E00               	movlw	0
  3105  007B2A  6E3A               	movwf	triangular@b,c
  3106  007B2C  0E00               	movlw	0
  3107  007B2E  6E3B               	movwf	triangular@b+1,c
  3108  007B30  0E00               	movlw	0
  3109  007B32  6E3C               	movwf	triangular@b+2,c
  3110  007B34  0ECD               	movlw	205
  3111  007B36  6E3D               	movwf	triangular@c,c
  3112  007B38  0ECC               	movlw	204
  3113  007B3A  6E3E               	movwf	triangular@c+1,c
  3114  007B3C  0E3F               	movlw	63
  3115  007B3E  6E3F               	movwf	triangular@c+2,c
  3116  007B40  C053  F040         	movff	fuzzy_system_single1@input,triangular@x
  3117  007B44  C054  F041         	movff	fuzzy_system_single1@input+1,triangular@x+1
  3118  007B48  C055  F042         	movff	fuzzy_system_single1@input+2,triangular@x+2
  3119  007B4C  EC5E  F03A         	call	_triangular	;wreg free
  3120  007B50  C037  F059         	movff	?_triangular,fuzzy_system_single1@w2
  3121  007B54  C038  F05A         	movff	?_triangular+1,fuzzy_system_single1@w2+1
  3122  007B58  C039  F05B         	movff	?_triangular+2,fuzzy_system_single1@w2+2
  3123                           
  3124                           ;fuzzy.c: 303: w3=triangular(0.4, 2, 3.6,input);
  3125  007B5C  0ECD               	movlw	205
  3126  007B5E  6E37               	movwf	triangular@a,c
  3127  007B60  0ECC               	movlw	204
  3128  007B62  6E38               	movwf	triangular@a+1,c
  3129  007B64  0E3E               	movlw	62
  3130  007B66  6E39               	movwf	triangular@a+2,c
  3131  007B68  0E00               	movlw	0
  3132  007B6A  6E3A               	movwf	triangular@b,c
  3133  007B6C  0E00               	movlw	0
  3134  007B6E  6E3B               	movwf	triangular@b+1,c
  3135  007B70  0E40               	movlw	64
  3136  007B72  6E3C               	movwf	triangular@b+2,c
  3137  007B74  0E66               	movlw	102
  3138  007B76  6E3D               	movwf	triangular@c,c
  3139  007B78  0E66               	movlw	102
  3140  007B7A  6E3E               	movwf	triangular@c+1,c
  3141  007B7C  0E40               	movlw	64
  3142  007B7E  6E3F               	movwf	triangular@c+2,c
  3143  007B80  C053  F040         	movff	fuzzy_system_single1@input,triangular@x
  3144  007B84  C054  F041         	movff	fuzzy_system_single1@input+1,triangular@x+1
  3145  007B88  C055  F042         	movff	fuzzy_system_single1@input+2,triangular@x+2
  3146  007B8C  EC5E  F03A         	call	_triangular	;wreg free
  3147  007B90  C037  F05C         	movff	?_triangular,fuzzy_system_single1@w3
  3148  007B94  C038  F05D         	movff	?_triangular+1,fuzzy_system_single1@w3+1
  3149  007B98  C039  F05E         	movff	?_triangular+2,fuzzy_system_single1@w3+2
  3150                           
  3151                           ;fuzzy.c: 304: qualified(qualified_cons_mf1,cons_mf3,w1);
  3152  007B9C  0103               	movlb	3	; () banked
  3153  007B9E  0E03               	movlw	high fuzzy_system_single1@qualified_cons_mf1
  3154  007BA0  6E11               	movwf	qualified@y+1,c
  3155  007BA2  0103               	movlb	3	; () banked
  3156  007BA4  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf1
  3157  007BA6  6E10               	movwf	qualified@y,c
  3158  007BA8  0105               	movlb	5	; () banked
  3159  007BAA  0E05               	movlw	high fuzzy_system_single1@cons_mf3
  3160  007BAC  6E13               	movwf	qualified@x+1,c
  3161  007BAE  0105               	movlb	5	; () banked
  3162  007BB0  0E00               	movlw	low fuzzy_system_single1@cons_mf3
  3163  007BB2  6E12               	movwf	qualified@x,c
  3164  007BB4  C056  F014         	movff	fuzzy_system_single1@w1,qualified@w
  3165  007BB8  C057  F015         	movff	fuzzy_system_single1@w1+1,qualified@w+1
  3166  007BBC  C058  F016         	movff	fuzzy_system_single1@w1+2,qualified@w+2
  3167  007BC0  EC51  F037         	call	_qualified	;wreg free
  3168                           
  3169                           ;fuzzy.c: 305: qualified(qualified_cons_mf2,cons_mf3,w2);
  3170  007BC4  0104               	movlb	4	; () banked
  3171  007BC6  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf2
  3172  007BC8  6E11               	movwf	qualified@y+1,c
  3173  007BCA  0104               	movlb	4	; () banked
  3174  007BCC  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf2
  3175  007BCE  6E10               	movwf	qualified@y,c
  3176  007BD0  0105               	movlb	5	; () banked
  3177  007BD2  0E05               	movlw	high fuzzy_system_single1@cons_mf3
  3178  007BD4  6E13               	movwf	qualified@x+1,c
  3179  007BD6  0105               	movlb	5	; () banked
  3180  007BD8  0E00               	movlw	low fuzzy_system_single1@cons_mf3
  3181  007BDA  6E12               	movwf	qualified@x,c
  3182  007BDC  C059  F014         	movff	fuzzy_system_single1@w2,qualified@w
  3183  007BE0  C05A  F015         	movff	fuzzy_system_single1@w2+1,qualified@w+1
  3184  007BE4  C05B  F016         	movff	fuzzy_system_single1@w2+2,qualified@w+2
  3185  007BE8  EC51  F037         	call	_qualified	;wreg free
  3186                           
  3187                           ;fuzzy.c: 306: qualified(qualified_cons_mf3,cons_mf1,w3);
  3188  007BEC  0104               	movlb	4	; () banked
  3189  007BEE  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf3
  3190  007BF0  6E11               	movwf	qualified@y+1,c
  3191  007BF2  0104               	movlb	4	; () banked
  3192  007BF4  0E00               	movlw	low fuzzy_system_single1@qualified_cons_mf3
  3193  007BF6  6E10               	movwf	qualified@y,c
  3194  007BF8  0103               	movlb	3	; () banked
  3195  007BFA  0E03               	movlw	high fuzzy_system_single1@cons_mf1
  3196  007BFC  6E13               	movwf	qualified@x+1,c
  3197  007BFE  0103               	movlb	3	; () banked
  3198  007C00  0E00               	movlw	low fuzzy_system_single1@cons_mf1
  3199  007C02  6E12               	movwf	qualified@x,c
  3200  007C04  C05C  F014         	movff	fuzzy_system_single1@w3,qualified@w
  3201  007C08  C05D  F015         	movff	fuzzy_system_single1@w3+1,qualified@w+1
  3202  007C0C  C05E  F016         	movff	fuzzy_system_single1@w3+2,qualified@w+2
  3203  007C10  EC51  F037         	call	_qualified	;wreg free
  3204                           
  3205                           ;fuzzy.c: 307: out_mf(overall_out_mf,qualified_cons_mf1,qualified_cons_mf2,qualified_con
      +                          s_mf3);
  3206  007C14  0105               	movlb	5	; () banked
  3207  007C16  0E05               	movlw	high fuzzy_system_single1@overall_out_mf
  3208  007C18  6E11               	movwf	out_mf@result+1,c
  3209  007C1A  0105               	movlb	5	; () banked
  3210  007C1C  0E78               	movlw	low fuzzy_system_single1@overall_out_mf
  3211  007C1E  6E10               	movwf	out_mf@result,c
  3212  007C20  0103               	movlb	3	; () banked
  3213  007C22  0E03               	movlw	high fuzzy_system_single1@qualified_cons_mf1
  3214  007C24  6E13               	movwf	out_mf@x+1,c
  3215  007C26  0103               	movlb	3	; () banked
  3216  007C28  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf1
  3217  007C2A  6E12               	movwf	out_mf@x,c
  3218  007C2C  0104               	movlb	4	; () banked
  3219  007C2E  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf2
  3220  007C30  6E15               	movwf	out_mf@y+1,c
  3221  007C32  0104               	movlb	4	; () banked
  3222  007C34  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf2
  3223  007C36  6E14               	movwf	out_mf@y,c
  3224  007C38  0104               	movlb	4	; () banked
  3225  007C3A  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf3
  3226  007C3C  6E17               	movwf	out_mf@z+1,c
  3227  007C3E  0104               	movlb	4	; () banked
  3228  007C40  0E00               	movlw	low fuzzy_system_single1@qualified_cons_mf3
  3229  007C42  6E16               	movwf	out_mf@z,c
  3230  007C44  EC51  F03B         	call	_out_mf	;wreg free
  3231                           
  3232                           ;fuzzy.c: 308: output= defuzzy(y,overall_out_mf);
  3233  007C48  0106               	movlb	6	; () banked
  3234  007C4A  0E06               	movlw	high fuzzy_system_single1@y
  3235  007C4C  6E38               	movwf	defuzzy@x+1,c
  3236  007C4E  0106               	movlb	6	; () banked
  3237  007C50  0E78               	movlw	low fuzzy_system_single1@y
  3238  007C52  6E37               	movwf	defuzzy@x,c
  3239  007C54  0105               	movlb	5	; () banked
  3240  007C56  0E05               	movlw	high fuzzy_system_single1@overall_out_mf
  3241  007C58  6E3A               	movwf	defuzzy@mf+1,c
  3242  007C5A  0105               	movlb	5	; () banked
  3243  007C5C  0E78               	movlw	low fuzzy_system_single1@overall_out_mf
  3244  007C5E  6E39               	movwf	defuzzy@mf,c
  3245  007C60  ECD7  F038         	call	_defuzzy	;wreg free
  3246  007C64  C037  F0DA         	movff	?_defuzzy,fuzzy_system_single1@output
  3247  007C68  C038  F0DB         	movff	?_defuzzy+1,fuzzy_system_single1@output+1
  3248  007C6C  C039  F0DC         	movff	?_defuzzy+2,fuzzy_system_single1@output+2
  3249                           
  3250                           ;fuzzy.c: 309: return output;
  3251  007C70  C0DA  F053         	movff	fuzzy_system_single1@output,?_fuzzy_system_single1
  3252  007C74  C0DB  F054         	movff	fuzzy_system_single1@output+1,?_fuzzy_system_single1+1
  3253  007C78  C0DC  F055         	movff	fuzzy_system_single1@output+2,?_fuzzy_system_single1+2
  3254  007C7C  0012               	return	
  3255  007C7E                     __end_of_fuzzy_system_single1:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           wreg	equ	0xFE8
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function _tri_mf *****************
  3265 ;; Defined at:
  3266 ;;		line 64 in file "fuzzy.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  t_value         2   69[COMRAM] PTR 
  3269 ;;		 -> fuzzy_system_single1@cons_mf3(120), fuzzy_system_single1@cons_mf2(120), fuzzy_system_single1@cons_mf1(120), fuzz
      +y_system_single1@ante_mf3(120), 
  3270 ;;		 -> fuzzy_system_single1@ante_mf2(120), fuzzy_system_single1@ante_mf1(120), fuzzy_system_single2@cons_mf3(120), fuzz
      +y_system_single2@cons_mf2(120), 
  3271 ;;		 -> fuzzy_system_single2@cons_mf1(120), fuzzy_system_single2@ante_mf3(120), fuzzy_system_single2@ante_mf2(120), fuzz
      +y_system_single2@ante_mf1(120), 
  3272 ;;  x               2   71[COMRAM] PTR 
  3273 ;;		 -> fuzzy_system_single1@y(120), fuzzy_system_single1@x(120), fuzzy_system_single2@y(120), fuzzy_system_single2@x(12
      +0), 
  3274 ;;  a               3   73[COMRAM] PTR 
  3275 ;;  b               3   76[COMRAM] PTR 
  3276 ;;  c               3   79[COMRAM] PTR 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  temp          120    0[BANK0 ] [40]
  3279 ;;  i               2  120[BANK0 ] int 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;		None               void
  3282 ;; Registers used:
  3283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3289 ;;      Params:        13       0       0       0       0       0       0       0       0
  3290 ;;      Locals:         0     122       0       0       0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3292 ;;      Totals:        13     122       0       0       0       0       0       0       0
  3293 ;;Total ram usage:      135 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    3
  3296 ;; This function calls:
  3297 ;;		___wmul
  3298 ;;		_triangular
  3299 ;; This function is called by:
  3300 ;;		_fuzzy_system_single2
  3301 ;;		_fuzzy_system_single1
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text18
  3306  00708C                     __ptext18:
  3307                           	opt stack 0
  3308  00708C                     _tri_mf:
  3309                           	opt stack 26
  3310                           
  3311                           ;fuzzy.c: 66: int i;
  3312                           ;fuzzy.c: 67: double temp[40];
  3313                           ;fuzzy.c: 68: for(i=0; i<40; i++)
  3314                           
  3315                           ;incstack = 0
  3316  00708C  0E00               	movlw	0
  3317  00708E  0100               	movlb	0	; () banked
  3318  007090  6FD9               	movwf	(tri_mf@i+1)& (0+255),b
  3319  007092  0E00               	movlw	0
  3320  007094  0100               	movlb	0	; () banked
  3321  007096  6FD8               	movwf	tri_mf@i& (0+255),b
  3322  007098                     
  3323                           ; BSR set to: 0
  3324  007098  0100               	movlb	0	; () banked
  3325  00709A  51D9               	movf	(tri_mf@i+1)& (0+255),w,b
  3326  00709C  0A80               	xorlw	128
  3327  00709E  0F80               	addlw	-128
  3328  0070A0  0E28               	movlw	40
  3329  0070A2  B4D8               	btfsc	status,2,c
  3330  0070A4  5DD8               	subwf	tri_mf@i& (0+255),w,b
  3331  0070A6  B0D8               	btfsc	status,0,c
  3332  0070A8  D02D               	goto	l2259
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;fuzzy.c: 69: temp[i]= x[i];
  3336                           
  3337                           ; BSR set to: 0
  3338                           
  3339                           ; BSR set to: 0
  3340  0070AA  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3341  0070AE  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3342  0070B2  0E00               	movlw	0
  3343  0070B4  6E04               	movwf	___wmul@multiplicand+1,c
  3344  0070B6  0E03               	movlw	3
  3345  0070B8  6E03               	movwf	___wmul@multiplicand,c
  3346  0070BA  EC3E  F033         	call	___wmul	;wreg free
  3347  0070BE  5001               	movf	?___wmul,w,c
  3348  0070C0  2448               	addwf	tri_mf@x,w,c
  3349  0070C2  6ED9               	movwf	fsr2l,c
  3350  0070C4  5002               	movf	?___wmul+1,w,c
  3351  0070C6  2049               	addwfc	tri_mf@x+1,w,c
  3352  0070C8  6EDA               	movwf	fsr2h,c
  3353  0070CA  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3354  0070CE  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3355  0070D2  0E00               	movlw	0
  3356  0070D4  6E04               	movwf	___wmul@multiplicand+1,c
  3357  0070D6  0E03               	movlw	3
  3358  0070D8  6E03               	movwf	___wmul@multiplicand,c
  3359  0070DA  EC3E  F033         	call	___wmul	;wreg free
  3360  0070DE  0100               	movlb	0	; () banked
  3361  0070E0  0E60               	movlw	low tri_mf@temp
  3362  0070E2  2401               	addwf	?___wmul,w,c
  3363  0070E4  6EE1               	movwf	fsr1l,c
  3364  0070E6  0100               	movlb	0	; () banked
  3365  0070E8  0E00               	movlw	high tri_mf@temp
  3366  0070EA  2002               	addwfc	?___wmul+1,w,c
  3367  0070EC  6EE2               	movwf	fsr1h,c
  3368  0070EE  CFDE FFE6          	movff	postinc2,postinc1
  3369  0070F2  CFDE FFE6          	movff	postinc2,postinc1
  3370  0070F6  CFDE FFE5          	movff	postinc2,postdec1
  3371  0070FA  52E5               	movf	postdec1,f,c
  3372                           
  3373                           ; BSR set to: 0
  3374  0070FC  0100               	movlb	0	; () banked
  3375  0070FE  4BD8               	infsnz	tri_mf@i& (0+255),f,b
  3376  007100  2BD9               	incf	(tri_mf@i+1)& (0+255),f,b
  3377  007102  D7CA               	goto	L6
  3378  007104                     l2259:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;fuzzy.c: 70: for(i=0; i<40; i++)
  3382  007104  0E00               	movlw	0
  3383  007106  0100               	movlb	0	; () banked
  3384  007108  6FD9               	movwf	(tri_mf@i+1)& (0+255),b
  3385  00710A  0E00               	movlw	0
  3386  00710C  0100               	movlb	0	; () banked
  3387  00710E  6FD8               	movwf	tri_mf@i& (0+255),b
  3388  007110                     
  3389                           ; BSR set to: 0
  3390  007110  0100               	movlb	0	; () banked
  3391  007112  51D9               	movf	(tri_mf@i+1)& (0+255),w,b
  3392  007114  0A80               	xorlw	128
  3393  007116  0F80               	addlw	-128
  3394  007118  0E28               	movlw	40
  3395  00711A  B4D8               	btfsc	status,2,c
  3396  00711C  5DD8               	subwf	tri_mf@i& (0+255),w,b
  3397  00711E  B0D8               	btfsc	status,0,c
  3398  007120  D045               	goto	l95
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;fuzzy.c: 71: t_value[i]= triangular(a,b,c,x[i]);
  3402                           
  3403                           ; BSR set to: 0
  3404                           
  3405                           ; BSR set to: 0
  3406  007122  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3407  007126  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3408  00712A  0E00               	movlw	0
  3409  00712C  6E04               	movwf	___wmul@multiplicand+1,c
  3410  00712E  0E03               	movlw	3
  3411  007130  6E03               	movwf	___wmul@multiplicand,c
  3412  007132  EC3E  F033         	call	___wmul	;wreg free
  3413  007136  5001               	movf	?___wmul,w,c
  3414  007138  2446               	addwf	tri_mf@t_value,w,c
  3415  00713A  6ED9               	movwf	fsr2l,c
  3416  00713C  5002               	movf	?___wmul+1,w,c
  3417  00713E  2047               	addwfc	tri_mf@t_value+1,w,c
  3418  007140  6EDA               	movwf	fsr2h,c
  3419  007142  C04A  F037         	movff	tri_mf@a,triangular@a
  3420  007146  C04B  F038         	movff	tri_mf@a+1,triangular@a+1
  3421  00714A  C04C  F039         	movff	tri_mf@a+2,triangular@a+2
  3422  00714E  C04D  F03A         	movff	tri_mf@b,triangular@b
  3423  007152  C04E  F03B         	movff	tri_mf@b+1,triangular@b+1
  3424  007156  C04F  F03C         	movff	tri_mf@b+2,triangular@b+2
  3425  00715A  C050  F03D         	movff	tri_mf@c,triangular@c
  3426  00715E  C051  F03E         	movff	tri_mf@c+1,triangular@c+1
  3427  007162  C052  F03F         	movff	tri_mf@c+2,triangular@c+2
  3428  007166  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3429  00716A  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3430  00716E  0E00               	movlw	0
  3431  007170  6E04               	movwf	___wmul@multiplicand+1,c
  3432  007172  0E03               	movlw	3
  3433  007174  6E03               	movwf	___wmul@multiplicand,c
  3434  007176  EC3E  F033         	call	___wmul	;wreg free
  3435  00717A  5001               	movf	?___wmul,w,c
  3436  00717C  2448               	addwf	tri_mf@x,w,c
  3437  00717E  6EE1               	movwf	fsr1l,c
  3438  007180  5002               	movf	?___wmul+1,w,c
  3439  007182  2049               	addwfc	tri_mf@x+1,w,c
  3440  007184  6EE2               	movwf	fsr1h,c
  3441  007186  CFE6 F040          	movff	postinc1,triangular@x
  3442  00718A  CFE6 F041          	movff	postinc1,triangular@x+1
  3443  00718E  CFE5 F042          	movff	postdec1,triangular@x+2
  3444  007192  EC5E  F03A         	call	_triangular	;wreg free
  3445  007196  C037  FFDE         	movff	?_triangular,postinc2
  3446  00719A  C038  FFDE         	movff	?_triangular+1,postinc2
  3447  00719E  C039  FFDD         	movff	?_triangular+2,postdec2
  3448  0071A2  52DD               	movf	postdec2,f,c
  3449  0071A4  0100               	movlb	0	; () banked
  3450  0071A6  4BD8               	infsnz	tri_mf@i& (0+255),f,b
  3451  0071A8  2BD9               	incf	(tri_mf@i+1)& (0+255),f,b
  3452  0071AA  D7B2               	goto	L7
  3453  0071AC                     l95:
  3454                           
  3455                           ; BSR set to: 0
  3456  0071AC  0012               	return	
  3457  0071AE                     __end_of_tri_mf:
  3458                           	opt stack 0
  3459                           tblptru	equ	0xFF8
  3460                           tblptrh	equ	0xFF7
  3461                           tblptrl	equ	0xFF6
  3462                           tablat	equ	0xFF5
  3463                           wreg	equ	0xFE8
  3464                           postinc1	equ	0xFE6
  3465                           postdec1	equ	0xFE5
  3466                           fsr1h	equ	0xFE2
  3467                           fsr1l	equ	0xFE1
  3468                           postinc2	equ	0xFDE
  3469                           postdec2	equ	0xFDD
  3470                           fsr2h	equ	0xFDA
  3471                           fsr2l	equ	0xFD9
  3472                           status	equ	0xFD8
  3473                           
  3474 ;; *************** function _triangular *****************
  3475 ;; Defined at:
  3476 ;;		line 46 in file "fuzzy.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  a               3   54[COMRAM] int 
  3479 ;;  b               3   57[COMRAM] int 
  3480 ;;  c               3   60[COMRAM] int 
  3481 ;;  x               3   63[COMRAM] int 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  ux              3   66[COMRAM] int 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  3   54[COMRAM] int 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3493 ;;      Params:        12       0       0       0       0       0       0       0       0
  3494 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3496 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3497 ;;Total ram usage:       15 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    2
  3500 ;; This function calls:
  3501 ;;		___ftadd
  3502 ;;		___ftdiv
  3503 ;;		___ftge
  3504 ;;		___ftneg
  3505 ;; This function is called by:
  3506 ;;		_tri_mf
  3507 ;;		_fuzzy_system_single2
  3508 ;;		_fuzzy_system_single1
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text19
  3513  0074BC                     __ptext19:
  3514                           	opt stack 0
  3515  0074BC                     _triangular:
  3516                           	opt stack 27
  3517                           
  3518                           ;fuzzy.c: 48: double ux=0;
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;incstack = 0
  3522  0074BC  0E00               	movlw	0
  3523  0074BE  6E43               	movwf	triangular@ux,c
  3524  0074C0  0E00               	movlw	0
  3525  0074C2  6E44               	movwf	triangular@ux+1,c
  3526  0074C4  0E00               	movlw	0
  3527  0074C6  6E45               	movwf	triangular@ux+2,c
  3528                           
  3529                           ;fuzzy.c: 49: if(x<=a){
  3530  0074C8  C037  F007         	movff	triangular@a,___ftge@ff1
  3531  0074CC  C038  F008         	movff	triangular@a+1,___ftge@ff1+1
  3532  0074D0  C039  F009         	movff	triangular@a+2,___ftge@ff1+2
  3533  0074D4  C040  F00A         	movff	triangular@x,___ftge@ff2
  3534  0074D8  C041  F00B         	movff	triangular@x+1,___ftge@ff2+1
  3535  0074DC  C042  F00C         	movff	triangular@x+2,___ftge@ff2+2
  3536  0074E0  EC5E  F034         	call	___ftge	;wreg free
  3537  0074E4  A0D8               	btfss	status,0,c
  3538  0074E6  D006               	goto	l2027
  3539                           
  3540                           ;fuzzy.c: 50: ux=0;
  3541  0074E8  0E00               	movlw	0
  3542  0074EA  6E43               	movwf	triangular@ux,c
  3543  0074EC  0E00               	movlw	0
  3544  0074EE  6E44               	movwf	triangular@ux+1,c
  3545  0074F0  0E00               	movlw	0
  3546  0074F2  6E45               	movwf	triangular@ux+2,c
  3547  0074F4                     l2027:
  3548                           
  3549                           ;fuzzy.c: 51: }
  3550                           ;fuzzy.c: 52: if(x>a && x<b){
  3551  0074F4  C037  F007         	movff	triangular@a,___ftge@ff1
  3552  0074F8  C038  F008         	movff	triangular@a+1,___ftge@ff1+1
  3553  0074FC  C039  F009         	movff	triangular@a+2,___ftge@ff1+2
  3554  007500  C040  F00A         	movff	triangular@x,___ftge@ff2
  3555  007504  C041  F00B         	movff	triangular@x+1,___ftge@ff2+1
  3556  007508  C042  F00C         	movff	triangular@x+2,___ftge@ff2+2
  3557  00750C  EC5E  F034         	call	___ftge	;wreg free
  3558  007510  B0D8               	btfsc	status,0,c
  3559  007512  D050               	goto	l2033
  3560  007514  C040  F007         	movff	triangular@x,___ftge@ff1
  3561  007518  C041  F008         	movff	triangular@x+1,___ftge@ff1+1
  3562  00751C  C042  F009         	movff	triangular@x+2,___ftge@ff1+2
  3563  007520  C03A  F00A         	movff	triangular@b,___ftge@ff2
  3564  007524  C03B  F00B         	movff	triangular@b+1,___ftge@ff2+1
  3565  007528  C03C  F00C         	movff	triangular@b+2,___ftge@ff2+2
  3566  00752C  EC5E  F034         	call	___ftge	;wreg free
  3567  007530  B0D8               	btfsc	status,0,c
  3568  007532  D040               	goto	l2033
  3569                           
  3570                           ;fuzzy.c: 53: ux=(x-a)/(b-a);
  3571  007534  C040  F01F         	movff	triangular@x,___ftadd@f2
  3572  007538  C041  F020         	movff	triangular@x+1,___ftadd@f2+1
  3573  00753C  C042  F021         	movff	triangular@x+2,___ftadd@f2+2
  3574  007540  C037  F001         	movff	triangular@a,___ftneg@f1
  3575  007544  C038  F002         	movff	triangular@a+1,___ftneg@f1+1
  3576  007548  C039  F003         	movff	triangular@a+2,___ftneg@f1+2
  3577  00754C  EC51  F033         	call	___ftneg	;wreg free
  3578  007550  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3579  007554  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3580  007558  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3581  00755C  EC88  F039         	call	___ftadd	;wreg free
  3582  007560  C01C  F028         	movff	?___ftadd,___ftdiv@f1
  3583  007564  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
  3584  007568  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
  3585  00756C  C03A  F01F         	movff	triangular@b,___ftadd@f2
  3586  007570  C03B  F020         	movff	triangular@b+1,___ftadd@f2+1
  3587  007574  C03C  F021         	movff	triangular@b+2,___ftadd@f2+2
  3588  007578  C037  F001         	movff	triangular@a,___ftneg@f1
  3589  00757C  C038  F002         	movff	triangular@a+1,___ftneg@f1+1
  3590  007580  C039  F003         	movff	triangular@a+2,___ftneg@f1+2
  3591  007584  EC51  F033         	call	___ftneg	;wreg free
  3592  007588  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3593  00758C  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3594  007590  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3595  007594  EC88  F039         	call	___ftadd	;wreg free
  3596  007598  C01C  F02B         	movff	?___ftadd,___ftdiv@f2
  3597  00759C  C01D  F02C         	movff	?___ftadd+1,___ftdiv@f2+1
  3598  0075A0  C01E  F02D         	movff	?___ftadd+2,___ftdiv@f2+2
  3599  0075A4  EC74  F036         	call	___ftdiv	;wreg free
  3600  0075A8  C028  F043         	movff	?___ftdiv,triangular@ux
  3601  0075AC  C029  F044         	movff	?___ftdiv+1,triangular@ux+1
  3602  0075B0  C02A  F045         	movff	?___ftdiv+2,triangular@ux+2
  3603  0075B4                     l2033:
  3604                           
  3605                           ;fuzzy.c: 54: }
  3606                           ;fuzzy.c: 55: if(x==b){
  3607  0075B4  503C               	movf	triangular@b+2,w,c
  3608  0075B6  1842               	xorwf	triangular@x+2,w,c
  3609  0075B8  E105               	bnz	u1915
  3610  0075BA  503B               	movf	triangular@b+1,w,c
  3611  0075BC  1841               	xorwf	triangular@x+1,w,c
  3612  0075BE  E102               	bnz	u1915
  3613  0075C0  503A               	movf	triangular@b,w,c
  3614  0075C2  1840               	xorwf	triangular@x,w,c
  3615  0075C4                     u1915:
  3616  0075C4  A4D8               	btfss	status,2,c
  3617  0075C6  D006               	goto	l2037
  3618                           
  3619                           ;fuzzy.c: 56: ux=1;
  3620  0075C8  0E00               	movlw	0
  3621  0075CA  6E43               	movwf	triangular@ux,c
  3622  0075CC  0E80               	movlw	128
  3623  0075CE  6E44               	movwf	triangular@ux+1,c
  3624  0075D0  0E3F               	movlw	63
  3625  0075D2  6E45               	movwf	triangular@ux+2,c
  3626  0075D4                     l2037:
  3627                           
  3628                           ;fuzzy.c: 57: }
  3629                           ;fuzzy.c: 58: if(x>b && x<c){
  3630  0075D4  C03A  F007         	movff	triangular@b,___ftge@ff1
  3631  0075D8  C03B  F008         	movff	triangular@b+1,___ftge@ff1+1
  3632  0075DC  C03C  F009         	movff	triangular@b+2,___ftge@ff1+2
  3633  0075E0  C040  F00A         	movff	triangular@x,___ftge@ff2
  3634  0075E4  C041  F00B         	movff	triangular@x+1,___ftge@ff2+1
  3635  0075E8  C042  F00C         	movff	triangular@x+2,___ftge@ff2+2
  3636  0075EC  EC5E  F034         	call	___ftge	;wreg free
  3637  0075F0  B0D8               	btfsc	status,0,c
  3638  0075F2  D050               	goto	l2043
  3639  0075F4  C040  F007         	movff	triangular@x,___ftge@ff1
  3640  0075F8  C041  F008         	movff	triangular@x+1,___ftge@ff1+1
  3641  0075FC  C042  F009         	movff	triangular@x+2,___ftge@ff1+2
  3642  007600  C03D  F00A         	movff	triangular@c,___ftge@ff2
  3643  007604  C03E  F00B         	movff	triangular@c+1,___ftge@ff2+1
  3644  007608  C03F  F00C         	movff	triangular@c+2,___ftge@ff2+2
  3645  00760C  EC5E  F034         	call	___ftge	;wreg free
  3646  007610  B0D8               	btfsc	status,0,c
  3647  007612  D040               	goto	l2043
  3648                           
  3649                           ;fuzzy.c: 59: ux = (c-x)/(c-b);
  3650  007614  C03D  F01F         	movff	triangular@c,___ftadd@f2
  3651  007618  C03E  F020         	movff	triangular@c+1,___ftadd@f2+1
  3652  00761C  C03F  F021         	movff	triangular@c+2,___ftadd@f2+2
  3653  007620  C040  F001         	movff	triangular@x,___ftneg@f1
  3654  007624  C041  F002         	movff	triangular@x+1,___ftneg@f1+1
  3655  007628  C042  F003         	movff	triangular@x+2,___ftneg@f1+2
  3656  00762C  EC51  F033         	call	___ftneg	;wreg free
  3657  007630  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3658  007634  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3659  007638  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3660  00763C  EC88  F039         	call	___ftadd	;wreg free
  3661  007640  C01C  F028         	movff	?___ftadd,___ftdiv@f1
  3662  007644  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
  3663  007648  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
  3664  00764C  C03D  F01F         	movff	triangular@c,___ftadd@f2
  3665  007650  C03E  F020         	movff	triangular@c+1,___ftadd@f2+1
  3666  007654  C03F  F021         	movff	triangular@c+2,___ftadd@f2+2
  3667  007658  C03A  F001         	movff	triangular@b,___ftneg@f1
  3668  00765C  C03B  F002         	movff	triangular@b+1,___ftneg@f1+1
  3669  007660  C03C  F003         	movff	triangular@b+2,___ftneg@f1+2
  3670  007664  EC51  F033         	call	___ftneg	;wreg free
  3671  007668  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3672  00766C  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3673  007670  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3674  007674  EC88  F039         	call	___ftadd	;wreg free
  3675  007678  C01C  F02B         	movff	?___ftadd,___ftdiv@f2
  3676  00767C  C01D  F02C         	movff	?___ftadd+1,___ftdiv@f2+1
  3677  007680  C01E  F02D         	movff	?___ftadd+2,___ftdiv@f2+2
  3678  007684  EC74  F036         	call	___ftdiv	;wreg free
  3679  007688  C028  F043         	movff	?___ftdiv,triangular@ux
  3680  00768C  C029  F044         	movff	?___ftdiv+1,triangular@ux+1
  3681  007690  C02A  F045         	movff	?___ftdiv+2,triangular@ux+2
  3682  007694                     l2043:
  3683                           
  3684                           ;fuzzy.c: 60: }
  3685                           ;fuzzy.c: 61: return ux;
  3686  007694  C043  F037         	movff	triangular@ux,?_triangular
  3687  007698  C044  F038         	movff	triangular@ux+1,?_triangular+1
  3688  00769C  C045  F039         	movff	triangular@ux+2,?_triangular+2
  3689  0076A0  0012               	return	
  3690  0076A2                     __end_of_triangular:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           wreg	equ	0xFE8
  3697                           postinc1	equ	0xFE6
  3698                           postdec1	equ	0xFE5
  3699                           fsr1h	equ	0xFE2
  3700                           fsr1l	equ	0xFE1
  3701                           postinc2	equ	0xFDE
  3702                           postdec2	equ	0xFDD
  3703                           fsr2h	equ	0xFDA
  3704                           fsr2l	equ	0xFD9
  3705                           status	equ	0xFD8
  3706                           
  3707 ;; *************** function ___ftneg *****************
  3708 ;; Defined at:
  3709 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  f1              3    0[COMRAM] float 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  3    0[COMRAM] float 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3723 ;;      Params:         3       0       0       0       0       0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3726 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3727 ;;Total ram usage:        3 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_triangular
  3733 ;;		_trapezoidal
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text20
  3738  0066A2                     __ptext20:
  3739                           	opt stack 0
  3740  0066A2                     ___ftneg:
  3741                           	opt stack 28
  3742                           
  3743                           ;incstack = 0
  3744  0066A2  0E7F               	movlw	127
  3745  0066A4  1403               	andwf	___ftneg@f1+2,w,c
  3746  0066A6  1002               	iorwf	___ftneg@f1+1,w,c
  3747  0066A8  1001               	iorwf	___ftneg@f1,w,c
  3748  0066AA  B4D8               	btfsc	status,2,c
  3749  0066AC  D006               	goto	l704
  3750  0066AE  0E00               	movlw	0
  3751  0066B0  1A01               	xorwf	___ftneg@f1,f,c
  3752  0066B2  0E00               	movlw	0
  3753  0066B4  1A02               	xorwf	___ftneg@f1+1,f,c
  3754  0066B6  0E80               	movlw	128
  3755  0066B8  1A03               	xorwf	___ftneg@f1+2,f,c
  3756  0066BA                     l704:
  3757  0066BA  C001  F001         	movff	___ftneg@f1,?___ftneg
  3758  0066BE  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  3759  0066C2  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  3760  0066C6  0012               	return	
  3761  0066C8                     __end_of___ftneg:
  3762                           	opt stack 0
  3763                           tblptru	equ	0xFF8
  3764                           tblptrh	equ	0xFF7
  3765                           tblptrl	equ	0xFF6
  3766                           tablat	equ	0xFF5
  3767                           wreg	equ	0xFE8
  3768                           postinc1	equ	0xFE6
  3769                           postdec1	equ	0xFE5
  3770                           fsr1h	equ	0xFE2
  3771                           fsr1l	equ	0xFE1
  3772                           postinc2	equ	0xFDE
  3773                           postdec2	equ	0xFDD
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function _qualified *****************
  3779 ;; Defined at:
  3780 ;;		line 108 in file "fuzzy.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  y               2   15[COMRAM] PTR 
  3783 ;;		 -> fuzzy_system_single1@qualified_cons_mf3(120), fuzzy_system_single1@qualified_cons_mf2(120), fuzzy_system_single1
      +@qualified_cons_mf1(120), fuzzy_system_single2@qualified_cons_mf3(120), 
  3784 ;;		 -> fuzzy_system_single2@qualified_cons_mf2(120), fuzzy_system_single2@qualified_cons_mf1(120), fuzzy_system_single@
      +qualified_cons_mf3(120), fuzzy_system_single@qualified_cons_mf2(120), 
  3785 ;;		 -> fuzzy_system_single@qualified_cons_mf1(120), fuzzy_system@qualified_cons_mf3(120), fuzzy_system@qualified_cons_m
      +f2(120), fuzzy_system@qualified_cons_mf1(120), 
  3786 ;;  x               2   17[COMRAM] PTR 
  3787 ;;		 -> fuzzy_system_single1@cons_mf3(120), fuzzy_system_single1@cons_mf1(120), fuzzy_system_single2@cons_mf3(120), fuzz
      +y_system_single2@cons_mf1(120), 
  3788 ;;		 -> fuzzy_system_single@cons_mf3(120), fuzzy_system_single@cons_mf2(120), fuzzy_system_single@cons_mf1(120), fuzzy_s
      +ystem@cons_mf3(120), 
  3789 ;;		 -> fuzzy_system@cons_mf2(120), fuzzy_system@cons_mf1(120), 
  3790 ;;  w               3   19[COMRAM] PTR 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  min             3   22[COMRAM] PTR 
  3793 ;;  i               2   25[COMRAM] int 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;		None               void
  3796 ;; Registers used:
  3797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3803 ;;      Params:         7       0       0       0       0       0       0       0       0
  3804 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3806 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3807 ;;Total ram usage:       12 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    1
  3810 ;; This function calls:
  3811 ;;		___ftge
  3812 ;;		___wmul
  3813 ;; This function is called by:
  3814 ;;		_fuzzy_system_single2
  3815 ;;		_fuzzy_system_single1
  3816 ;;		_fuzzy_system
  3817 ;;		_fuzzy_system_single
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text21
  3822  006EA2                     __ptext21:
  3823                           	opt stack 0
  3824  006EA2                     _qualified:
  3825                           	opt stack 28
  3826                           
  3827                           ;fuzzy.c: 110: double min;
  3828                           ;fuzzy.c: 111: int i;
  3829                           ;fuzzy.c: 112: min=w;
  3830                           
  3831                           ;incstack = 0
  3832  006EA2  C014  F017         	movff	qualified@w,qualified@min
  3833  006EA6  C015  F018         	movff	qualified@w+1,qualified@min+1
  3834  006EAA  C016  F019         	movff	qualified@w+2,qualified@min+2
  3835                           
  3836                           ;fuzzy.c: 113: for(i=0;i<40;i++){
  3837  006EAE  0E00               	movlw	0
  3838  006EB0  6E1B               	movwf	qualified@i+1,c
  3839  006EB2  0E00               	movlw	0
  3840  006EB4  6E1A               	movwf	qualified@i,c
  3841  006EB6  501B               	movf	qualified@i+1,w,c
  3842  006EB8  0A80               	xorlw	128
  3843  006EBA  0F80               	addlw	-128
  3844  006EBC  0E28               	movlw	40
  3845  006EBE  B4D8               	btfsc	status,2,c
  3846  006EC0  5C1A               	subwf	qualified@i,w,c
  3847  006EC2  B0D8               	btfsc	status,0,c
  3848  006EC4  D061               	goto	l117
  3849                           
  3850                           ;fuzzy.c: 114: if (x[i] < w)
  3851  006EC6  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3852  006ECA  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3853  006ECE  0E00               	movlw	0
  3854  006ED0  6E04               	movwf	___wmul@multiplicand+1,c
  3855  006ED2  0E03               	movlw	3
  3856  006ED4  6E03               	movwf	___wmul@multiplicand,c
  3857  006ED6  EC3E  F033         	call	___wmul	;wreg free
  3858  006EDA  5001               	movf	?___wmul,w,c
  3859  006EDC  2412               	addwf	qualified@x,w,c
  3860  006EDE  6ED9               	movwf	fsr2l,c
  3861  006EE0  5002               	movf	?___wmul+1,w,c
  3862  006EE2  2013               	addwfc	qualified@x+1,w,c
  3863  006EE4  6EDA               	movwf	fsr2h,c
  3864  006EE6  CFDE F007          	movff	postinc2,___ftge@ff1
  3865  006EEA  CFDE F008          	movff	postinc2,___ftge@ff1+1
  3866  006EEE  CFDD F009          	movff	postdec2,___ftge@ff1+2
  3867  006EF2  C014  F00A         	movff	qualified@w,___ftge@ff2
  3868  006EF6  C015  F00B         	movff	qualified@w+1,___ftge@ff2+1
  3869  006EFA  C016  F00C         	movff	qualified@w+2,___ftge@ff2+2
  3870  006EFE  EC5E  F034         	call	___ftge	;wreg free
  3871  006F02  B0D8               	btfsc	status,0,c
  3872  006F04  D028               	goto	l2311
  3873                           
  3874                           ;fuzzy.c: 115: y[i] = x[i];
  3875  006F06  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3876  006F0A  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3877  006F0E  0E00               	movlw	0
  3878  006F10  6E04               	movwf	___wmul@multiplicand+1,c
  3879  006F12  0E03               	movlw	3
  3880  006F14  6E03               	movwf	___wmul@multiplicand,c
  3881  006F16  EC3E  F033         	call	___wmul	;wreg free
  3882  006F1A  5001               	movf	?___wmul,w,c
  3883  006F1C  2412               	addwf	qualified@x,w,c
  3884  006F1E  6ED9               	movwf	fsr2l,c
  3885  006F20  5002               	movf	?___wmul+1,w,c
  3886  006F22  2013               	addwfc	qualified@x+1,w,c
  3887  006F24  6EDA               	movwf	fsr2h,c
  3888  006F26  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3889  006F2A  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3890  006F2E  0E00               	movlw	0
  3891  006F30  6E04               	movwf	___wmul@multiplicand+1,c
  3892  006F32  0E03               	movlw	3
  3893  006F34  6E03               	movwf	___wmul@multiplicand,c
  3894  006F36  EC3E  F033         	call	___wmul	;wreg free
  3895  006F3A  5001               	movf	?___wmul,w,c
  3896  006F3C  2410               	addwf	qualified@y,w,c
  3897  006F3E  6EE1               	movwf	fsr1l,c
  3898  006F40  5002               	movf	?___wmul+1,w,c
  3899  006F42  2011               	addwfc	qualified@y+1,w,c
  3900  006F44  6EE2               	movwf	fsr1h,c
  3901  006F46  CFDE FFE6          	movff	postinc2,postinc1
  3902  006F4A  CFDE FFE6          	movff	postinc2,postinc1
  3903  006F4E  CFDE FFE5          	movff	postinc2,postdec1
  3904  006F52  52E5               	movf	postdec1,f,c
  3905  006F54  D016               	goto	l2313
  3906  006F56                     l2311:
  3907                           
  3908                           ;fuzzy.c: 116: else
  3909                           ;fuzzy.c: 117: y[i] = w;
  3910  006F56  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3911  006F5A  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3912  006F5E  0E00               	movlw	0
  3913  006F60  6E04               	movwf	___wmul@multiplicand+1,c
  3914  006F62  0E03               	movlw	3
  3915  006F64  6E03               	movwf	___wmul@multiplicand,c
  3916  006F66  EC3E  F033         	call	___wmul	;wreg free
  3917  006F6A  5001               	movf	?___wmul,w,c
  3918  006F6C  2410               	addwf	qualified@y,w,c
  3919  006F6E  6ED9               	movwf	fsr2l,c
  3920  006F70  5002               	movf	?___wmul+1,w,c
  3921  006F72  2011               	addwfc	qualified@y+1,w,c
  3922  006F74  6EDA               	movwf	fsr2h,c
  3923  006F76  C014  FFDE         	movff	qualified@w,postinc2
  3924  006F7A  C015  FFDE         	movff	qualified@w+1,postinc2
  3925  006F7E  C016  FFDD         	movff	qualified@w+2,postdec2
  3926  006F82                     l2313:
  3927  006F82  4A1A               	infsnz	qualified@i,f,c
  3928  006F84  2A1B               	incf	qualified@i+1,f,c
  3929  006F86  D797               	goto	L8
  3930  006F88                     l117:
  3931  006F88  0012               	return	
  3932  006F8A                     __end_of_qualified:
  3933                           	opt stack 0
  3934                           tblptru	equ	0xFF8
  3935                           tblptrh	equ	0xFF7
  3936                           tblptrl	equ	0xFF6
  3937                           tablat	equ	0xFF5
  3938                           wreg	equ	0xFE8
  3939                           postinc1	equ	0xFE6
  3940                           postdec1	equ	0xFE5
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           postinc2	equ	0xFDE
  3944                           postdec2	equ	0xFDD
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8
  3948                           
  3949 ;; *************** function _out_mf *****************
  3950 ;; Defined at:
  3951 ;;		line 123 in file "fuzzy.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  result          2   15[COMRAM] PTR 
  3954 ;;		 -> fuzzy_system_single1@overall_out_mf(120), fuzzy_system_single2@overall_out_mf(120), fuzzy_system_single@overall_
      +out_mf(120), fuzzy_system@overall_out_mf(120), 
  3955 ;;  x               2   17[COMRAM] PTR 
  3956 ;;		 -> fuzzy_system_single1@qualified_cons_mf1(120), fuzzy_system_single2@qualified_cons_mf1(120), fuzzy_system_single@
      +qualified_cons_mf1(120), fuzzy_system@qualified_cons_mf1(120), 
  3957 ;;  y               2   19[COMRAM] PTR 
  3958 ;;		 -> fuzzy_system_single1@qualified_cons_mf2(120), fuzzy_system_single2@qualified_cons_mf2(120), fuzzy_system_single@
      +qualified_cons_mf2(120), fuzzy_system@qualified_cons_mf2(120), 
  3959 ;;  z               2   21[COMRAM] PTR 
  3960 ;;		 -> fuzzy_system_single1@qualified_cons_mf3(120), fuzzy_system_single2@qualified_cons_mf3(120), fuzzy_system_single@
      +qualified_cons_mf3(120), fuzzy_system@qualified_cons_mf3(120), 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  i               2   23[COMRAM] int 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;		None               void
  3965 ;; Registers used:
  3966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3972 ;;      Params:         8       0       0       0       0       0       0       0       0
  3973 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3975 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3976 ;;Total ram usage:       10 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    1
  3979 ;; This function calls:
  3980 ;;		___ftge
  3981 ;;		___wmul
  3982 ;; This function is called by:
  3983 ;;		_fuzzy_system_single2
  3984 ;;		_fuzzy_system_single1
  3985 ;;		_fuzzy_system
  3986 ;;		_fuzzy_system_single
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text22
  3991  0076A2                     __ptext22:
  3992                           	opt stack 0
  3993  0076A2                     _out_mf:
  3994                           	opt stack 28
  3995                           
  3996                           ;fuzzy.c: 125: int i;
  3997                           ;fuzzy.c: 126: for(i=0; i<40;i++){
  3998                           
  3999                           ;incstack = 0
  4000  0076A2  0E00               	movlw	0
  4001  0076A4  6E19               	movwf	out_mf@i+1,c
  4002  0076A6  0E00               	movlw	0
  4003  0076A8  6E18               	movwf	out_mf@i,c
  4004  0076AA  5019               	movf	out_mf@i+1,w,c
  4005  0076AC  0A80               	xorlw	128
  4006  0076AE  0F80               	addlw	-128
  4007  0076B0  0E28               	movlw	40
  4008  0076B2  B4D8               	btfsc	status,2,c
  4009  0076B4  5C18               	subwf	out_mf@i,w,c
  4010  0076B6  B0D8               	btfsc	status,0,c
  4011  0076B8  D120               	goto	l126
  4012                           
  4013                           ;fuzzy.c: 127: if(x[i] > y[i] && x[i] > z[i])
  4014  0076BA  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4015  0076BE  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4016  0076C2  0E00               	movlw	0
  4017  0076C4  6E04               	movwf	___wmul@multiplicand+1,c
  4018  0076C6  0E03               	movlw	3
  4019  0076C8  6E03               	movwf	___wmul@multiplicand,c
  4020  0076CA  EC3E  F033         	call	___wmul	;wreg free
  4021  0076CE  5001               	movf	?___wmul,w,c
  4022  0076D0  2414               	addwf	out_mf@y,w,c
  4023  0076D2  6ED9               	movwf	fsr2l,c
  4024  0076D4  5002               	movf	?___wmul+1,w,c
  4025  0076D6  2015               	addwfc	out_mf@y+1,w,c
  4026  0076D8  6EDA               	movwf	fsr2h,c
  4027  0076DA  CFDE F007          	movff	postinc2,___ftge@ff1
  4028  0076DE  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4029  0076E2  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4030  0076E6  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4031  0076EA  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4032  0076EE  0E00               	movlw	0
  4033  0076F0  6E04               	movwf	___wmul@multiplicand+1,c
  4034  0076F2  0E03               	movlw	3
  4035  0076F4  6E03               	movwf	___wmul@multiplicand,c
  4036  0076F6  EC3E  F033         	call	___wmul	;wreg free
  4037  0076FA  5001               	movf	?___wmul,w,c
  4038  0076FC  2412               	addwf	out_mf@x,w,c
  4039  0076FE  6ED9               	movwf	fsr2l,c
  4040  007700  5002               	movf	?___wmul+1,w,c
  4041  007702  2013               	addwfc	out_mf@x+1,w,c
  4042  007704  6EDA               	movwf	fsr2h,c
  4043  007706  CFDE F00A          	movff	postinc2,___ftge@ff2
  4044  00770A  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4045  00770E  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4046  007712  EC5E  F034         	call	___ftge	;wreg free
  4047  007716  B0D8               	btfsc	status,0,c
  4048  007718  D04B               	goto	l2329
  4049  00771A  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4050  00771E  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4051  007722  0E00               	movlw	0
  4052  007724  6E04               	movwf	___wmul@multiplicand+1,c
  4053  007726  0E03               	movlw	3
  4054  007728  6E03               	movwf	___wmul@multiplicand,c
  4055  00772A  EC3E  F033         	call	___wmul	;wreg free
  4056  00772E  5001               	movf	?___wmul,w,c
  4057  007730  2416               	addwf	out_mf@z,w,c
  4058  007732  6ED9               	movwf	fsr2l,c
  4059  007734  5002               	movf	?___wmul+1,w,c
  4060  007736  2017               	addwfc	out_mf@z+1,w,c
  4061  007738  6EDA               	movwf	fsr2h,c
  4062  00773A  CFDE F007          	movff	postinc2,___ftge@ff1
  4063  00773E  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4064  007742  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4065  007746  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4066  00774A  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4067  00774E  0E00               	movlw	0
  4068  007750  6E04               	movwf	___wmul@multiplicand+1,c
  4069  007752  0E03               	movlw	3
  4070  007754  6E03               	movwf	___wmul@multiplicand,c
  4071  007756  EC3E  F033         	call	___wmul	;wreg free
  4072  00775A  5001               	movf	?___wmul,w,c
  4073  00775C  2412               	addwf	out_mf@x,w,c
  4074  00775E  6ED9               	movwf	fsr2l,c
  4075  007760  5002               	movf	?___wmul+1,w,c
  4076  007762  2013               	addwfc	out_mf@x+1,w,c
  4077  007764  6EDA               	movwf	fsr2h,c
  4078  007766  CFDE F00A          	movff	postinc2,___ftge@ff2
  4079  00776A  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4080  00776E  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4081  007772  EC5E  F034         	call	___ftge	;wreg free
  4082  007776  B0D8               	btfsc	status,0,c
  4083  007778  D01B               	goto	l2329
  4084                           
  4085                           ;fuzzy.c: 128: {
  4086                           ;fuzzy.c: 130: result[i]=x[i];
  4087  00777A  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4088  00777E  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4089  007782  0E00               	movlw	0
  4090  007784  6E04               	movwf	___wmul@multiplicand+1,c
  4091  007786  0E03               	movlw	3
  4092  007788  6E03               	movwf	___wmul@multiplicand,c
  4093  00778A  EC3E  F033         	call	___wmul	;wreg free
  4094  00778E  5001               	movf	?___wmul,w,c
  4095  007790  2412               	addwf	out_mf@x,w,c
  4096  007792  6ED9               	movwf	fsr2l,c
  4097  007794  5002               	movf	?___wmul+1,w,c
  4098  007796  2013               	addwfc	out_mf@x+1,w,c
  4099  007798  6EDA               	movwf	fsr2h,c
  4100  00779A  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4101  00779E  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4102  0077A2  0E00               	movlw	0
  4103  0077A4  6E04               	movwf	___wmul@multiplicand+1,c
  4104  0077A6  0E03               	movlw	3
  4105  0077A8  6E03               	movwf	___wmul@multiplicand,c
  4106  0077AA  EC3E  F033         	call	___wmul	;wreg free
  4107  0077AE  D095               	goto	L10
  4108  0077B0                     l2329:
  4109                           
  4110                           ;fuzzy.c: 132: else
  4111                           ;fuzzy.c: 133: {
  4112                           ;fuzzy.c: 134: if( y[i] > x[i] && y[i] > z[i]){
  4113  0077B0  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4114  0077B4  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4115  0077B8  0E00               	movlw	0
  4116  0077BA  6E04               	movwf	___wmul@multiplicand+1,c
  4117  0077BC  0E03               	movlw	3
  4118  0077BE  6E03               	movwf	___wmul@multiplicand,c
  4119  0077C0  EC3E  F033         	call	___wmul	;wreg free
  4120  0077C4  5001               	movf	?___wmul,w,c
  4121  0077C6  2412               	addwf	out_mf@x,w,c
  4122  0077C8  6ED9               	movwf	fsr2l,c
  4123  0077CA  5002               	movf	?___wmul+1,w,c
  4124  0077CC  2013               	addwfc	out_mf@x+1,w,c
  4125  0077CE  6EDA               	movwf	fsr2h,c
  4126  0077D0  CFDE F007          	movff	postinc2,___ftge@ff1
  4127  0077D4  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4128  0077D8  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4129  0077DC  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4130  0077E0  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4131  0077E4  0E00               	movlw	0
  4132  0077E6  6E04               	movwf	___wmul@multiplicand+1,c
  4133  0077E8  0E03               	movlw	3
  4134  0077EA  6E03               	movwf	___wmul@multiplicand,c
  4135  0077EC  EC3E  F033         	call	___wmul	;wreg free
  4136  0077F0  5001               	movf	?___wmul,w,c
  4137  0077F2  2414               	addwf	out_mf@y,w,c
  4138  0077F4  6ED9               	movwf	fsr2l,c
  4139  0077F6  5002               	movf	?___wmul+1,w,c
  4140  0077F8  2015               	addwfc	out_mf@y+1,w,c
  4141  0077FA  6EDA               	movwf	fsr2h,c
  4142  0077FC  CFDE F00A          	movff	postinc2,___ftge@ff2
  4143  007800  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4144  007804  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4145  007808  EC5E  F034         	call	___ftge	;wreg free
  4146  00780C  B0D8               	btfsc	status,0,c
  4147  00780E  D04B               	goto	l2335
  4148  007810  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4149  007814  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4150  007818  0E00               	movlw	0
  4151  00781A  6E04               	movwf	___wmul@multiplicand+1,c
  4152  00781C  0E03               	movlw	3
  4153  00781E  6E03               	movwf	___wmul@multiplicand,c
  4154  007820  EC3E  F033         	call	___wmul	;wreg free
  4155  007824  5001               	movf	?___wmul,w,c
  4156  007826  2416               	addwf	out_mf@z,w,c
  4157  007828  6ED9               	movwf	fsr2l,c
  4158  00782A  5002               	movf	?___wmul+1,w,c
  4159  00782C  2017               	addwfc	out_mf@z+1,w,c
  4160  00782E  6EDA               	movwf	fsr2h,c
  4161  007830  CFDE F007          	movff	postinc2,___ftge@ff1
  4162  007834  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4163  007838  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4164  00783C  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4165  007840  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4166  007844  0E00               	movlw	0
  4167  007846  6E04               	movwf	___wmul@multiplicand+1,c
  4168  007848  0E03               	movlw	3
  4169  00784A  6E03               	movwf	___wmul@multiplicand,c
  4170  00784C  EC3E  F033         	call	___wmul	;wreg free
  4171  007850  5001               	movf	?___wmul,w,c
  4172  007852  2414               	addwf	out_mf@y,w,c
  4173  007854  6ED9               	movwf	fsr2l,c
  4174  007856  5002               	movf	?___wmul+1,w,c
  4175  007858  2015               	addwfc	out_mf@y+1,w,c
  4176  00785A  6EDA               	movwf	fsr2h,c
  4177  00785C  CFDE F00A          	movff	postinc2,___ftge@ff2
  4178  007860  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4179  007864  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4180  007868  EC5E  F034         	call	___ftge	;wreg free
  4181  00786C  B0D8               	btfsc	status,0,c
  4182  00786E  D01B               	goto	l2335
  4183                           
  4184                           ;fuzzy.c: 136: result[i]=y[i];
  4185  007870  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4186  007874  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4187  007878  0E00               	movlw	0
  4188  00787A  6E04               	movwf	___wmul@multiplicand+1,c
  4189  00787C  0E03               	movlw	3
  4190  00787E  6E03               	movwf	___wmul@multiplicand,c
  4191  007880  EC3E  F033         	call	___wmul	;wreg free
  4192  007884  5001               	movf	?___wmul,w,c
  4193  007886  2414               	addwf	out_mf@y,w,c
  4194  007888  6ED9               	movwf	fsr2l,c
  4195  00788A  5002               	movf	?___wmul+1,w,c
  4196  00788C  2015               	addwfc	out_mf@y+1,w,c
  4197  00788E  6EDA               	movwf	fsr2h,c
  4198  007890  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4199  007894  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4200  007898  0E00               	movlw	0
  4201  00789A  6E04               	movwf	___wmul@multiplicand+1,c
  4202  00789C  0E03               	movlw	3
  4203  00789E  6E03               	movwf	___wmul@multiplicand,c
  4204  0078A0  EC3E  F033         	call	___wmul	;wreg free
  4205  0078A4  D01A               	goto	L10
  4206  0078A6                     l2335:
  4207                           
  4208                           ;fuzzy.c: 138: else
  4209                           ;fuzzy.c: 139: {
  4210                           ;fuzzy.c: 141: result[i]=z[i];
  4211  0078A6  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4212  0078AA  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4213  0078AE  0E00               	movlw	0
  4214  0078B0  6E04               	movwf	___wmul@multiplicand+1,c
  4215  0078B2  0E03               	movlw	3
  4216  0078B4  6E03               	movwf	___wmul@multiplicand,c
  4217  0078B6  EC3E  F033         	call	___wmul	;wreg free
  4218  0078BA  5001               	movf	?___wmul,w,c
  4219  0078BC  2416               	addwf	out_mf@z,w,c
  4220  0078BE  6ED9               	movwf	fsr2l,c
  4221  0078C0  5002               	movf	?___wmul+1,w,c
  4222  0078C2  2017               	addwfc	out_mf@z+1,w,c
  4223  0078C4  6EDA               	movwf	fsr2h,c
  4224  0078C6  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4225  0078CA  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4226  0078CE  0E00               	movlw	0
  4227  0078D0  6E04               	movwf	___wmul@multiplicand+1,c
  4228  0078D2  0E03               	movlw	3
  4229  0078D4  6E03               	movwf	___wmul@multiplicand,c
  4230  0078D6  EC3E  F033         	call	___wmul	;wreg free
  4231  0078DA                     L10:
  4232  0078DA  5001               	movf	?___wmul,w,c
  4233  0078DC  2410               	addwf	out_mf@result,w,c
  4234  0078DE  6EE1               	movwf	fsr1l,c
  4235  0078E0  5002               	movf	?___wmul+1,w,c
  4236  0078E2  2011               	addwfc	out_mf@result+1,w,c
  4237  0078E4  6EE2               	movwf	fsr1h,c
  4238  0078E6  CFDE FFE6          	movff	postinc2,postinc1
  4239  0078EA  CFDE FFE6          	movff	postinc2,postinc1
  4240  0078EE  CFDE FFE5          	movff	postinc2,postdec1
  4241  0078F2  52E5               	movf	postdec1,f,c
  4242  0078F4  4A18               	infsnz	out_mf@i,f,c
  4243  0078F6  2A19               	incf	out_mf@i+1,f,c
  4244  0078F8  D6D8               	goto	L11
  4245  0078FA                     l126:
  4246  0078FA  0012               	return	
  4247  0078FC                     __end_of_out_mf:
  4248                           	opt stack 0
  4249                           tblptru	equ	0xFF8
  4250                           tblptrh	equ	0xFF7
  4251                           tblptrl	equ	0xFF6
  4252                           tablat	equ	0xFF5
  4253                           wreg	equ	0xFE8
  4254                           postinc1	equ	0xFE6
  4255                           postdec1	equ	0xFE5
  4256                           fsr1h	equ	0xFE2
  4257                           fsr1l	equ	0xFE1
  4258                           postinc2	equ	0xFDE
  4259                           postdec2	equ	0xFDD
  4260                           fsr2h	equ	0xFDA
  4261                           fsr2l	equ	0xFD9
  4262                           status	equ	0xFD8
  4263                           
  4264 ;; *************** function ___ftge *****************
  4265 ;; Defined at:
  4266 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  ff1             3    6[COMRAM] float 
  4269 ;;  ff2             3    9[COMRAM] float 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;		None               void
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4281 ;;      Params:         6       0       0       0       0       0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4283 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4284 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4285 ;;Total ram usage:        9 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_triangular
  4291 ;;		_qualified
  4292 ;;		_out_mf
  4293 ;;		_minimo
  4294 ;;		_maximo
  4295 ;;		_trapezoidal
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text23
  4300  0068BC                     __ptext23:
  4301                           	opt stack 0
  4302  0068BC                     ___ftge:
  4303                           	opt stack 28
  4304                           
  4305                           ;incstack = 0
  4306  0068BC  AE09               	btfss	___ftge@ff1+2,7,c
  4307  0068BE  D016               	goto	l2003
  4308  0068C0  C007  F00D         	movff	___ftge@ff1,??___ftge
  4309  0068C4  C008  F00E         	movff	___ftge@ff1+1,??___ftge+1
  4310  0068C8  C009  F00F         	movff	___ftge@ff1+2,??___ftge+2
  4311  0068CC  1E0D               	comf	??___ftge,f,c
  4312  0068CE  1E0E               	comf	??___ftge+1,f,c
  4313  0068D0  1E0F               	comf	??___ftge+2,f,c
  4314  0068D2  2A0D               	incf	??___ftge,f,c
  4315  0068D4  0E00               	movlw	0
  4316  0068D6  220E               	addwfc	??___ftge+1,f,c
  4317  0068D8  220F               	addwfc	??___ftge+2,f,c
  4318  0068DA  0E00               	movlw	0
  4319  0068DC  240D               	addwf	??___ftge,w,c
  4320  0068DE  6E07               	movwf	___ftge@ff1,c
  4321  0068E0  0E00               	movlw	0
  4322  0068E2  200E               	addwfc	??___ftge+1,w,c
  4323  0068E4  6E08               	movwf	___ftge@ff1+1,c
  4324  0068E6  0E80               	movlw	128
  4325  0068E8  200F               	addwfc	??___ftge+2,w,c
  4326  0068EA  6E09               	movwf	___ftge@ff1+2,c
  4327  0068EC                     l2003:
  4328  0068EC  AE0C               	btfss	___ftge@ff2+2,7,c
  4329  0068EE  D016               	goto	l2007
  4330  0068F0  C00A  F00D         	movff	___ftge@ff2,??___ftge
  4331  0068F4  C00B  F00E         	movff	___ftge@ff2+1,??___ftge+1
  4332  0068F8  C00C  F00F         	movff	___ftge@ff2+2,??___ftge+2
  4333  0068FC  1E0D               	comf	??___ftge,f,c
  4334  0068FE  1E0E               	comf	??___ftge+1,f,c
  4335  006900  1E0F               	comf	??___ftge+2,f,c
  4336  006902  2A0D               	incf	??___ftge,f,c
  4337  006904  0E00               	movlw	0
  4338  006906  220E               	addwfc	??___ftge+1,f,c
  4339  006908  220F               	addwfc	??___ftge+2,f,c
  4340  00690A  0E00               	movlw	0
  4341  00690C  240D               	addwf	??___ftge,w,c
  4342  00690E  6E0A               	movwf	___ftge@ff2,c
  4343  006910  0E00               	movlw	0
  4344  006912  200E               	addwfc	??___ftge+1,w,c
  4345  006914  6E0B               	movwf	___ftge@ff2+1,c
  4346  006916  0E80               	movlw	128
  4347  006918  200F               	addwfc	??___ftge+2,w,c
  4348  00691A  6E0C               	movwf	___ftge@ff2+2,c
  4349  00691C                     l2007:
  4350  00691C  0E00               	movlw	0
  4351  00691E  1A07               	xorwf	___ftge@ff1,f,c
  4352  006920  0E00               	movlw	0
  4353  006922  1A08               	xorwf	___ftge@ff1+1,f,c
  4354  006924  0E80               	movlw	128
  4355  006926  1A09               	xorwf	___ftge@ff1+2,f,c
  4356  006928  0E00               	movlw	0
  4357  00692A  1A0A               	xorwf	___ftge@ff2,f,c
  4358  00692C  0E00               	movlw	0
  4359  00692E  1A0B               	xorwf	___ftge@ff2+1,f,c
  4360  006930  0E80               	movlw	128
  4361  006932  1A0C               	xorwf	___ftge@ff2+2,f,c
  4362  006934  500A               	movf	___ftge@ff2,w,c
  4363  006936  5C07               	subwf	___ftge@ff1,w,c
  4364  006938  500B               	movf	___ftge@ff2+1,w,c
  4365  00693A  5808               	subwfb	___ftge@ff1+1,w,c
  4366  00693C  500C               	movf	___ftge@ff2+2,w,c
  4367  00693E  5809               	subwfb	___ftge@ff1+2,w,c
  4368  006940  B0D8               	btfsc	status,0,c
  4369  006942  D002               	goto	l2013
  4370  006944  90D8               	bcf	status,0,c
  4371  006946  D001               	goto	l688
  4372  006948                     l2013:
  4373  006948  80D8               	bsf	status,0,c
  4374  00694A                     l688:
  4375  00694A  0012               	return	
  4376  00694C                     __end_of___ftge:
  4377                           	opt stack 0
  4378                           tblptru	equ	0xFF8
  4379                           tblptrh	equ	0xFF7
  4380                           tblptrl	equ	0xFF6
  4381                           tablat	equ	0xFF5
  4382                           wreg	equ	0xFE8
  4383                           postinc1	equ	0xFE6
  4384                           postdec1	equ	0xFE5
  4385                           fsr1h	equ	0xFE2
  4386                           fsr1l	equ	0xFE1
  4387                           postinc2	equ	0xFDE
  4388                           postdec2	equ	0xFDD
  4389                           fsr2h	equ	0xFDA
  4390                           fsr2l	equ	0xFD9
  4391                           status	equ	0xFD8
  4392                           
  4393 ;; *************** function _linspace *****************
  4394 ;; Defined at:
  4395 ;;		line 12 in file "fuzzy.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  x               2   54[COMRAM] PTR 
  4398 ;;		 -> fuzzy_system_single1@y(120), fuzzy_system_single1@x(120), fuzzy_system_single2@y(120), fuzzy_system_single2@x(12
      +0), 
  4399 ;;		 -> fuzzy_system_single@y(120), fuzzy_system_single@x(120), fuzzy_system@y(120), fuzzy_system@x(120), 
  4400 ;;  start           3   56[COMRAM] PTR 
  4401 ;;  end             3   59[COMRAM] PTR 
  4402 ;;  size            2   62[COMRAM] int 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  i               2   66[COMRAM] int 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;		None               void
  4407 ;; Registers used:
  4408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4414 ;;      Params:        10       0       0       0       0       0       0       0       0
  4415 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4416 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4417 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4418 ;;Total ram usage:       14 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    2
  4421 ;; This function calls:
  4422 ;;		___awtoft
  4423 ;;		___ftadd
  4424 ;;		___ftdiv
  4425 ;;		___ftmul
  4426 ;;		___wmul
  4427 ;; This function is called by:
  4428 ;;		_fuzzy_system_single2
  4429 ;;		_fuzzy_system_single1
  4430 ;;		_fuzzy_system
  4431 ;;		_fuzzy_system_single
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text24
  4436  006F8A                     __ptext24:
  4437                           	opt stack 0
  4438  006F8A                     _linspace:
  4439                           	opt stack 27
  4440                           
  4441                           ;fuzzy.c: 14: int i;
  4442                           ;fuzzy.c: 15: for (i=0; i<size; i++)
  4443                           
  4444                           ;incstack = 0
  4445  006F8A  0E00               	movlw	0
  4446  006F8C  6E44               	movwf	linspace@i+1,c
  4447  006F8E  0E00               	movlw	0
  4448  006F90  6E43               	movwf	linspace@i,c
  4449  006F92  D071               	goto	l2245
  4450  006F94                     l2241:
  4451                           
  4452                           ;fuzzy.c: 16: x[i] = ( i*end + (size-1-i)*start ) / (size-1);
  4453  006F94  C043  F001         	movff	linspace@i,___wmul@multiplier
  4454  006F98  C044  F002         	movff	linspace@i+1,___wmul@multiplier+1
  4455  006F9C  0E00               	movlw	0
  4456  006F9E  6E04               	movwf	___wmul@multiplicand+1,c
  4457  006FA0  0E03               	movlw	3
  4458  006FA2  6E03               	movwf	___wmul@multiplicand,c
  4459  006FA4  EC3E  F033         	call	___wmul	;wreg free
  4460  006FA8  5001               	movf	?___wmul,w,c
  4461  006FAA  2437               	addwf	linspace@x,w,c
  4462  006FAC  6ED9               	movwf	fsr2l,c
  4463  006FAE  5002               	movf	?___wmul+1,w,c
  4464  006FB0  2038               	addwfc	linspace@x+1,w,c
  4465  006FB2  6EDA               	movwf	fsr2h,c
  4466  006FB4  C039  F010         	movff	linspace@start,___ftmul@f2
  4467  006FB8  C03A  F011         	movff	linspace@start+1,___ftmul@f2+1
  4468  006FBC  C03B  F012         	movff	linspace@start+2,___ftmul@f2+2
  4469  006FC0  0E01               	movlw	1
  4470  006FC2  2443               	addwf	linspace@i,w,c
  4471  006FC4  6E41               	movwf	??_linspace& (0+255),c
  4472  006FC6  0E00               	movlw	0
  4473  006FC8  2044               	addwfc	linspace@i+1,w,c
  4474  006FCA  6E42               	movwf	(??_linspace+1)& (0+255),c
  4475  006FCC  1E41               	comf	??_linspace,f,c
  4476  006FCE  1E42               	comf	??_linspace+1,f,c
  4477  006FD0  4A41               	infsnz	??_linspace,f,c
  4478  006FD2  2A42               	incf	??_linspace+1,f,c
  4479  006FD4  503F               	movf	linspace@size,w,c
  4480  006FD6  2441               	addwf	??_linspace,w,c
  4481  006FD8  6E09               	movwf	___awtoft@c,c
  4482  006FDA  5040               	movf	linspace@size+1,w,c
  4483  006FDC  2042               	addwfc	??_linspace+1,w,c
  4484  006FDE  6E0A               	movwf	___awtoft@c+1,c
  4485  006FE0  ECD0  F033         	call	___awtoft	;wreg free
  4486  006FE4  C009  F00D         	movff	?___awtoft,___ftmul@f1
  4487  006FE8  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  4488  006FEC  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  4489  006FF0  ECDF  F036         	call	___ftmul	;wreg free
  4490  006FF4  C00D  F01F         	movff	?___ftmul,___ftadd@f2
  4491  006FF8  C00E  F020         	movff	?___ftmul+1,___ftadd@f2+1
  4492  006FFC  C00F  F021         	movff	?___ftmul+2,___ftadd@f2+2
  4493  007000  C03C  F010         	movff	linspace@end,___ftmul@f2
  4494  007004  C03D  F011         	movff	linspace@end+1,___ftmul@f2+1
  4495  007008  C03E  F012         	movff	linspace@end+2,___ftmul@f2+2
  4496  00700C  C043  F009         	movff	linspace@i,___awtoft@c
  4497  007010  C044  F00A         	movff	linspace@i+1,___awtoft@c+1
  4498  007014  ECD0  F033         	call	___awtoft	;wreg free
  4499  007018  C009  F00D         	movff	?___awtoft,___ftmul@f1
  4500  00701C  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  4501  007020  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  4502  007024  ECDF  F036         	call	___ftmul	;wreg free
  4503  007028  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  4504  00702C  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  4505  007030  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  4506  007034  EC88  F039         	call	___ftadd	;wreg free
  4507  007038  C01C  F028         	movff	?___ftadd,___ftdiv@f1
  4508  00703C  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
  4509  007040  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
  4510  007044  0EFF               	movlw	255
  4511  007046  243F               	addwf	linspace@size,w,c
  4512  007048  6E09               	movwf	___awtoft@c,c
  4513  00704A  0EFF               	movlw	255
  4514  00704C  2040               	addwfc	linspace@size+1,w,c
  4515  00704E  6E0A               	movwf	___awtoft@c+1,c
  4516  007050  ECD0  F033         	call	___awtoft	;wreg free
  4517  007054  C009  F02B         	movff	?___awtoft,___ftdiv@f2
  4518  007058  C00A  F02C         	movff	?___awtoft+1,___ftdiv@f2+1
  4519  00705C  C00B  F02D         	movff	?___awtoft+2,___ftdiv@f2+2
  4520  007060  EC74  F036         	call	___ftdiv	;wreg free
  4521  007064  C028  FFDE         	movff	?___ftdiv,postinc2
  4522  007068  C029  FFDE         	movff	?___ftdiv+1,postinc2
  4523  00706C  C02A  FFDD         	movff	?___ftdiv+2,postdec2
  4524  007070  52DD               	movf	postdec2,f,c
  4525  007072  4A43               	infsnz	linspace@i,f,c
  4526  007074  2A44               	incf	linspace@i+1,f,c
  4527  007076                     l2245:
  4528  007076  5044               	movf	linspace@i+1,w,c
  4529  007078  0A80               	xorlw	128
  4530  00707A  6E41               	movwf	??_linspace& (0+255),c
  4531  00707C  503F               	movf	linspace@size,w,c
  4532  00707E  5C43               	subwf	linspace@i,w,c
  4533  007080  5040               	movf	linspace@size+1,w,c
  4534  007082  0A80               	xorlw	128
  4535  007084  5841               	subwfb	??_linspace& (0+255),w,c
  4536  007086  B0D8               	btfsc	status,0,c
  4537                           
  4538                           ;fuzzy.c: 17: return;
  4539  007088  0012               	return	
  4540  00708A  D784               	goto	l2241
  4541  00708C                     __end_of_linspace:
  4542                           	opt stack 0
  4543                           tblptru	equ	0xFF8
  4544                           tblptrh	equ	0xFF7
  4545                           tblptrl	equ	0xFF6
  4546                           tablat	equ	0xFF5
  4547                           wreg	equ	0xFE8
  4548                           postinc1	equ	0xFE6
  4549                           postdec1	equ	0xFE5
  4550                           fsr1h	equ	0xFE2
  4551                           fsr1l	equ	0xFE1
  4552                           postinc2	equ	0xFDE
  4553                           postdec2	equ	0xFDD
  4554                           fsr2h	equ	0xFDA
  4555                           fsr2l	equ	0xFD9
  4556                           status	equ	0xFD8
  4557                           
  4558 ;; *************** function ___awtoft *****************
  4559 ;; Defined at:
  4560 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awtoft.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  c               2    8[COMRAM] int 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  sign            1   11[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  3    8[COMRAM] float 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, prodl, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4574 ;;      Params:         3       0       0       0       0       0       0       0       0
  4575 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4577 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4578 ;;Total ram usage:        4 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    1
  4581 ;; This function calls:
  4582 ;;		___ftpack
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;;		_linspace
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text25
  4590  0067A0                     __ptext25:
  4591                           	opt stack 0
  4592  0067A0                     ___awtoft:
  4593                           	opt stack 27
  4594                           
  4595                           ;incstack = 0
  4596  0067A0  0E00               	movlw	0
  4597  0067A2  6E0C               	movwf	___awtoft@sign,c
  4598  0067A4  500A               	movf	___awtoft@c+1,w,c
  4599  0067A6  0A80               	xorlw	128
  4600  0067A8  6EF3               	movwf	prodl,c
  4601  0067AA  0E80               	movlw	128
  4602  0067AC  5CF3               	subwf	prodl,w,c
  4603  0067AE  0E00               	movlw	0
  4604  0067B0  B4D8               	btfsc	status,2,c
  4605  0067B2  5C09               	subwf	___awtoft@c,w,c
  4606  0067B4  B0D8               	btfsc	status,0,c
  4607  0067B6  D006               	goto	l2137
  4608  0067B8  6C09               	negf	___awtoft@c,c
  4609  0067BA  1E0A               	comf	___awtoft@c+1,f,c
  4610  0067BC  B0D8               	btfsc	status,0,c
  4611  0067BE  2A0A               	incf	___awtoft@c+1,f,c
  4612  0067C0  0E01               	movlw	1
  4613  0067C2  6E0C               	movwf	___awtoft@sign,c
  4614  0067C4                     l2137:
  4615  0067C4  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4616  0067C8  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4617  0067CC  6A03               	clrf	___ftpack@arg+2,c
  4618  0067CE  0E8E               	movlw	142
  4619  0067D0  6E04               	movwf	___ftpack@exp,c
  4620  0067D2  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4621  0067D6  ECF5  F034         	call	___ftpack	;wreg free
  4622  0067DA  C001  F009         	movff	?___ftpack,?___awtoft
  4623  0067DE  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4624  0067E2  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4625  0067E6  0012               	return	
  4626  0067E8                     __end_of___awtoft:
  4627                           	opt stack 0
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodl	equ	0xFF3
  4633                           wreg	equ	0xFE8
  4634                           postinc1	equ	0xFE6
  4635                           postdec1	equ	0xFE5
  4636                           fsr1h	equ	0xFE2
  4637                           fsr1l	equ	0xFE1
  4638                           postinc2	equ	0xFDE
  4639                           postdec2	equ	0xFDD
  4640                           fsr2h	equ	0xFDA
  4641                           fsr2l	equ	0xFD9
  4642                           status	equ	0xFD8
  4643                           
  4644 ;; *************** function _defuzzy *****************
  4645 ;; Defined at:
  4646 ;;		line 147 in file "fuzzy.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  x               2   54[COMRAM] PTR 
  4649 ;;		 -> fuzzy_system_single1@y(120), fuzzy_system_single2@y(120), fuzzy_system_single@y(120), fuzzy_system@y(120), 
  4650 ;;  mf              2   56[COMRAM] PTR 
  4651 ;;		 -> fuzzy_system_single1@overall_out_mf(120), fuzzy_system_single2@overall_out_mf(120), fuzzy_system_single@overall_
      +out_mf(120), fuzzy_system@overall_out_mf(120), 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  sum2            3   64[COMRAM] PTR 
  4654 ;;  sum1            3   61[COMRAM] PTR 
  4655 ;;  out             3   58[COMRAM] PTR 
  4656 ;;  i               2   67[COMRAM] int 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  3   54[COMRAM] int 
  4659 ;; Registers used:
  4660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4666 ;;      Params:         4       0       0       0       0       0       0       0       0
  4667 ;;      Locals:        11       0       0       0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4669 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4670 ;;Total ram usage:       15 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:    2
  4673 ;; This function calls:
  4674 ;;		___ftadd
  4675 ;;		___ftdiv
  4676 ;;		___ftmul
  4677 ;;		___wmul
  4678 ;; This function is called by:
  4679 ;;		_fuzzy_system_single2
  4680 ;;		_fuzzy_system_single1
  4681 ;;		_fuzzy_system
  4682 ;;		_fuzzy_system_single
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text26
  4687  0071AE                     __ptext26:
  4688                           	opt stack 0
  4689  0071AE                     _defuzzy:
  4690                           	opt stack 27
  4691                           
  4692                           ;fuzzy.c: 149: double sum1=0, sum2=0,out=0;
  4693                           
  4694                           ;incstack = 0
  4695  0071AE  0E00               	movlw	0
  4696  0071B0  6E3E               	movwf	defuzzy@sum1,c
  4697  0071B2  0E00               	movlw	0
  4698  0071B4  6E3F               	movwf	defuzzy@sum1+1,c
  4699  0071B6  0E00               	movlw	0
  4700  0071B8  6E40               	movwf	defuzzy@sum1+2,c
  4701  0071BA  0E00               	movlw	0
  4702  0071BC  6E41               	movwf	defuzzy@sum2,c
  4703  0071BE  0E00               	movlw	0
  4704  0071C0  6E42               	movwf	defuzzy@sum2+1,c
  4705  0071C2  0E00               	movlw	0
  4706  0071C4  6E43               	movwf	defuzzy@sum2+2,c
  4707  0071C6  0E00               	movlw	0
  4708  0071C8  6E3B               	movwf	defuzzy@out,c
  4709  0071CA  0E00               	movlw	0
  4710  0071CC  6E3C               	movwf	defuzzy@out+1,c
  4711  0071CE  0E00               	movlw	0
  4712  0071D0  6E3D               	movwf	defuzzy@out+2,c
  4713                           
  4714                           ;fuzzy.c: 150: int i;
  4715                           ;fuzzy.c: 151: for(i=0;i<40; i++)
  4716  0071D2  0E00               	movlw	0
  4717  0071D4  6E45               	movwf	defuzzy@i+1,c
  4718  0071D6  0E00               	movlw	0
  4719  0071D8  6E44               	movwf	defuzzy@i,c
  4720  0071DA  5045               	movf	defuzzy@i+1,w,c
  4721  0071DC  0A80               	xorlw	128
  4722  0071DE  0F80               	addlw	-128
  4723  0071E0  0E28               	movlw	40
  4724  0071E2  B4D8               	btfsc	status,2,c
  4725  0071E4  5C44               	subwf	defuzzy@i,w,c
  4726  0071E6  B0D8               	btfsc	status,0,c
  4727  0071E8  D045               	goto	l2353
  4728                           
  4729                           ;fuzzy.c: 152: sum1+=x[i]*mf[i];
  4730  0071EA  C03E  F01C         	movff	defuzzy@sum1,___ftadd@f1
  4731  0071EE  C03F  F01D         	movff	defuzzy@sum1+1,___ftadd@f1+1
  4732  0071F2  C040  F01E         	movff	defuzzy@sum1+2,___ftadd@f1+2
  4733  0071F6  C044  F001         	movff	defuzzy@i,___wmul@multiplier
  4734  0071FA  C045  F002         	movff	defuzzy@i+1,___wmul@multiplier+1
  4735  0071FE  0E00               	movlw	0
  4736  007200  6E04               	movwf	___wmul@multiplicand+1,c
  4737  007202  0E03               	movlw	3
  4738  007204  6E03               	movwf	___wmul@multiplicand,c
  4739  007206  EC3E  F033         	call	___wmul	;wreg free
  4740  00720A  5001               	movf	?___wmul,w,c
  4741  00720C  2439               	addwf	defuzzy@mf,w,c
  4742  00720E  6ED9               	movwf	fsr2l,c
  4743  007210  5002               	movf	?___wmul+1,w,c
  4744  007212  203A               	addwfc	defuzzy@mf+1,w,c
  4745  007214  6EDA               	movwf	fsr2h,c
  4746  007216  CFDE F010          	movff	postinc2,___ftmul@f2
  4747  00721A  CFDE F011          	movff	postinc2,___ftmul@f2+1
  4748  00721E  CFDD F012          	movff	postdec2,___ftmul@f2+2
  4749  007222  C044  F001         	movff	defuzzy@i,___wmul@multiplier
  4750  007226  C045  F002         	movff	defuzzy@i+1,___wmul@multiplier+1
  4751  00722A  0E00               	movlw	0
  4752  00722C  6E04               	movwf	___wmul@multiplicand+1,c
  4753  00722E  0E03               	movlw	3
  4754  007230  6E03               	movwf	___wmul@multiplicand,c
  4755  007232  EC3E  F033         	call	___wmul	;wreg free
  4756  007236  5001               	movf	?___wmul,w,c
  4757  007238  2437               	addwf	defuzzy@x,w,c
  4758  00723A  6ED9               	movwf	fsr2l,c
  4759  00723C  5002               	movf	?___wmul+1,w,c
  4760  00723E  2038               	addwfc	defuzzy@x+1,w,c
  4761  007240  6EDA               	movwf	fsr2h,c
  4762  007242  CFDE F00D          	movff	postinc2,___ftmul@f1
  4763  007246  CFDE F00E          	movff	postinc2,___ftmul@f1+1
  4764  00724A  CFDD F00F          	movff	postdec2,___ftmul@f1+2
  4765  00724E  ECDF  F036         	call	___ftmul	;wreg free
  4766  007252  C00D  F01F         	movff	?___ftmul,___ftadd@f2
  4767  007256  C00E  F020         	movff	?___ftmul+1,___ftadd@f2+1
  4768  00725A  C00F  F021         	movff	?___ftmul+2,___ftadd@f2+2
  4769  00725E  EC88  F039         	call	___ftadd	;wreg free
  4770  007262  C01C  F03E         	movff	?___ftadd,defuzzy@sum1
  4771  007266  C01D  F03F         	movff	?___ftadd+1,defuzzy@sum1+1
  4772  00726A  C01E  F040         	movff	?___ftadd+2,defuzzy@sum1+2
  4773  00726E  4A44               	infsnz	defuzzy@i,f,c
  4774  007270  2A45               	incf	defuzzy@i+1,f,c
  4775  007272  D7B3               	goto	L12
  4776  007274                     l2353:
  4777                           
  4778                           ;fuzzy.c: 153: for(i=0;i<40; i++)
  4779  007274  0E00               	movlw	0
  4780  007276  6E45               	movwf	defuzzy@i+1,c
  4781  007278  0E00               	movlw	0
  4782  00727A  6E44               	movwf	defuzzy@i,c
  4783  00727C  5045               	movf	defuzzy@i+1,w,c
  4784  00727E  0A80               	xorlw	128
  4785  007280  0F80               	addlw	-128
  4786  007282  0E28               	movlw	40
  4787  007284  B4D8               	btfsc	status,2,c
  4788  007286  5C44               	subwf	defuzzy@i,w,c
  4789  007288  B0D8               	btfsc	status,0,c
  4790  00728A  D027               	goto	l2365
  4791                           
  4792                           ;fuzzy.c: 154: sum2+=mf[i];
  4793  00728C  C041  F01C         	movff	defuzzy@sum2,___ftadd@f1
  4794  007290  C042  F01D         	movff	defuzzy@sum2+1,___ftadd@f1+1
  4795  007294  C043  F01E         	movff	defuzzy@sum2+2,___ftadd@f1+2
  4796  007298  C044  F001         	movff	defuzzy@i,___wmul@multiplier
  4797  00729C  C045  F002         	movff	defuzzy@i+1,___wmul@multiplier+1
  4798  0072A0  0E00               	movlw	0
  4799  0072A2  6E04               	movwf	___wmul@multiplicand+1,c
  4800  0072A4  0E03               	movlw	3
  4801  0072A6  6E03               	movwf	___wmul@multiplicand,c
  4802  0072A8  EC3E  F033         	call	___wmul	;wreg free
  4803  0072AC  5001               	movf	?___wmul,w,c
  4804  0072AE  2439               	addwf	defuzzy@mf,w,c
  4805  0072B0  6ED9               	movwf	fsr2l,c
  4806  0072B2  5002               	movf	?___wmul+1,w,c
  4807  0072B4  203A               	addwfc	defuzzy@mf+1,w,c
  4808  0072B6  6EDA               	movwf	fsr2h,c
  4809  0072B8  CFDE F01F          	movff	postinc2,___ftadd@f2
  4810  0072BC  CFDE F020          	movff	postinc2,___ftadd@f2+1
  4811  0072C0  CFDD F021          	movff	postdec2,___ftadd@f2+2
  4812  0072C4  EC88  F039         	call	___ftadd	;wreg free
  4813  0072C8  C01C  F041         	movff	?___ftadd,defuzzy@sum2
  4814  0072CC  C01D  F042         	movff	?___ftadd+1,defuzzy@sum2+1
  4815  0072D0  C01E  F043         	movff	?___ftadd+2,defuzzy@sum2+2
  4816  0072D4  4A44               	infsnz	defuzzy@i,f,c
  4817  0072D6  2A45               	incf	defuzzy@i+1,f,c
  4818  0072D8  D7D1               	goto	L13
  4819  0072DA                     l2365:
  4820                           
  4821                           ;fuzzy.c: 155: out=sum1/sum2;
  4822  0072DA  C03E  F028         	movff	defuzzy@sum1,___ftdiv@f1
  4823  0072DE  C03F  F029         	movff	defuzzy@sum1+1,___ftdiv@f1+1
  4824  0072E2  C040  F02A         	movff	defuzzy@sum1+2,___ftdiv@f1+2
  4825  0072E6  C041  F02B         	movff	defuzzy@sum2,___ftdiv@f2
  4826  0072EA  C042  F02C         	movff	defuzzy@sum2+1,___ftdiv@f2+1
  4827  0072EE  C043  F02D         	movff	defuzzy@sum2+2,___ftdiv@f2+2
  4828  0072F2  EC74  F036         	call	___ftdiv	;wreg free
  4829  0072F6  C028  F03B         	movff	?___ftdiv,defuzzy@out
  4830  0072FA  C029  F03C         	movff	?___ftdiv+1,defuzzy@out+1
  4831  0072FE  C02A  F03D         	movff	?___ftdiv+2,defuzzy@out+2
  4832                           
  4833                           ;fuzzy.c: 156: return out;
  4834  007302  C03B  F037         	movff	defuzzy@out,?_defuzzy
  4835  007306  C03C  F038         	movff	defuzzy@out+1,?_defuzzy+1
  4836  00730A  C03D  F039         	movff	defuzzy@out+2,?_defuzzy+2
  4837  00730E  0012               	return	
  4838  007310                     __end_of_defuzzy:
  4839                           	opt stack 0
  4840                           tblptru	equ	0xFF8
  4841                           tblptrh	equ	0xFF7
  4842                           tblptrl	equ	0xFF6
  4843                           tablat	equ	0xFF5
  4844                           prodl	equ	0xFF3
  4845                           wreg	equ	0xFE8
  4846                           postinc1	equ	0xFE6
  4847                           postdec1	equ	0xFE5
  4848                           fsr1h	equ	0xFE2
  4849                           fsr1l	equ	0xFE1
  4850                           postinc2	equ	0xFDE
  4851                           postdec2	equ	0xFDD
  4852                           fsr2h	equ	0xFDA
  4853                           fsr2l	equ	0xFD9
  4854                           status	equ	0xFD8
  4855                           
  4856 ;; *************** function ___wmul *****************
  4857 ;; Defined at:
  4858 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  multiplier      2    0[COMRAM] unsigned int 
  4861 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  product         2    4[COMRAM] unsigned int 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  2    0[COMRAM] unsigned int 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0, prodl, prodh
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4873 ;;      Params:         4       0       0       0       0       0       0       0       0
  4874 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4876 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4877 ;;Total ram usage:        6 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_linspace
  4883 ;;		_tri_mf
  4884 ;;		_qualified
  4885 ;;		_out_mf
  4886 ;;		_defuzzy
  4887 ;;		_minimo
  4888 ;;		_maximo
  4889 ;;		_trap_mf
  4890 ;;		_fuzzy_system
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text27
  4895  00667C                     __ptext27:
  4896                           	opt stack 0
  4897  00667C                     ___wmul:
  4898                           	opt stack 28
  4899                           
  4900                           ;incstack = 0
  4901  00667C  5001               	movf	___wmul@multiplier,w,c
  4902  00667E  0203               	mulwf	___wmul@multiplicand,c
  4903  006680  CFF3 F005          	movff	prodl,___wmul@product
  4904  006684  CFF4 F006          	movff	prodh,___wmul@product+1
  4905  006688  5001               	movf	___wmul@multiplier,w,c
  4906  00668A  0204               	mulwf	___wmul@multiplicand+1,c
  4907  00668C  50F3               	movf	prodl,w,c
  4908  00668E  2606               	addwf	___wmul@product+1,f,c
  4909  006690  5002               	movf	___wmul@multiplier+1,w,c
  4910  006692  0203               	mulwf	___wmul@multiplicand,c
  4911  006694  50F3               	movf	prodl,w,c
  4912  006696  2606               	addwf	___wmul@product+1,f,c
  4913  006698  C005  F001         	movff	___wmul@product,?___wmul
  4914  00669C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4915  0066A0  0012               	return	
  4916  0066A2                     __end_of___wmul:
  4917                           	opt stack 0
  4918                           tblptru	equ	0xFF8
  4919                           tblptrh	equ	0xFF7
  4920                           tblptrl	equ	0xFF6
  4921                           tablat	equ	0xFF5
  4922                           prodh	equ	0xFF4
  4923                           prodl	equ	0xFF3
  4924                           wreg	equ	0xFE8
  4925                           postinc1	equ	0xFE6
  4926                           postdec1	equ	0xFE5
  4927                           fsr1h	equ	0xFE2
  4928                           fsr1l	equ	0xFE1
  4929                           postinc2	equ	0xFDE
  4930                           postdec2	equ	0xFDD
  4931                           fsr2h	equ	0xFDA
  4932                           fsr2l	equ	0xFD9
  4933                           status	equ	0xFD8
  4934                           
  4935 ;; *************** function ___ftmul *****************
  4936 ;; Defined at:
  4937 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  f1              3   12[COMRAM] float 
  4940 ;;  f2              3   15[COMRAM] float 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4943 ;;  sign            1   26[COMRAM] unsigned char 
  4944 ;;  cntr            1   25[COMRAM] unsigned char 
  4945 ;;  exp             1   21[COMRAM] unsigned char 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  3   12[COMRAM] float 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4955 ;;      Params:         6       0       0       0       0       0       0       0       0
  4956 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4957 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4958 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4959 ;;Total ram usage:       15 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    1
  4962 ;; This function calls:
  4963 ;;		___ftpack
  4964 ;; This function is called by:
  4965 ;;		_linspace
  4966 ;;		_defuzzy
  4967 ;;		_PWM_DutyCycle1
  4968 ;;		_PWM_DutyCycle2
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text28
  4973  006DBE                     __ptext28:
  4974                           	opt stack 0
  4975  006DBE                     ___ftmul:
  4976                           	opt stack 27
  4977                           
  4978                           ;incstack = 0
  4979  006DBE  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  4980  006DC2  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4981  006DC4  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4982  006DC6  340E               	rlcf	___ftmul@f1+1,w,c
  4983  006DC8  3613               	rlcf	??___ftmul& (0+255),f,c
  4984  006DCA  E301               	bnc	u1981
  4985  006DCC  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4986  006DCE                     u1981:
  4987  006DCE  5013               	movf	??___ftmul,w,c
  4988  006DD0  6E16               	movwf	___ftmul@exp,c
  4989  006DD2  6616               	tstfsz	___ftmul@exp& (0+255),c
  4990  006DD4  D001               	goto	l2087
  4991  006DD6  D00C               	goto	u2010
  4992  006DD8                     l2087:
  4993  006DD8  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  4994  006DDC  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4995  006DDE  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4996  006DE0  3411               	rlcf	___ftmul@f2+1,w,c
  4997  006DE2  3613               	rlcf	??___ftmul& (0+255),f,c
  4998  006DE4  E301               	bnc	u2001
  4999  006DE6  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  5000  006DE8                     u2001:
  5001  006DE8  5013               	movf	??___ftmul,w,c
  5002  006DEA  6E1B               	movwf	___ftmul@sign,c
  5003  006DEC  661B               	tstfsz	___ftmul@sign& (0+255),c
  5004  006DEE  D007               	goto	l2093
  5005  006DF0                     u2010:
  5006  006DF0  0E00               	movlw	0
  5007  006DF2  6E0D               	movwf	?___ftmul,c
  5008  006DF4  0E00               	movlw	0
  5009  006DF6  6E0E               	movwf	?___ftmul+1,c
  5010  006DF8  0E00               	movlw	0
  5011  006DFA  6E0F               	movwf	?___ftmul+2,c
  5012  006DFC  D051               	goto	l694
  5013  006DFE                     l2093:
  5014  006DFE  501B               	movf	___ftmul@sign,w,c
  5015  006E00  0F7B               	addlw	123
  5016  006E02  2616               	addwf	___ftmul@exp,f,c
  5017  006E04  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  5018  006E08  5012               	movf	___ftmul@f2+2,w,c
  5019  006E0A  1A1B               	xorwf	___ftmul@sign,f,c
  5020  006E0C  0E80               	movlw	128
  5021  006E0E  161B               	andwf	___ftmul@sign,f,c
  5022  006E10  8E0E               	bsf	___ftmul@f1+1,7,c
  5023  006E12  8E11               	bsf	___ftmul@f2+1,7,c
  5024  006E14  0EFF               	movlw	255
  5025  006E16  1610               	andwf	___ftmul@f2,f,c
  5026  006E18  0EFF               	movlw	255
  5027  006E1A  1611               	andwf	___ftmul@f2+1,f,c
  5028  006E1C  0E00               	movlw	0
  5029  006E1E  1612               	andwf	___ftmul@f2+2,f,c
  5030  006E20  0E00               	movlw	0
  5031  006E22  6E17               	movwf	___ftmul@f3_as_product,c
  5032  006E24  0E00               	movlw	0
  5033  006E26  6E18               	movwf	___ftmul@f3_as_product+1,c
  5034  006E28  0E00               	movlw	0
  5035  006E2A  6E19               	movwf	___ftmul@f3_as_product+2,c
  5036  006E2C  0E07               	movlw	7
  5037  006E2E  6E1A               	movwf	___ftmul@cntr,c
  5038  006E30                     l2107:
  5039  006E30  A00D               	btfss	___ftmul@f1,0,c
  5040  006E32  D006               	goto	l2111
  5041  006E34  5010               	movf	___ftmul@f2,w,c
  5042  006E36  2617               	addwf	___ftmul@f3_as_product,f,c
  5043  006E38  5011               	movf	___ftmul@f2+1,w,c
  5044  006E3A  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  5045  006E3C  5012               	movf	___ftmul@f2+2,w,c
  5046  006E3E  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  5047  006E40                     l2111:
  5048  006E40  90D8               	bcf	status,0,c
  5049  006E42  320F               	rrcf	___ftmul@f1+2,f,c
  5050  006E44  320E               	rrcf	___ftmul@f1+1,f,c
  5051  006E46  320D               	rrcf	___ftmul@f1,f,c
  5052  006E48  90D8               	bcf	status,0,c
  5053  006E4A  3610               	rlcf	___ftmul@f2,f,c
  5054  006E4C  3611               	rlcf	___ftmul@f2+1,f,c
  5055  006E4E  3612               	rlcf	___ftmul@f2+2,f,c
  5056  006E50  2E1A               	decfsz	___ftmul@cntr,f,c
  5057  006E52  D7EE               	goto	l2107
  5058  006E54  0E09               	movlw	9
  5059  006E56  6E1A               	movwf	___ftmul@cntr,c
  5060  006E58                     l2117:
  5061  006E58  A00D               	btfss	___ftmul@f1,0,c
  5062  006E5A  D006               	goto	l2121
  5063  006E5C  5010               	movf	___ftmul@f2,w,c
  5064  006E5E  2617               	addwf	___ftmul@f3_as_product,f,c
  5065  006E60  5011               	movf	___ftmul@f2+1,w,c
  5066  006E62  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  5067  006E64  5012               	movf	___ftmul@f2+2,w,c
  5068  006E66  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  5069  006E68                     l2121:
  5070  006E68  90D8               	bcf	status,0,c
  5071  006E6A  320F               	rrcf	___ftmul@f1+2,f,c
  5072  006E6C  320E               	rrcf	___ftmul@f1+1,f,c
  5073  006E6E  320D               	rrcf	___ftmul@f1,f,c
  5074  006E70  90D8               	bcf	status,0,c
  5075  006E72  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  5076  006E74  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  5077  006E76  3217               	rrcf	___ftmul@f3_as_product,f,c
  5078  006E78  2E1A               	decfsz	___ftmul@cntr,f,c
  5079  006E7A  D7EE               	goto	l2117
  5080  006E7C  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  5081  006E80  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5082  006E84  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5083  006E88  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  5084  006E8C  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  5085  006E90  ECF5  F034         	call	___ftpack	;wreg free
  5086  006E94  C001  F00D         	movff	?___ftpack,?___ftmul
  5087  006E98  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  5088  006E9C  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  5089  006EA0                     l694:
  5090  006EA0  0012               	return	
  5091  006EA2                     __end_of___ftmul:
  5092                           	opt stack 0
  5093                           tblptru	equ	0xFF8
  5094                           tblptrh	equ	0xFF7
  5095                           tblptrl	equ	0xFF6
  5096                           tablat	equ	0xFF5
  5097                           prodh	equ	0xFF4
  5098                           prodl	equ	0xFF3
  5099                           wreg	equ	0xFE8
  5100                           postinc1	equ	0xFE6
  5101                           postdec1	equ	0xFE5
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           postinc2	equ	0xFDE
  5105                           postdec2	equ	0xFDD
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110 ;; *************** function ___ftdiv *****************
  5111 ;; Defined at:
  5112 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftdiv.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  f1              3   39[COMRAM] float 
  5115 ;;  f2              3   42[COMRAM] float 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  f3              3   49[COMRAM] float 
  5118 ;;  sign            1   53[COMRAM] unsigned char 
  5119 ;;  exp             1   52[COMRAM] unsigned char 
  5120 ;;  cntr            1   48[COMRAM] unsigned char 
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  3   39[COMRAM] float 
  5123 ;; Registers used:
  5124 ;;		wreg, status,2, status,0, cstack
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5130 ;;      Params:         6       0       0       0       0       0       0       0       0
  5131 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5132 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5133 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5134 ;;Total ram usage:       15 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:    1
  5137 ;; This function calls:
  5138 ;;		___ftpack
  5139 ;; This function is called by:
  5140 ;;		_linspace
  5141 ;;		_triangular
  5142 ;;		_defuzzy
  5143 ;;		_trapezoidal
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text29
  5148  006CE8                     __ptext29:
  5149                           	opt stack 0
  5150  006CE8                     ___ftdiv:
  5151                           	opt stack 27
  5152                           
  5153                           ;incstack = 0
  5154  006CE8  C02A  F02E         	movff	___ftdiv@f1+2,??___ftdiv
  5155  006CEC  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  5156  006CEE  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  5157  006CF0  3429               	rlcf	___ftdiv@f1+1,w,c
  5158  006CF2  362E               	rlcf	??___ftdiv& (0+255),f,c
  5159  006CF4  E301               	bnc	u1791
  5160  006CF6  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  5161  006CF8                     u1791:
  5162  006CF8  502E               	movf	??___ftdiv,w,c
  5163  006CFA  6E35               	movwf	___ftdiv@exp,c
  5164  006CFC  6635               	tstfsz	___ftdiv@exp& (0+255),c
  5165  006CFE  D001               	goto	l1959
  5166  006D00  D00C               	goto	u1820
  5167  006D02                     l1959:
  5168  006D02  C02D  F02E         	movff	___ftdiv@f2+2,??___ftdiv
  5169  006D06  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  5170  006D08  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  5171  006D0A  342C               	rlcf	___ftdiv@f2+1,w,c
  5172  006D0C  362E               	rlcf	??___ftdiv& (0+255),f,c
  5173  006D0E  E301               	bnc	u1811
  5174  006D10  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  5175  006D12                     u1811:
  5176  006D12  502E               	movf	??___ftdiv,w,c
  5177  006D14  6E36               	movwf	___ftdiv@sign,c
  5178  006D16  6636               	tstfsz	___ftdiv@sign& (0+255),c
  5179  006D18  D007               	goto	l1965
  5180  006D1A                     u1820:
  5181  006D1A  0E00               	movlw	0
  5182  006D1C  6E28               	movwf	?___ftdiv,c
  5183  006D1E  0E00               	movlw	0
  5184  006D20  6E29               	movwf	?___ftdiv+1,c
  5185  006D22  0E00               	movlw	0
  5186  006D24  6E2A               	movwf	?___ftdiv+2,c
  5187  006D26  D04A               	goto	l679
  5188  006D28                     l1965:
  5189  006D28  0E00               	movlw	0
  5190  006D2A  6E32               	movwf	___ftdiv@f3,c
  5191  006D2C  0E00               	movlw	0
  5192  006D2E  6E33               	movwf	___ftdiv@f3+1,c
  5193  006D30  0E00               	movlw	0
  5194  006D32  6E34               	movwf	___ftdiv@f3+2,c
  5195  006D34  5036               	movf	___ftdiv@sign,w,c
  5196  006D36  0F89               	addlw	137
  5197  006D38  5E35               	subwf	___ftdiv@exp,f,c
  5198  006D3A  C02A  F036         	movff	___ftdiv@f1+2,___ftdiv@sign
  5199  006D3E  502D               	movf	___ftdiv@f2+2,w,c
  5200  006D40  1A36               	xorwf	___ftdiv@sign,f,c
  5201  006D42  0E80               	movlw	128
  5202  006D44  1636               	andwf	___ftdiv@sign,f,c
  5203  006D46  8E29               	bsf	___ftdiv@f1+1,7,c
  5204  006D48  0EFF               	movlw	255
  5205  006D4A  1628               	andwf	___ftdiv@f1,f,c
  5206  006D4C  0EFF               	movlw	255
  5207  006D4E  1629               	andwf	___ftdiv@f1+1,f,c
  5208  006D50  0E00               	movlw	0
  5209  006D52  162A               	andwf	___ftdiv@f1+2,f,c
  5210  006D54  8E2C               	bsf	___ftdiv@f2+1,7,c
  5211  006D56  0EFF               	movlw	255
  5212  006D58  162B               	andwf	___ftdiv@f2,f,c
  5213  006D5A  0EFF               	movlw	255
  5214  006D5C  162C               	andwf	___ftdiv@f2+1,f,c
  5215  006D5E  0E00               	movlw	0
  5216  006D60  162D               	andwf	___ftdiv@f2+2,f,c
  5217  006D62  0E18               	movlw	24
  5218  006D64  6E31               	movwf	___ftdiv@cntr,c
  5219  006D66                     l1985:
  5220  006D66  90D8               	bcf	status,0,c
  5221  006D68  3632               	rlcf	___ftdiv@f3,f,c
  5222  006D6A  3633               	rlcf	___ftdiv@f3+1,f,c
  5223  006D6C  3634               	rlcf	___ftdiv@f3+2,f,c
  5224  006D6E  502B               	movf	___ftdiv@f2,w,c
  5225  006D70  5C28               	subwf	___ftdiv@f1,w,c
  5226  006D72  502C               	movf	___ftdiv@f2+1,w,c
  5227  006D74  5829               	subwfb	___ftdiv@f1+1,w,c
  5228  006D76  502D               	movf	___ftdiv@f2+2,w,c
  5229  006D78  582A               	subwfb	___ftdiv@f1+2,w,c
  5230  006D7A  A0D8               	btfss	status,0,c
  5231  006D7C  D007               	goto	l682
  5232  006D7E  502B               	movf	___ftdiv@f2,w,c
  5233  006D80  5E28               	subwf	___ftdiv@f1,f,c
  5234  006D82  502C               	movf	___ftdiv@f2+1,w,c
  5235  006D84  5A29               	subwfb	___ftdiv@f1+1,f,c
  5236  006D86  502D               	movf	___ftdiv@f2+2,w,c
  5237  006D88  5A2A               	subwfb	___ftdiv@f1+2,f,c
  5238  006D8A  8032               	bsf	___ftdiv@f3,0,c
  5239  006D8C                     l682:
  5240  006D8C  90D8               	bcf	status,0,c
  5241  006D8E  3628               	rlcf	___ftdiv@f1,f,c
  5242  006D90  3629               	rlcf	___ftdiv@f1+1,f,c
  5243  006D92  362A               	rlcf	___ftdiv@f1+2,f,c
  5244  006D94  2E31               	decfsz	___ftdiv@cntr,f,c
  5245  006D96  D7E7               	goto	l1985
  5246  006D98  C032  F001         	movff	___ftdiv@f3,___ftpack@arg
  5247  006D9C  C033  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5248  006DA0  C034  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5249  006DA4  C035  F004         	movff	___ftdiv@exp,___ftpack@exp
  5250  006DA8  C036  F005         	movff	___ftdiv@sign,___ftpack@sign
  5251  006DAC  ECF5  F034         	call	___ftpack	;wreg free
  5252  006DB0  C001  F028         	movff	?___ftpack,?___ftdiv
  5253  006DB4  C002  F029         	movff	?___ftpack+1,?___ftdiv+1
  5254  006DB8  C003  F02A         	movff	?___ftpack+2,?___ftdiv+2
  5255  006DBC                     l679:
  5256  006DBC  0012               	return	
  5257  006DBE                     __end_of___ftdiv:
  5258                           	opt stack 0
  5259                           tblptru	equ	0xFF8
  5260                           tblptrh	equ	0xFF7
  5261                           tblptrl	equ	0xFF6
  5262                           tablat	equ	0xFF5
  5263                           prodh	equ	0xFF4
  5264                           prodl	equ	0xFF3
  5265                           wreg	equ	0xFE8
  5266                           postinc1	equ	0xFE6
  5267                           postdec1	equ	0xFE5
  5268                           fsr1h	equ	0xFE2
  5269                           fsr1l	equ	0xFE1
  5270                           postinc2	equ	0xFDE
  5271                           postdec2	equ	0xFDD
  5272                           fsr2h	equ	0xFDA
  5273                           fsr2l	equ	0xFD9
  5274                           status	equ	0xFD8
  5275                           
  5276 ;; *************** function ___ftadd *****************
  5277 ;; Defined at:
  5278 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  f1              3   27[COMRAM] float 
  5281 ;;  f2              3   30[COMRAM] float 
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;  exp1            1   38[COMRAM] unsigned char 
  5284 ;;  exp2            1   37[COMRAM] unsigned char 
  5285 ;;  sign            1   36[COMRAM] unsigned char 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  3   27[COMRAM] float 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5295 ;;      Params:         6       0       0       0       0       0       0       0       0
  5296 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5297 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5298 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5299 ;;Total ram usage:       12 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    1
  5302 ;; This function calls:
  5303 ;;		___ftpack
  5304 ;; This function is called by:
  5305 ;;		_linspace
  5306 ;;		_triangular
  5307 ;;		_defuzzy
  5308 ;;		_trapezoidal
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text30
  5313  007310                     __ptext30:
  5314                           	opt stack 0
  5315  007310                     ___ftadd:
  5316                           	opt stack 27
  5317                           
  5318                           ;incstack = 0
  5319  007310  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  5320  007314  6A23               	clrf	(??___ftadd+1)& (0+255),c
  5321  007316  6A24               	clrf	(??___ftadd+2)& (0+255),c
  5322  007318  341D               	rlcf	___ftadd@f1+1,w,c
  5323  00731A  3622               	rlcf	??___ftadd& (0+255),f,c
  5324  00731C  E301               	bnc	u1581
  5325  00731E  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  5326  007320                     u1581:
  5327  007320  5022               	movf	??___ftadd,w,c
  5328  007322  6E27               	movwf	___ftadd@exp1,c
  5329  007324  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  5330  007328  6A23               	clrf	(??___ftadd+1)& (0+255),c
  5331  00732A  6A24               	clrf	(??___ftadd+2)& (0+255),c
  5332  00732C  3420               	rlcf	___ftadd@f2+1,w,c
  5333  00732E  3622               	rlcf	??___ftadd& (0+255),f,c
  5334  007330  E301               	bnc	u1591
  5335  007332  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  5336  007334                     u1591:
  5337  007334  5022               	movf	??___ftadd,w,c
  5338  007336  6E26               	movwf	___ftadd@exp2,c
  5339  007338  5027               	movf	___ftadd@exp1,w,c
  5340  00733A  B4D8               	btfsc	status,2,c
  5341  00733C  D00C               	goto	l647
  5342  00733E  5026               	movf	___ftadd@exp2,w,c
  5343  007340  5C27               	subwf	___ftadd@exp1,w,c
  5344  007342  B0D8               	btfsc	status,0,c
  5345  007344  D00F               	goto	l1891
  5346  007346  5027               	movf	___ftadd@exp1,w,c
  5347  007348  0800               	sublw	0
  5348  00734A  2426               	addwf	___ftadd@exp2,w,c
  5349  00734C  6E22               	movwf	??___ftadd& (0+255),c
  5350  00734E  0E19               	movlw	25
  5351  007350  5C22               	subwf	??___ftadd,w,c
  5352  007352  A0D8               	btfss	status,0,c
  5353  007354  D007               	goto	l1891
  5354  007356                     l647:
  5355  007356  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  5356  00735A  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  5357  00735E  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  5358  007362  D0AB               	goto	l648
  5359  007364                     l1891:
  5360  007364  5026               	movf	___ftadd@exp2,w,c
  5361  007366  B4D8               	btfsc	status,2,c
  5362  007368  D00C               	goto	l651
  5363  00736A  5027               	movf	___ftadd@exp1,w,c
  5364  00736C  5C26               	subwf	___ftadd@exp2,w,c
  5365  00736E  B0D8               	btfsc	status,0,c
  5366  007370  D00F               	goto	l1897
  5367  007372  5026               	movf	___ftadd@exp2,w,c
  5368  007374  0800               	sublw	0
  5369  007376  2427               	addwf	___ftadd@exp1,w,c
  5370  007378  6E22               	movwf	??___ftadd& (0+255),c
  5371  00737A  0E19               	movlw	25
  5372  00737C  5C22               	subwf	??___ftadd,w,c
  5373  00737E  A0D8               	btfss	status,0,c
  5374  007380  D007               	goto	l1897
  5375  007382                     l651:
  5376  007382  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  5377  007386  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  5378  00738A  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  5379  00738E  D095               	goto	l648
  5380  007390                     l1897:
  5381  007390  0E06               	movlw	6
  5382  007392  6E25               	movwf	___ftadd@sign,c
  5383  007394  BE1E               	btfsc	___ftadd@f1+2,7,c
  5384  007396  8E25               	bsf	___ftadd@sign,7,c
  5385  007398  BE21               	btfsc	___ftadd@f2+2,7,c
  5386  00739A  8C25               	bsf	___ftadd@sign,6,c
  5387  00739C  8E1D               	bsf	___ftadd@f1+1,7,c
  5388  00739E  0EFF               	movlw	255
  5389  0073A0  161C               	andwf	___ftadd@f1,f,c
  5390  0073A2  0EFF               	movlw	255
  5391  0073A4  161D               	andwf	___ftadd@f1+1,f,c
  5392  0073A6  0E00               	movlw	0
  5393  0073A8  161E               	andwf	___ftadd@f1+2,f,c
  5394  0073AA  8E20               	bsf	___ftadd@f2+1,7,c
  5395  0073AC  0EFF               	movlw	255
  5396  0073AE  161F               	andwf	___ftadd@f2,f,c
  5397  0073B0  0EFF               	movlw	255
  5398  0073B2  1620               	andwf	___ftadd@f2+1,f,c
  5399  0073B4  0E00               	movlw	0
  5400  0073B6  1621               	andwf	___ftadd@f2+2,f,c
  5401  0073B8  5026               	movf	___ftadd@exp2,w,c
  5402  0073BA  5C27               	subwf	___ftadd@exp1,w,c
  5403  0073BC  B0D8               	btfsc	status,0,c
  5404  0073BE  D01A               	goto	l1923
  5405  0073C0                     l1913:
  5406  0073C0  90D8               	bcf	status,0,c
  5407  0073C2  361F               	rlcf	___ftadd@f2,f,c
  5408  0073C4  3620               	rlcf	___ftadd@f2+1,f,c
  5409  0073C6  3621               	rlcf	___ftadd@f2+2,f,c
  5410  0073C8  0626               	decf	___ftadd@exp2,f,c
  5411  0073CA  5026               	movf	___ftadd@exp2,w,c
  5412  0073CC  1827               	xorwf	___ftadd@exp1,w,c
  5413  0073CE  B4D8               	btfsc	status,2,c
  5414  0073D0  D00D               	goto	l1921
  5415  0073D2  0625               	decf	___ftadd@sign,f,c
  5416  0073D4  C025  F022         	movff	___ftadd@sign,??___ftadd
  5417  0073D8  0E07               	movlw	7
  5418  0073DA  1622               	andwf	??___ftadd,f,c
  5419  0073DC  B4D8               	btfsc	status,2,c
  5420  0073DE  D006               	goto	l1921
  5421  0073E0  D7EF               	goto	l1913
  5422  0073E2                     l1919:
  5423  0073E2  90D8               	bcf	status,0,c
  5424  0073E4  321E               	rrcf	___ftadd@f1+2,f,c
  5425  0073E6  321D               	rrcf	___ftadd@f1+1,f,c
  5426  0073E8  321C               	rrcf	___ftadd@f1,f,c
  5427  0073EA  2A27               	incf	___ftadd@exp1,f,c
  5428  0073EC                     l1921:
  5429  0073EC  5026               	movf	___ftadd@exp2,w,c
  5430  0073EE  6227               	cpfseq	___ftadd@exp1,c
  5431  0073F0  D7F8               	goto	l1919
  5432  0073F2  D01D               	goto	l662
  5433  0073F4                     l1923:
  5434  0073F4  5027               	movf	___ftadd@exp1,w,c
  5435  0073F6  5C26               	subwf	___ftadd@exp2,w,c
  5436  0073F8  B0D8               	btfsc	status,0,c
  5437  0073FA  D019               	goto	l662
  5438  0073FC                     l1925:
  5439  0073FC  90D8               	bcf	status,0,c
  5440  0073FE  361C               	rlcf	___ftadd@f1,f,c
  5441  007400  361D               	rlcf	___ftadd@f1+1,f,c
  5442  007402  361E               	rlcf	___ftadd@f1+2,f,c
  5443  007404  0627               	decf	___ftadd@exp1,f,c
  5444  007406  5026               	movf	___ftadd@exp2,w,c
  5445  007408  1827               	xorwf	___ftadd@exp1,w,c
  5446  00740A  B4D8               	btfsc	status,2,c
  5447  00740C  D00D               	goto	l1933
  5448  00740E  0625               	decf	___ftadd@sign,f,c
  5449  007410  C025  F022         	movff	___ftadd@sign,??___ftadd
  5450  007414  0E07               	movlw	7
  5451  007416  1622               	andwf	??___ftadd,f,c
  5452  007418  B4D8               	btfsc	status,2,c
  5453  00741A  D006               	goto	l1933
  5454  00741C  D7EF               	goto	l1925
  5455  00741E                     l1931:
  5456  00741E  90D8               	bcf	status,0,c
  5457  007420  3221               	rrcf	___ftadd@f2+2,f,c
  5458  007422  3220               	rrcf	___ftadd@f2+1,f,c
  5459  007424  321F               	rrcf	___ftadd@f2,f,c
  5460  007426  2A26               	incf	___ftadd@exp2,f,c
  5461  007428                     l1933:
  5462  007428  5026               	movf	___ftadd@exp2,w,c
  5463  00742A  6227               	cpfseq	___ftadd@exp1,c
  5464  00742C  D7F8               	goto	l1931
  5465  00742E                     l662:
  5466  00742E  AE25               	btfss	___ftadd@sign,7,c
  5467  007430  D00C               	goto	l671
  5468  007432  0EFF               	movlw	255
  5469  007434  1A1C               	xorwf	___ftadd@f1,f,c
  5470  007436  0EFF               	movlw	255
  5471  007438  1A1D               	xorwf	___ftadd@f1+1,f,c
  5472  00743A  0EFF               	movlw	255
  5473  00743C  1A1E               	xorwf	___ftadd@f1+2,f,c
  5474  00743E  0E01               	movlw	1
  5475  007440  261C               	addwf	___ftadd@f1,f,c
  5476  007442  0E00               	movlw	0
  5477  007444  221D               	addwfc	___ftadd@f1+1,f,c
  5478  007446  0E00               	movlw	0
  5479  007448  221E               	addwfc	___ftadd@f1+2,f,c
  5480  00744A                     l671:
  5481  00744A  AC25               	btfss	___ftadd@sign,6,c
  5482  00744C  D00C               	goto	l1939
  5483  00744E  0EFF               	movlw	255
  5484  007450  1A1F               	xorwf	___ftadd@f2,f,c
  5485  007452  0EFF               	movlw	255
  5486  007454  1A20               	xorwf	___ftadd@f2+1,f,c
  5487  007456  0EFF               	movlw	255
  5488  007458  1A21               	xorwf	___ftadd@f2+2,f,c
  5489  00745A  0E01               	movlw	1
  5490  00745C  261F               	addwf	___ftadd@f2,f,c
  5491  00745E  0E00               	movlw	0
  5492  007460  2220               	addwfc	___ftadd@f2+1,f,c
  5493  007462  0E00               	movlw	0
  5494  007464  2221               	addwfc	___ftadd@f2+2,f,c
  5495  007466                     l1939:
  5496  007466  0E00               	movlw	0
  5497  007468  6E25               	movwf	___ftadd@sign,c
  5498  00746A  501C               	movf	___ftadd@f1,w,c
  5499  00746C  261F               	addwf	___ftadd@f2,f,c
  5500  00746E  501D               	movf	___ftadd@f1+1,w,c
  5501  007470  2220               	addwfc	___ftadd@f2+1,f,c
  5502  007472  501E               	movf	___ftadd@f1+2,w,c
  5503  007474  2221               	addwfc	___ftadd@f2+2,f,c
  5504  007476  AE21               	btfss	___ftadd@f2+2,7,c
  5505  007478  D00E               	goto	l1949
  5506  00747A  0EFF               	movlw	255
  5507  00747C  1A1F               	xorwf	___ftadd@f2,f,c
  5508  00747E  0EFF               	movlw	255
  5509  007480  1A20               	xorwf	___ftadd@f2+1,f,c
  5510  007482  0EFF               	movlw	255
  5511  007484  1A21               	xorwf	___ftadd@f2+2,f,c
  5512  007486  0E01               	movlw	1
  5513  007488  261F               	addwf	___ftadd@f2,f,c
  5514  00748A  0E00               	movlw	0
  5515  00748C  2220               	addwfc	___ftadd@f2+1,f,c
  5516  00748E  0E00               	movlw	0
  5517  007490  2221               	addwfc	___ftadd@f2+2,f,c
  5518  007492  0E01               	movlw	1
  5519  007494  6E25               	movwf	___ftadd@sign,c
  5520  007496                     l1949:
  5521  007496  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  5522  00749A  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5523  00749E  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5524  0074A2  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  5525  0074A6  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  5526  0074AA  ECF5  F034         	call	___ftpack	;wreg free
  5527  0074AE  C001  F01C         	movff	?___ftpack,?___ftadd
  5528  0074B2  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  5529  0074B6  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  5530  0074BA                     l648:
  5531  0074BA  0012               	return	
  5532  0074BC                     __end_of___ftadd:
  5533                           	opt stack 0
  5534                           tblptru	equ	0xFF8
  5535                           tblptrh	equ	0xFF7
  5536                           tblptrl	equ	0xFF6
  5537                           tablat	equ	0xFF5
  5538                           prodh	equ	0xFF4
  5539                           prodl	equ	0xFF3
  5540                           wreg	equ	0xFE8
  5541                           postinc1	equ	0xFE6
  5542                           postdec1	equ	0xFE5
  5543                           fsr1h	equ	0xFE2
  5544                           fsr1l	equ	0xFE1
  5545                           postinc2	equ	0xFDE
  5546                           postdec2	equ	0xFDD
  5547                           fsr2h	equ	0xFDA
  5548                           fsr2l	equ	0xFD9
  5549                           status	equ	0xFD8
  5550                           
  5551 ;; *************** function ___ftpack *****************
  5552 ;; Defined at:
  5553 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  arg             3    0[COMRAM] unsigned um
  5556 ;;  exp             1    3[COMRAM] unsigned char 
  5557 ;;  sign            1    4[COMRAM] unsigned char 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;		None
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  3    0[COMRAM] float 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2, status,0
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5569 ;;      Params:         5       0       0       0       0       0       0       0       0
  5570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5571 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5572 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5573 ;;Total ram usage:        8 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		___awtoft
  5579 ;;		___ftadd
  5580 ;;		___ftdiv
  5581 ;;		___ftmul
  5582 ;;		___lbtoft
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text31
  5587  0069EA                     __ptext31:
  5588                           	opt stack 0
  5589  0069EA                     ___ftpack:
  5590                           	opt stack 27
  5591                           
  5592                           ;incstack = 0
  5593  0069EA  5004               	movf	___ftpack@exp,w,c
  5594  0069EC  B4D8               	btfsc	status,2,c
  5595  0069EE  D005               	goto	l1853
  5596  0069F0  5001               	movf	___ftpack@arg,w,c
  5597  0069F2  1002               	iorwf	___ftpack@arg+1,w,c
  5598  0069F4  1003               	iorwf	___ftpack@arg+2,w,c
  5599  0069F6  A4D8               	btfss	status,2,c
  5600  0069F8  D00C               	goto	l1859
  5601  0069FA                     l1853:
  5602  0069FA  0E00               	movlw	0
  5603  0069FC  6E01               	movwf	?___ftpack,c
  5604  0069FE  0E00               	movlw	0
  5605  006A00  6E02               	movwf	?___ftpack+1,c
  5606  006A02  0E00               	movlw	0
  5607  006A04  6E03               	movwf	?___ftpack+2,c
  5608  006A06  D044               	goto	l610
  5609  006A08                     l1857:
  5610  006A08  2A04               	incf	___ftpack@exp,f,c
  5611  006A0A  90D8               	bcf	status,0,c
  5612  006A0C  3203               	rrcf	___ftpack@arg+2,f,c
  5613  006A0E  3202               	rrcf	___ftpack@arg+1,f,c
  5614  006A10  3201               	rrcf	___ftpack@arg,f,c
  5615  006A12                     l1859:
  5616  006A12  0E00               	movlw	0
  5617  006A14  1401               	andwf	___ftpack@arg,w,c
  5618  006A16  6E06               	movwf	??___ftpack& (0+255),c
  5619  006A18  0E00               	movlw	0
  5620  006A1A  1402               	andwf	___ftpack@arg+1,w,c
  5621  006A1C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5622  006A1E  0EFE               	movlw	254
  5623  006A20  1403               	andwf	___ftpack@arg+2,w,c
  5624  006A22  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5625  006A24  5006               	movf	??___ftpack,w,c
  5626  006A26  1007               	iorwf	??___ftpack+1,w,c
  5627  006A28  1008               	iorwf	??___ftpack+2,w,c
  5628  006A2A  B4D8               	btfsc	status,2,c
  5629  006A2C  D00C               	goto	l1865
  5630  006A2E  D7EC               	goto	l1857
  5631  006A30                     l1861:
  5632  006A30  2A04               	incf	___ftpack@exp,f,c
  5633  006A32  0E01               	movlw	1
  5634  006A34  2601               	addwf	___ftpack@arg,f,c
  5635  006A36  0E00               	movlw	0
  5636  006A38  2202               	addwfc	___ftpack@arg+1,f,c
  5637  006A3A  0E00               	movlw	0
  5638  006A3C  2203               	addwfc	___ftpack@arg+2,f,c
  5639  006A3E  90D8               	bcf	status,0,c
  5640  006A40  3203               	rrcf	___ftpack@arg+2,f,c
  5641  006A42  3202               	rrcf	___ftpack@arg+1,f,c
  5642  006A44  3201               	rrcf	___ftpack@arg,f,c
  5643  006A46                     l1865:
  5644  006A46  0E00               	movlw	0
  5645  006A48  1401               	andwf	___ftpack@arg,w,c
  5646  006A4A  6E06               	movwf	??___ftpack& (0+255),c
  5647  006A4C  0E00               	movlw	0
  5648  006A4E  1402               	andwf	___ftpack@arg+1,w,c
  5649  006A50  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5650  006A52  0EFF               	movlw	255
  5651  006A54  1403               	andwf	___ftpack@arg+2,w,c
  5652  006A56  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5653  006A58  5006               	movf	??___ftpack,w,c
  5654  006A5A  1007               	iorwf	??___ftpack+1,w,c
  5655  006A5C  1008               	iorwf	??___ftpack+2,w,c
  5656  006A5E  B4D8               	btfsc	status,2,c
  5657  006A60  D006               	goto	l1869
  5658  006A62  D7E6               	goto	l1861
  5659  006A64                     l1867:
  5660  006A64  0604               	decf	___ftpack@exp,f,c
  5661  006A66  90D8               	bcf	status,0,c
  5662  006A68  3601               	rlcf	___ftpack@arg,f,c
  5663  006A6A  3602               	rlcf	___ftpack@arg+1,f,c
  5664  006A6C  3603               	rlcf	___ftpack@arg+2,f,c
  5665  006A6E                     l1869:
  5666  006A6E  AE02               	btfss	___ftpack@arg+1,7,c
  5667  006A70  D7F9               	goto	l1867
  5668  006A72  A004               	btfss	___ftpack@exp,0,c
  5669  006A74  9E02               	bcf	___ftpack@arg+1,7,c
  5670  006A76  90D8               	bcf	status,0,c
  5671  006A78  3204               	rrcf	___ftpack@exp,f,c
  5672  006A7A  5004               	movf	___ftpack@exp,w,c
  5673  006A7C  1203               	iorwf	___ftpack@arg+2,f,c
  5674  006A7E  5005               	movf	___ftpack@sign,w,c
  5675  006A80  A4D8               	btfss	status,2,c
  5676  006A82  8E03               	bsf	___ftpack@arg+2,7,c
  5677  006A84  C001  F001         	movff	___ftpack@arg,?___ftpack
  5678  006A88  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5679  006A8C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5680  006A90                     l610:
  5681  006A90  0012               	return	
  5682  006A92                     __end_of___ftpack:
  5683                           	opt stack 0
  5684  0000                     tblptru	equ	0xFF8
  5685                           tblptrh	equ	0xFF7
  5686                           tblptrl	equ	0xFF6
  5687                           tablat	equ	0xFF5
  5688                           prodh	equ	0xFF4
  5689                           prodl	equ	0xFF3
  5690                           wreg	equ	0xFE8
  5691                           postinc1	equ	0xFE6
  5692                           postdec1	equ	0xFE5
  5693                           fsr1h	equ	0xFE2
  5694                           fsr1l	equ	0xFE1
  5695                           postinc2	equ	0xFDE
  5696                           postdec2	equ	0xFDD
  5697                           fsr2h	equ	0xFDA
  5698                           fsr2l	equ	0xFD9
  5699                           status	equ	0xFD8
  5700                           tblptru	equ	0xFF8
  5701                           tblptrh	equ	0xFF7
  5702                           tblptrl	equ	0xFF6
  5703                           tablat	equ	0xFF5
  5704                           prodh	equ	0xFF4
  5705                           prodl	equ	0xFF3
  5706                           wreg	equ	0xFE8
  5707                           postinc1	equ	0xFE6
  5708                           postdec1	equ	0xFE5
  5709                           fsr1h	equ	0xFE2
  5710                           fsr1l	equ	0xFE1
  5711                           postinc2	equ	0xFDE
  5712                           postdec2	equ	0xFDD
  5713                           fsr2h	equ	0xFDA
  5714                           fsr2l	equ	0xFD9
  5715                           status	equ	0xFD8
  5716                           
  5717                           	psect	rparam
  5718  0000                     tblptru	equ	0xFF8
  5719                           tblptrh	equ	0xFF7
  5720                           tblptrl	equ	0xFF6
  5721                           tablat	equ	0xFF5
  5722                           prodh	equ	0xFF4
  5723                           prodl	equ	0xFF3
  5724                           wreg	equ	0xFE8
  5725                           postinc1	equ	0xFE6
  5726                           postdec1	equ	0xFE5
  5727                           fsr1h	equ	0xFE2
  5728                           fsr1l	equ	0xFE1
  5729                           postinc2	equ	0xFDE
  5730                           postdec2	equ	0xFDD
  5731                           fsr2h	equ	0xFDA
  5732                           fsr2l	equ	0xFD9
  5733                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    138     144
    BANK1           256    240     240
    BANK2           256    240     240
    BANK3           256    240     240
    BANK4           256    240     240
    BANK5           256    240     240
    BANK6           256    240     240
    BANK7           256      0       0

Pointer List with Targets:

    defuzzy@mf	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@overall_out_mf(BANK5[120]), fuzzy_system_single2@overall_out_mf(BANK5[120]), fuzzy_system_single@overall_out_mf(BANK0[120]), fuzzy_system@overall_out_mf(BANK0[120]), 

    defuzzy@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@y(BANK6[120]), fuzzy_system_single2@y(BANK6[120]), fuzzy_system_single@y(BANK0[120]), fuzzy_system@y(BANK0[120]), 

    out_mf@result	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@overall_out_mf(BANK5[120]), fuzzy_system_single2@overall_out_mf(BANK5[120]), fuzzy_system_single@overall_out_mf(BANK0[120]), fuzzy_system@overall_out_mf(BANK0[120]), 

    out_mf@z	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf3(BANK4[120]), fuzzy_system_single2@qualified_cons_mf3(BANK4[120]), fuzzy_system_single@qualified_cons_mf3(BANK0[120]), fuzzy_system@qualified_cons_mf3(BANK0[120]), 

    out_mf@y	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf2(BANK4[120]), fuzzy_system_single2@qualified_cons_mf2(BANK4[120]), fuzzy_system_single@qualified_cons_mf2(BANK0[120]), fuzzy_system@qualified_cons_mf2(BANK0[120]), 

    out_mf@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf1(BANK3[120]), fuzzy_system_single2@qualified_cons_mf1(BANK3[120]), fuzzy_system_single@qualified_cons_mf1(BANK0[120]), fuzzy_system@qualified_cons_mf1(BANK0[120]), 

    qualified@y	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf3(BANK4[120]), fuzzy_system_single1@qualified_cons_mf2(BANK4[120]), fuzzy_system_single1@qualified_cons_mf1(BANK3[120]), fuzzy_system_single2@qualified_cons_mf3(BANK4[120]), 
		 -> fuzzy_system_single2@qualified_cons_mf2(BANK4[120]), fuzzy_system_single2@qualified_cons_mf1(BANK3[120]), fuzzy_system_single@qualified_cons_mf3(BANK0[120]), fuzzy_system_single@qualified_cons_mf2(BANK0[120]), 
		 -> fuzzy_system_single@qualified_cons_mf1(BANK0[120]), fuzzy_system@qualified_cons_mf3(BANK0[120]), fuzzy_system@qualified_cons_mf2(BANK0[120]), fuzzy_system@qualified_cons_mf1(BANK0[120]), 

    qualified@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@cons_mf3(BANK5[120]), fuzzy_system_single1@cons_mf1(BANK3[120]), fuzzy_system_single2@cons_mf3(BANK5[120]), fuzzy_system_single2@cons_mf1(BANK3[120]), 
		 -> fuzzy_system_single@cons_mf3(BANK0[120]), fuzzy_system_single@cons_mf2(BANK0[120]), fuzzy_system_single@cons_mf1(BANK0[120]), fuzzy_system@cons_mf3(BANK0[120]), 
		 -> fuzzy_system@cons_mf2(BANK0[120]), fuzzy_system@cons_mf1(BANK0[120]), 

    tri_mf@t_value	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@cons_mf3(BANK5[120]), fuzzy_system_single1@cons_mf2(BANK2[120]), fuzzy_system_single1@cons_mf1(BANK3[120]), fuzzy_system_single1@ante_mf3(BANK2[120]), 
		 -> fuzzy_system_single1@ante_mf2(BANK1[120]), fuzzy_system_single1@ante_mf1(BANK1[120]), fuzzy_system_single2@cons_mf3(BANK5[120]), fuzzy_system_single2@cons_mf2(BANK2[120]), 
		 -> fuzzy_system_single2@cons_mf1(BANK3[120]), fuzzy_system_single2@ante_mf3(BANK2[120]), fuzzy_system_single2@ante_mf2(BANK1[120]), fuzzy_system_single2@ante_mf1(BANK1[120]), 

    tri_mf@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@y(BANK6[120]), fuzzy_system_single1@x(BANK6[120]), fuzzy_system_single2@y(BANK6[120]), fuzzy_system_single2@x(BANK6[120]), 

    linspace@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@y(BANK6[120]), fuzzy_system_single1@x(BANK6[120]), fuzzy_system_single2@y(BANK6[120]), fuzzy_system_single2@x(BANK6[120]), 
		 -> fuzzy_system_single@y(BANK0[120]), fuzzy_system_single@x(BANK0[120]), fuzzy_system@y(BANK0[120]), fuzzy_system@x(BANK0[120]), 


Critical Paths under _main in COMRAM

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2
    _mcu_init->_PWM_DutyCycle1
    _mcu_init->_PWM_DutyCycle2
    _PWM_init2->_OpenPWM2
    _PWM_init1->_OpenPWM1
    _go_back->_PWM_DutyCycle1
    _go_back->_PWM_DutyCycle2
    _PWM_DutyCycle2->___fttol
    _PWM_DutyCycle1->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    _fuzzy_system_single2->_tri_mf
    _fuzzy_system_single1->_tri_mf
    _tri_mf->_triangular
    _triangular->___ftdiv
    _qualified->___ftge
    _out_mf->___ftge
    ___ftge->___wmul
    _linspace->___ftdiv
    ___awtoft->___ftpack
    _defuzzy->___ftdiv
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2
    _fuzzy_system_single2->_tri_mf
    _fuzzy_system_single1->_tri_mf

Critical Paths under _main in BANK1

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK2

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK3

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK4

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK5

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK6

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  183308
                                            125 BANK0     13    13      0
                     _PWM_DutyCycle1
                           ___awtoft
                            ___fttol
               _fuzzy_system_single1
               _fuzzy_system_single2
                      _getCNY70Value
                            _go_back
                           _mcu_init
                      _motor_forward
 ---------------------------------------------------------------------------------
 (1) _motor_forward                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             3     3      0   10113
                                             51 COMRAM     3     3      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                          _PWM_init1
                          _PWM_init2
 ---------------------------------------------------------------------------------
 (2) _PWM_init2                                            1     1      0      68
                                              3 COMRAM     1     1      0
                           _OpenPWM2
 ---------------------------------------------------------------------------------
 (3) _OpenPWM2                                             4     4      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _PWM_init1                                            1     1      0      44
                                              1 COMRAM     1     1      0
                           _OpenPWM1
 ---------------------------------------------------------------------------------
 (3) _OpenPWM1                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _go_back                                              2     1      1   10097
                                             51 COMRAM     2     1      1
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                  _motor_Backforward
 ---------------------------------------------------------------------------------
 (2) _motor_Backforward                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle2                                       9     9      0    5000
                                             42 COMRAM     9     9      0
                          _SetDCPWM2
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM2                                            6     4      2     121
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle1                                       9     9      0    5000
                                             42 COMRAM     9     9      0
                          _SetDCPWM1
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             4     1      3    1746
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     464
                                             27 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM1                                            6     4      2     121
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getCNY70Value                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fuzzy_system_single2                              1457  1454      3   77758
                                             82 COMRAM    12     9      3
                                            122 BANK0      3     3      0
                                              0 BANK1    240   240      0
                                              0 BANK2    240   240      0
                                              0 BANK3    240   240      0
                                              0 BANK4    240   240      0
                                              0 BANK5    240   240      0
                                              0 BANK6    240   240      0
                            _defuzzy
                           _linspace
                             _out_mf
                          _qualified
                             _tri_mf
                         _triangular
 ---------------------------------------------------------------------------------
 (1) _fuzzy_system_single1                              1457  1454      3   77758
                                             82 COMRAM    12     9      3
                                            122 BANK0      3     3      0
                                              0 BANK1    240   240      0
                                              0 BANK2    240   240      0
                                              0 BANK3    240   240      0
                                              0 BANK4    240   240      0
                                              0 BANK5    240   240      0
                                              0 BANK6    240   240      0
                            _defuzzy
                      _getCNY70Value (ARG)
                           _linspace
                             _out_mf
                          _qualified
                             _tri_mf
                         _triangular
 ---------------------------------------------------------------------------------
 (2) _tri_mf                                             135   122     13   18615
                                             69 COMRAM    13     0     13
                                              0 BANK0    122   122      0
                             ___wmul
                         _triangular
 ---------------------------------------------------------------------------------
 (2) _triangular                                          15     3     12   10912
                                             54 COMRAM    15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     469
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _qualified                                           12     5      7    8342
                                             15 COMRAM    12     5      7
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _out_mf                                              10     2      8    7655
                                             15 COMRAM    10     2      8
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1958
                                              6 COMRAM     9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _linspace                                            14     4     10   17288
                                             54 COMRAM    14     4     10
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2027
                                              8 COMRAM     4     1      3
                           ___ftpack
                      _getCNY70Value (ARG)
 ---------------------------------------------------------------------------------
 (2) _defuzzy                                             15    11      4   14107
                                             54 COMRAM    15    11      4
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4187
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2622
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2720
                                             39 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3814
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_DutyCycle1
     _SetDCPWM1
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _getCNY70Value (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   ___awtoft
     ___ftpack
     _getCNY70Value (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
         _getCNY70Value (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___lbtoft (ARG)
       ___ftpack
   _fuzzy_system_single1
     _defuzzy
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _getCNY70Value (ARG)
     _linspace (ARG)
       ___awtoft
         ___ftpack
         _getCNY70Value (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _out_mf (ARG)
       ___ftge
         ___wmul (ARG)
       ___wmul
     _qualified (ARG)
       ___ftge
         ___wmul (ARG)
       ___wmul
     _tri_mf (ARG)
       ___wmul
       _triangular
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _getCNY70Value (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
           ___wmul (ARG)
         ___ftneg
         ___wmul (ARG)
     _triangular (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
         ___wmul (ARG)
       ___ftneg
       ___wmul (ARG)
   _fuzzy_system_single2
     _defuzzy
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _linspace
       ___awtoft
         ___ftpack
         _getCNY70Value (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _out_mf
       ___ftge
         ___wmul (ARG)
       ___wmul
     _qualified
       ___ftge
         ___wmul (ARG)
       ___wmul
     _tri_mf
       ___wmul
       _triangular
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _getCNY70Value (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
           ___wmul (ARG)
         ___ftneg
         ___wmul (ARG)
     _triangular
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _getCNY70Value (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
         ___wmul (ARG)
       ___ftneg
       ___wmul (ARG)
   _getCNY70Value
   _go_back
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _motor_Backforward
   _mcu_init
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _getCNY70Value (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _getCNY70Value (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_init1
       _OpenPWM1
     _PWM_init2
       _OpenPWM2
   _motor_forward

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100     F0      F0      17       93.8%
BITBANK5           100      0       0      14        0.0%
BANK5              100     F0      F0      15       93.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100     F0      F0      13       93.8%
BITBANK3           100      0       0      10        0.0%
BANK3              100     F0      F0      11       93.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100     F0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     F0      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8A      90       5       90.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     68F      20        0.0%
DATA                 0      0     68F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Oct 25 18:21:38 2017

                       ??_motor_forward 0001                                       _i 00EC  
               __size_of_PWM_DutyCycle1 006A                 __size_of_PWM_DutyCycle2 006A  
                                    l95 71AC                     ___wmul@multiplicand 0003  
                           __CFG_BORV$3 000000                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 0027  
                          ___ftadd@exp2 0026                            ___ftadd@sign 0025  
                                   l211 6ACA                                     l117 6F88  
                                   l221 6B28                                     l213 6ADA  
                                   l126 78FA                                     l206 6AA2  
                                   l215 6AEA                                     l207 6B48  
                                   l217 6B02                                     l209 6AB2  
                                   l219 6B12                                     l610 6A90  
                                   l291 678A                                     l292 6794  
                                   l293 6796                                     l704 66BA  
                                   l714 6CE6                                     l651 7382  
                                   l662 742E                                     l671 744A  
                                   l647 7356                                     l648 74BA  
                                   l682 6D8C                                     l694 6EA0  
                                   l679 6DBC                                     l688 694A  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                          __CFG_CPD$OFF 000000                            __CFG_BOR$OFF 000000  
                                   wreg 000FE8                            __CFG_LVP$OFF 000000  
                          ___ftdiv@cntr 0031                            ___ftdiv@sign 0036  
                          qualified@min 0017                            __CFG_WDT$OFF 000000  
                                  l2003 68EC                                    l2013 6948  
                                  l2111 6E40                                    l2007 691C  
                                  l2121 6E68                                    l2033 75B4  
                                  l2107 6E30                                    l2043 7694  
                                  l2027 74F4                                    l2117 6E58  
                                  l2037 75D4                                    l2311 6F56  
                                  l2137 67C4                                    l2241 6F94  
                                  l2313 6F82                                    l2147 6C2E  
                                  l2067 6786                                    l2093 6DFE  
                                  l2245 7076                                    l2165 6C88  
                                  l2087 6DD8                                    l2335 78A6  
                                  l2183 6CD6                                    l2175 6CB0  
                                  l2353 7274                                    l2329 77B0  
                                  l2177 6CBC                                    l2169 6C98  
                                  l2259 7104                                    l2179 6CC0  
                                  l2365 72DA                                    l2535 6B40  
                                  l1921 73EC                                    l1913 73C0  
                                  l1931 741E                                    l1923 73F4  
                                  l2643 6B4E                                    l1861 6A30  
                                  l1853 69FA                                    l1933 7428  
                                  l1925 73FC                                    l2661 6BBE  
                                  l1919 73E2                                    l1865 6A46  
                                  l1857 6A08                                    l1867 6A64  
                                  l1859 6A12                                    l1939 7466  
                                  l1891 7364                                    l1869 6A6E  
                                  l1949 7496                                    l1965 6D28  
                                  l1959 6D02                                    l1897 7390  
                                  l1985 6D66                                    u2001 6DE8  
                                  u2010 6DF0                                    u2100 6C9E  
                                  u2051 6C24                                    u2070 6C4C  
                                  u3017 6982                                    u2075 6C44  
                                  u1811 6D12                                    u1820 6D1A  
                                  u1581 7320                                    u1591 7334  
                                  u1915 75C4                                    u2830 6B38  
                                  u1791 6CF8                                    u2680 6AFA  
                                  u1945 66FC                                    u2780 6B22  
                                  u1981 6DCE                                    u1975 6736  
                                  _TMR2 000FCC                                    _main 6B4A  
                          ___ftpack@arg 0001                            ___ftpack@exp 0004  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0000                           __CFG_IESO$OFF 000000  
                         __CFG_MCLRE$ON 000000                            ___ftmul@cntr 001A  
                          ___ftmul@sign 001B                            ___fttol@exp1 002A  
                          ___fttol@lval 0026                           __CFG_PLLDIV$1 000000  
                        __CFG_CCP2MX$ON 000000                                   ?_main 0001  
                       __end_of___ftadd 74BC                         __end_of___ftdiv 6DBE  
                       __end_of___ftneg 66C8                         __end_of___ftmul 6EA2  
                       __end_of___fttol 6CE8                                   _T2CON 000FCA  
                        __CFG_DEBUG$OFF 000000                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                                 _PORTD 000F83                                   _PORTE 000F84  
                         __CFG_USBDIV$2 000000                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                         __CFG_PWRT$OFF 000000                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
               PWM_DutyCycle1@DutyCycle 002F                           __CFG_WRT3$OFF 000000  
                       __end_of_defuzzy 7310                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                       __end_of_go_back 661C                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                        __CFG_EBTRB$OFF 000000                           ___awtoft@sign 000C  
                ??_fuzzy_system_single1 0056                  ??_fuzzy_system_single2 0056  
                          out_mf@result 0010                           ___ftpack@sign 0005  
                                 main@a 00E7                                   main@b 00E1  
                                 tablat 000FF5                 PWM_DutyCycle2@DutyCycle 002F  
                                 status 000FD8                          __CFG_ICPRT$OFF 000000  
                    __size_of_PWM_init1 001E                      __size_of_PWM_init2 001E  
                       __initialization 66C8                            __end_of_main 6C14  
                      __end_of_OpenPWM1 6608                        __end_of_OpenPWM2 67A0  
                                ??_main 00DD                           ___fttol@sign1 0025  
                         __activetblptr 000003                           linspace@start 0039  
                                _CCPR1L 000FBE                                  _CCPR2L 000FBB  
                      __end_of___awtoft 67E8                        __end_of___ftpack 6A92  
                      __end_of___lbtoft 667C  fuzzy_system_single2@qualified_cons_mf1 0378  
fuzzy_system_single2@qualified_cons_mf2 0478  fuzzy_system_single2@qualified_cons_mf3 0400  
    fuzzy_system_single2@overall_out_mf 0578                      __size_of_SetDCPWM1 003A  
                    __size_of_SetDCPWM2 003A                          __CFG_XINST$OFF 000000  
                                ___ftge 68BC                                  ___wmul 667C  
                             ??___ftadd 0022                          _PWM_DutyCycle1 67E8  
                        _PWM_DutyCycle2 6852                          __CFG_STVREN$ON 000000  
                             ??___ftdiv 002E                               ??___ftneg 0004  
                             ??___ftmul 0013                               ??___fttol 0020  
                      __end_of_mcu_init 69EA                               ??_defuzzy 003B  
                      __end_of_linspace 708C                                  _out_mf 76A2  
                                _tri_mf 708C                               ??_go_back 0035  
                 ___ftmul@f3_as_product 0017              fuzzy_system_single1@output 00DA  
            fuzzy_system_single2@output 00DA                            triangular@ux 0043  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                       __end_of_PWM_init1 663A  
                     __end_of_PWM_init2 6658                       _motor_Backforward 65E2  
                            __accesstop 0060                 __end_of__initialization 66EC  
                       __CFG_PBADEN$OFF 000000                              ___ftadd@f1 001C  
                            ___ftadd@f2 001F                      ?_motor_Backforward 0001  
                            ___ftge@ff1 0007                              ___ftge@ff2 000A  
          PWM_DutyCycle2@percentageDuty 0031                              ___ftdiv@f1 0028  
                            ___ftdiv@f2 002B                              ___ftdiv@f3 0032  
                            ___ftneg@f1 0001                              ___awtoft@c 0009  
                            ___lbtoft@c 000C                  __end_of_PWM_DutyCycle1 6852  
                __end_of_PWM_DutyCycle2 68BC                              ___ftmul@f1 000D  
                            ___ftmul@f2 0010                              ___fttol@f1 001C  
                        __pcstackCOMRAM 0001                     ??_motor_Backforward 0001  
                          __pidataBANK0 65E0                       __end_of_SetDCPWM1 672C  
                     __end_of_SetDCPWM2 6766                             linspace@end 003C  
             __end_of_motor_Backforward 65EC                           tri_mf@t_value 0046  
                            __pbssBANK0 00EA               fuzzy_system_single1@input 0053  
             fuzzy_system_single2@input 0053                               ?_OpenPWM1 0001  
                             ?_OpenPWM2 0001                         ?_PWM_DutyCycle1 0001  
                       ?_PWM_DutyCycle2 0001                                 ?___ftge 0007  
                               ?___wmul 0001                  __size_of_getCNY70Value 00B8  
                               _CCP1CON 000FBD                                 _CCP2CON 000FBA  
                 __end_of_motor_forward 65F6                               ?___awtoft 0009  
                             ?___ftpack 0001                               ?___lbtoft 0009  
                               ?_out_mf 0010                                 ?_tri_mf 0046  
                    __size_of_qualified 00E8                         __CFG_VREGEN$OFF 000000  
                             ?_mcu_init 0001                              ??_OpenPWM1 0001  
                            ??_OpenPWM2 0001                               ?_linspace 0037  
                               __Hparam 0000                                 __Lparam 0000  
                       __size_of___ftge 0090                                 ___ftadd 7310  
                               ___ftdiv 6CE8                                 ___ftneg 66A2  
                       __size_of___wmul 0026                                 ___ftmul 6DBE  
                               ___fttol 6C14                                 __pcinit 66C8  
                            ??___awtoft 000C                              ??___ftpack 0006  
                            ??___lbtoft 000C                                 __ramtop 0800  
                               _defuzzy 71AE                                 __ptext0 6B4A  
                               __ptext1 65EC                                 __ptext2 694C  
                               __ptext3 663A                                 __ptext4 6766  
                               __ptext5 661C                                 __ptext6 65F6  
                               __ptext7 6608                                 __ptext8 65E2  
                               __ptext9 6852                                 _go_back 6608  
                       __size_of_out_mf 025A                         __size_of_tri_mf 0122  
                               _countup 00EE                               _T2CONbits 000FCA  
            __size_of_motor_Backforward 000A                           _getCNY70Value 6A92  
                  end_of_initialization 66EC            fuzzy_system_single1@ante_mf1 0100  
          fuzzy_system_single1@ante_mf2 0178            fuzzy_system_single1@ante_mf3 0278  
         __size_of_fuzzy_system_single1 0382           __size_of_fuzzy_system_single2 0382  
          fuzzy_system_single1@cons_mf1 0300            fuzzy_system_single1@cons_mf2 0200  
          fuzzy_system_single1@cons_mf3 0500                              ??_mcu_init 0034  
          fuzzy_system_single2@ante_mf1 0100            fuzzy_system_single2@ante_mf2 0178  
          fuzzy_system_single2@ante_mf3 0278                              ??_linspace 0041  
          fuzzy_system_single2@cons_mf1 0300            fuzzy_system_single2@cons_mf2 0200  
          fuzzy_system_single2@cons_mf3 0500                       __end_of_qualified 6F8A  
                               postdec1 000FE5                                 postdec2 000FDD  
                               out_mf@i 0018                                 out_mf@x 0012  
                               out_mf@y 0014                                 out_mf@z 0016  
                               postinc1 000FE6                                 postinc2 000FDE  
                               tri_mf@a 004A                                 tri_mf@b 004D  
                               tri_mf@c 0050                                 tri_mf@i 00D8  
                               tri_mf@x 0048                              defuzzy@out 003B  
                             _PORTBbits 000F81                               _PORTDbits 000F83  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                        ?_getCNY70Value 0001                              _triangular 74BC  
                             _PWM_init1 661C                               _PWM_init2 663A  
fuzzy_system_single1@qualified_cons_mf1 0378  fuzzy_system_single1@qualified_cons_mf2 0478  
fuzzy_system_single1@qualified_cons_mf3 0400                             ___ftdiv@exp 0035  
                           ___ftmul@exp 0016                          __end_of___ftge 694C  
                        __end_of___wmul 66A2                          __end_of_out_mf 78FC  
                        __end_of_tri_mf 71AE                     start_initialization 66C8  
                             _SetDCPWM1 66F2                               _SetDCPWM2 672C  
                       SetDCPWM1@DCycle 0005                         SetDCPWM2@DCycle 0005  
                             _DutyCycle 00EA                              ?_PWM_init1 0001  
                            ?_PWM_init2 0001                        ??_PWM_DutyCycle1 002B  
                      ??_PWM_DutyCycle2 002B                            linspace@size 003F  
                fuzzy_system_single1@w1 0056                  fuzzy_system_single1@w2 0059  
                fuzzy_system_single1@w3 005C                  fuzzy_system_single2@w1 0056  
                fuzzy_system_single2@w2 0059                  fuzzy_system_single2@w3 005C  
                     __size_of_OpenPWM1 0012                       __size_of_OpenPWM2 003A  
                              ??___ftge 000D                                ??___wmul 0005  
                           __pdataBANK0 00EE                        __CFG_LPT1OSC$OFF 000000  
                           triangular@a 0037                             triangular@b 003A  
                           triangular@c 003D                             triangular@x 0040  
                              ??_out_mf 0018                                ??_tri_mf 0053  
                     __size_of___awtoft 0048                       __size_of___ftpack 00A8  
                     __size_of___lbtoft 0024                             __pbssCOMRAM 005F  
                       ??_getCNY70Value 0003                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                           __pcstackBANK2 0200  
                         __pcstackBANK3 0300                           __pcstackBANK4 0400  
                         __pcstackBANK5 0500                           __pcstackBANK6 0600  
                            ?_SetDCPWM1 0001                              ?_SetDCPWM2 0001  
    fuzzy_system_single1@overall_out_mf 0578                             ?_triangular 0037  
                     __size_of_mcu_init 009E                               _main$1392 00E4  
                     __size_of_linspace 0102                                ?___ftadd 001C  
                              ?___ftdiv 0028                                ?___ftneg 0001  
                              ?___ftmul 000D                                ?___fttol 001C  
                              ?_defuzzy 0037                                ?_go_back 0034  
                           ??_PWM_init1 0002                             ??_PWM_init2 0004  
          PWM_DutyCycle1@percentageDuty 0031                  __size_of_motor_forward 000A  
                        ___wmul@product 0005                                _PIE1bits 000F9D  
                              _PIR1bits 000F9E                        __CFG_WDTPS$32768 000000  
                             defuzzy@mf 0039            __end_of_fuzzy_system_single1 7C7E  
          __end_of_fuzzy_system_single2 8000                               _qualified 6EA2  
                   __size_of_triangular 01E6                       ___wmul@multiplier 0001  
                            qualified@i 001A                              qualified@w 0014  
                            qualified@x 0012                              qualified@y 0010  
                           ??_SetDCPWM1 0003                             ??_SetDCPWM2 0003  
                    SetDCPWM1@dutycycle 0001                              tri_mf@temp 0060  
                          _Timer2Config 005F                                _OpenPWM1 65F6  
                              _OpenPWM2 6766                   fuzzy_system_single1@x 0600  
                 fuzzy_system_single1@y 0678                   fuzzy_system_single2@x 0600  
                 fuzzy_system_single2@y 0678                                __Hrparam 0000  
                              __Lrparam 0000                      SetDCPWM2@dutycycle 0001  
                             mcu_init@i 0035                              ?_qualified 0010  
                      __size_of___ftadd 01AC                        PWM_DutyCycle1@DC 0032  
                      PWM_DutyCycle2@DC 0032                        __size_of___ftdiv 00D6  
                      __size_of___ftneg 0026                        __size_of___ftmul 00E4  
                      __size_of___fttol 00D4                           _motor_forward 65EC  
                              ___awtoft 67A0                                ___ftpack 69EA  
                              ___lbtoft 6658                          OpenPWM2@ccp2mx 0003  
                 __CFG_FOSC$INTOSCIO_EC 000000                               linspace@i 0043  
                      __size_of_defuzzy 0162                               linspace@x 0037  
                      __size_of_go_back 0014                          OpenPWM1@period 0001  
                        OpenPWM2@period 0002                                __ptext10 672C  
                              __ptext11 67E8                                __ptext20 66A2  
                              __ptext12 6658                                __ptext21 6EA2  
                              __ptext13 6C14                                __ptext30 7310  
                              __ptext22 76A2                                __ptext14 66F2  
                              __ptext31 69EA                                __ptext23 68BC  
                              __ptext15 6A92                                __ptext24 6F8A  
                              __ptext16 7C7E                                __ptext25 67A0  
                              __ptext17 78FC                                __ptext26 71AE  
                              __ptext18 708C                                __ptext27 667C  
                              __ptext19 74BC                                __ptext28 6DBE  
                              __ptext29 6CE8                         PWM_init1@period 0002  
                       PWM_init2@period 0004                                _mcu_init 694C  
                         __size_of_main 00CA                                _linspace 6F8A  
                              defuzzy@i 0044                                defuzzy@x 0037  
                        ?_motor_forward 0001                   __CFG_CPUDIV$OSC1_PLL2 000000  
                          ??_triangular 0043                    _fuzzy_system_single1 78FC  
                  _fuzzy_system_single2 7C7E                              _OSCCONbits 000FD3  
                           ??_qualified 0017                             defuzzy@sum1 003E  
                           defuzzy@sum2 0041                      __end_of_triangular 76A2  
                        go_back@m_right 0035                   __end_of_getCNY70Value 6B4A  
                 ?_fuzzy_system_single1 0053                   ?_fuzzy_system_single2 0053  
                         go_back@m_left 0034  
